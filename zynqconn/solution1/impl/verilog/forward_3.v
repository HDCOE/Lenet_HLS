// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module forward_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_layer_5_16_1_0_14_14_6_input_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_input_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_input_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_we0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_d0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_W_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_W_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_W_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_q0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] conv_layer_5_16_1_0_14_14_6_input_data_V_address0;
output   conv_layer_5_16_1_0_14_14_6_input_data_V_ce0;
input  [15:0] conv_layer_5_16_1_0_14_14_6_input_data_V_q0;
output  [10:0] conv_layer_5_16_1_0_14_14_6_output_data_V_address0;
output   conv_layer_5_16_1_0_14_14_6_output_data_V_ce0;
output   conv_layer_5_16_1_0_14_14_6_output_data_V_we0;
output  [15:0] conv_layer_5_16_1_0_14_14_6_output_data_V_d0;
input  [15:0] conv_layer_5_16_1_0_14_14_6_output_data_V_q0;
output  [11:0] conv_layer_5_16_1_0_14_14_6_W_data_V_address0;
output   conv_layer_5_16_1_0_14_14_6_W_data_V_ce0;
input  [15:0] conv_layer_5_16_1_0_14_14_6_W_data_V_q0;
output  [10:0] conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0;
output   conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0;
output   conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0;
output  [15:0] conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0;
input  [15:0] conv_layer_5_16_1_0_14_14_6_inpad_data_V_q0;
output  [10:0] conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0;
output   conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0;
output   conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0;
output  [15:0] conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0;
input  [15:0] conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_q0;
output  [10:0] conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0;
output   conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0;
output   conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0;
output  [14:0] conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0;
input  [14:0] conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] conv_layer_5_16_1_0_14_14_6_output_data_V_address0;
reg conv_layer_5_16_1_0_14_14_6_output_data_V_ce0;
reg conv_layer_5_16_1_0_14_14_6_output_data_V_we0;
reg[15:0] conv_layer_5_16_1_0_14_14_6_output_data_V_d0;
reg[10:0] conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0;
reg conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0;
reg conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0;
reg[10:0] conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0;
reg conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0;
reg conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] p_i0_0_i_cast7_fu_200_p1;
reg   [63:0] p_i0_0_i_cast7_reg_351;
wire    ap_CS_fsm_state3;
wire   [10:0] p_i0_fu_211_p2;
reg   [10:0] p_i0_reg_359;
wire   [0:0] tmp_fu_205_p2;
wire   [10:0] p_x_assign_cast6_fu_217_p1;
reg   [10:0] p_x_assign_cast6_reg_369;
wire    ap_CS_fsm_state5;
wire   [3:0] ix_fu_227_p2;
reg   [3:0] ix_reg_377;
wire   [3:0] iy_fu_239_p2;
reg   [3:0] iy_reg_385;
wire    ap_CS_fsm_state6;
wire   [10:0] tmp1_cast_fu_271_p1;
reg   [10:0] tmp1_cast_reg_390;
wire   [0:0] exitcond8_i_fu_233_p2;
wire   [4:0] iz_fu_281_p2;
reg   [4:0] iz_reg_398;
wire    ap_CS_fsm_state7;
wire   [10:0] next_mul_fu_287_p2;
reg   [10:0] next_mul_reg_403;
wire   [0:0] exitcond_i_fu_275_p2;
wire   [63:0] tmp_8_i_fu_303_p1;
reg   [63:0] tmp_8_i_reg_408;
wire   [63:0] p_i0_0_i1_cast3_fu_329_p1;
reg   [63:0] p_i0_0_i1_cast3_reg_418;
wire    ap_CS_fsm_state9;
wire   [10:0] p_i0_6_fu_340_p2;
reg   [10:0] p_i0_6_reg_426;
wire   [0:0] tmp_s_fu_334_p2;
wire    grp_forward_conv_1_fu_188_ap_start;
wire    grp_forward_conv_1_fu_188_ap_done;
wire    grp_forward_conv_1_fu_188_ap_idle;
wire    grp_forward_conv_1_fu_188_ap_ready;
wire   [10:0] grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_input_data_V_address0;
wire    grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0;
wire   [10:0] grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_address0;
wire    grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0;
wire    grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_we0;
wire   [15:0] grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_d0;
wire   [11:0] grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_W_data_V_address0;
wire    grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0;
wire   [10:0] grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0;
wire    grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0;
wire    grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0;
wire   [15:0] grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0;
reg   [10:0] p_i0_0_i_reg_122;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
reg   [3:0] p_x_assign_reg_133;
reg   [3:0] p_y_assign_reg_144;
wire   [0:0] exitcond7_i_fu_221_p2;
reg   [4:0] p_z_assign_reg_155;
wire    ap_CS_fsm_state8;
reg   [10:0] phi_mul_reg_166;
reg   [10:0] p_i0_0_i1_reg_177;
wire    ap_CS_fsm_state10;
reg    grp_forward_conv_1_fu_188_ap_start_reg;
wire   [15:0] extLd_fu_346_p1;
wire   [4:0] p_shl1_i_fu_253_p3;
wire   [6:0] p_shl1_i_cast_fu_261_p1;
wire   [6:0] p_shl_i_fu_245_p3;
wire   [6:0] tmp1_fu_265_p2;
wire   [10:0] tmp2_fu_293_p2;
wire   [10:0] tmp_7_i_fu_298_p2;
wire   [0:0] tmp_74_fu_312_p3;
wire   [14:0] tmp_73_fu_308_p1;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 grp_forward_conv_1_fu_188_ap_start_reg = 1'b0;
end

forward_conv_1 grp_forward_conv_1_fu_188(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_forward_conv_1_fu_188_ap_start),
    .ap_done(grp_forward_conv_1_fu_188_ap_done),
    .ap_idle(grp_forward_conv_1_fu_188_ap_idle),
    .ap_ready(grp_forward_conv_1_fu_188_ap_ready),
    .conv_layer_5_16_1_0_14_14_6_input_data_V_address0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_input_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_input_data_V_ce0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_input_data_V_q0(conv_layer_5_16_1_0_14_14_6_input_data_V_q0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_address0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_ce0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_we0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_we0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_d0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_d0),
    .conv_layer_5_16_1_0_14_14_6_W_data_V_address0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_W_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_W_data_V_ce0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_W_data_V_q0(conv_layer_5_16_1_0_14_14_6_W_data_V_q0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0(grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_q0(conv_layer_5_16_1_0_14_14_6_inpad_data_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_forward_conv_1_fu_188_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_forward_conv_1_fu_188_ap_start_reg <= 1'b1;
        end else if ((grp_forward_conv_1_fu_188_ap_ready == 1'b1)) begin
            grp_forward_conv_1_fu_188_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond7_i_fu_221_p2 == 1'd1))) begin
        p_i0_0_i1_reg_177 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_i0_0_i1_reg_177 <= p_i0_6_reg_426;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_i0_0_i_reg_122 <= p_i0_reg_359;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_forward_conv_1_fu_188_ap_done == 1'b1))) begin
        p_i0_0_i_reg_122 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_x_assign_reg_133 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond8_i_fu_233_p2 == 1'd1))) begin
        p_x_assign_reg_133 <= ix_reg_377;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_i_fu_221_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        p_y_assign_reg_144 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i_fu_275_p2 == 1'd1))) begin
        p_y_assign_reg_144 <= iy_reg_385;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_i_fu_233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        p_z_assign_reg_155 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_z_assign_reg_155 <= iz_reg_398;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_i_fu_233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul_reg_166 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_mul_reg_166 <= next_mul_reg_403;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ix_reg_377 <= ix_fu_227_p2;
        p_x_assign_cast6_reg_369[3 : 0] <= p_x_assign_cast6_fu_217_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        iy_reg_385 <= iy_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        iz_reg_398 <= iz_fu_281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        next_mul_reg_403 <= next_mul_fu_287_p2;
        tmp_8_i_reg_408[10 : 0] <= tmp_8_i_fu_303_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_i0_0_i1_cast3_reg_418[10 : 0] <= p_i0_0_i1_cast3_fu_329_p1[10 : 0];
        p_i0_6_reg_426 <= p_i0_6_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_i0_0_i_cast7_reg_351[10 : 0] <= p_i0_0_i_cast7_fu_200_p1[10 : 0];
        p_i0_reg_359 <= p_i0_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_i_fu_233_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp1_cast_reg_390[6 : 1] <= tmp1_cast_fu_271_p1[6 : 1];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_s_fu_334_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_s_fu_334_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_address0 = p_i0_0_i1_cast3_reg_418;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_address0 = p_i0_0_i_cast7_fu_200_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_address0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_address0;
    end else begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10))) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_ce0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0;
    end else begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_d0 = extLd_fu_346_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_d0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_d0;
    end else begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_we0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_output_data_V_we0;
    end else begin
        conv_layer_5_16_1_0_14_14_6_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0 = tmp_8_i_fu_303_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0 = p_i0_0_i_cast7_reg_351;
    end else begin
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7))) begin
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0 = 1'b1;
    end else begin
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0 = 1'b1;
    end else begin
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0 = p_i0_0_i1_cast3_fu_329_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0 = tmp_8_i_reg_408;
    end else begin
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0 = 1'b1;
    end else begin
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0 = 1'b1;
    end else begin
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_forward_conv_1_fu_188_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_fu_205_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond7_i_fu_221_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond8_i_fu_233_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i_fu_275_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_s_fu_334_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign conv_layer_5_16_1_0_14_14_6_W_data_V_address0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_W_data_V_address0;

assign conv_layer_5_16_1_0_14_14_6_W_data_V_ce0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0;

assign conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0;

assign conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0;

assign conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0;

assign conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0;

assign conv_layer_5_16_1_0_14_14_6_input_data_V_address0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_input_data_V_address0;

assign conv_layer_5_16_1_0_14_14_6_input_data_V_ce0 = grp_forward_conv_1_fu_188_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0;

assign conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0 = conv_layer_5_16_1_0_14_14_6_output_data_V_q0;

assign conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0 = ((tmp_74_fu_312_p3[0:0] === 1'b1) ? 15'd0 : tmp_73_fu_308_p1);

assign exitcond7_i_fu_221_p2 = ((p_x_assign_reg_133 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond8_i_fu_233_p2 = ((p_y_assign_reg_144 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i_fu_275_p2 = ((p_z_assign_reg_155 == 5'd16) ? 1'b1 : 1'b0);

assign extLd_fu_346_p1 = conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_q0;

assign grp_forward_conv_1_fu_188_ap_start = grp_forward_conv_1_fu_188_ap_start_reg;

assign ix_fu_227_p2 = (p_x_assign_reg_133 + 4'd1);

assign iy_fu_239_p2 = (p_y_assign_reg_144 + 4'd1);

assign iz_fu_281_p2 = (p_z_assign_reg_155 + 5'd1);

assign next_mul_fu_287_p2 = (11'd100 + phi_mul_reg_166);

assign p_i0_0_i1_cast3_fu_329_p1 = p_i0_0_i1_reg_177;

assign p_i0_0_i_cast7_fu_200_p1 = p_i0_0_i_reg_122;

assign p_i0_6_fu_340_p2 = (p_i0_0_i1_reg_177 + 11'd1);

assign p_i0_fu_211_p2 = (p_i0_0_i_reg_122 + 11'd1);

assign p_shl1_i_cast_fu_261_p1 = p_shl1_i_fu_253_p3;

assign p_shl1_i_fu_253_p3 = {{p_y_assign_reg_144}, {1'd0}};

assign p_shl_i_fu_245_p3 = {{p_y_assign_reg_144}, {3'd0}};

assign p_x_assign_cast6_fu_217_p1 = p_x_assign_reg_133;

assign tmp1_cast_fu_271_p1 = tmp1_fu_265_p2;

assign tmp1_fu_265_p2 = (p_shl1_i_cast_fu_261_p1 + p_shl_i_fu_245_p3);

assign tmp2_fu_293_p2 = (p_x_assign_cast6_reg_369 + phi_mul_reg_166);

assign tmp_73_fu_308_p1 = conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_q0[14:0];

assign tmp_74_fu_312_p3 = conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_q0[32'd15];

assign tmp_7_i_fu_298_p2 = (tmp2_fu_293_p2 + tmp1_cast_reg_390);

assign tmp_8_i_fu_303_p1 = tmp_7_i_fu_298_p2;

assign tmp_fu_205_p2 = ((p_i0_0_i_reg_122 == 11'd1600) ? 1'b1 : 1'b0);

assign tmp_s_fu_334_p2 = ((p_i0_0_i1_reg_177 == 11'd1600) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    p_i0_0_i_cast7_reg_351[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    p_x_assign_cast6_reg_369[10:4] <= 7'b0000000;
    tmp1_cast_reg_390[0] <= 1'b0;
    tmp1_cast_reg_390[10:7] <= 4'b0000;
    tmp_8_i_reg_408[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    p_i0_0_i1_cast3_reg_418[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //forward_3
