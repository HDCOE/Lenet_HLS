-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lenet is
generic (
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    inStream_V_V_TVALID : IN STD_LOGIC;
    inStream_V_V_TREADY : OUT STD_LOGIC;
    outStream_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    outStream_V_V_TVALID : OUT STD_LOGIC;
    outStream_V_V_TREADY : IN STD_LOGIC;
    c1w_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    c1w_V_V_TVALID : IN STD_LOGIC;
    c1w_V_V_TREADY : OUT STD_LOGIC;
    c3w_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    c3w_V_V_TVALID : IN STD_LOGIC;
    c3w_V_V_TREADY : OUT STD_LOGIC;
    c5w_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    c5w_V_V_TVALID : IN STD_LOGIC;
    c5w_V_V_TREADY : OUT STD_LOGIC;
    fcw_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    fcw_V_V_TVALID : IN STD_LOGIC;
    fcw_V_V_TREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of lenet is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lenet,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.690250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=132,HLS_SYN_DSP=4,HLS_SYN_FF=4100,HLS_SYN_LUT=10661,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (77 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (77 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (77 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (77 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (77 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (77 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (77 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (77 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (77 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (77 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (77 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (77 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (77 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv16_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv13_1260 : STD_LOGIC_VECTOR (12 downto 0) := "1001001100000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv8_19 : STD_LOGIC_VECTOR (7 downto 0) := "00011001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv11_498 : STD_LOGIC_VECTOR (10 downto 0) := "10010011000";
    constant ap_const_lv11_640 : STD_LOGIC_VECTOR (10 downto 0) := "11001000000";
    constant ap_const_lv12_96 : STD_LOGIC_VECTOR (11 downto 0) := "000010010110";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv9_190 : STD_LOGIC_VECTOR (8 downto 0) := "110010000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv16_190 : STD_LOGIC_VECTOR (15 downto 0) := "0000000110010000";
    constant ap_const_lv7_77 : STD_LOGIC_VECTOR (6 downto 0) := "1110111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (77 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inStream_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal inStream_V_V_0_vld_in : STD_LOGIC;
    signal inStream_V_V_0_vld_out : STD_LOGIC;
    signal inStream_V_V_0_ack_in : STD_LOGIC;
    signal inStream_V_V_0_ack_out : STD_LOGIC;
    signal inStream_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal inStream_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal inStream_V_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_V_0_sel : STD_LOGIC;
    signal inStream_V_V_0_load_A : STD_LOGIC;
    signal inStream_V_V_0_load_B : STD_LOGIC;
    signal inStream_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_V_0_state_cmp_full : STD_LOGIC;
    signal outStream_V_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal outStream_V_V_1_vld_in : STD_LOGIC;
    signal outStream_V_V_1_vld_out : STD_LOGIC;
    signal outStream_V_V_1_ack_in : STD_LOGIC;
    signal outStream_V_V_1_ack_out : STD_LOGIC;
    signal outStream_V_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal outStream_V_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal outStream_V_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_V_1_sel : STD_LOGIC;
    signal outStream_V_V_1_load_A : STD_LOGIC;
    signal outStream_V_V_1_load_B : STD_LOGIC;
    signal outStream_V_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_V_1_state_cmp_full : STD_LOGIC;
    signal c1w_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal c1w_V_V_0_vld_in : STD_LOGIC;
    signal c1w_V_V_0_vld_out : STD_LOGIC;
    signal c1w_V_V_0_ack_in : STD_LOGIC;
    signal c1w_V_V_0_ack_out : STD_LOGIC;
    signal c1w_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal c1w_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal c1w_V_V_0_sel_rd : STD_LOGIC := '0';
    signal c1w_V_V_0_sel_wr : STD_LOGIC := '0';
    signal c1w_V_V_0_sel : STD_LOGIC;
    signal c1w_V_V_0_load_A : STD_LOGIC;
    signal c1w_V_V_0_load_B : STD_LOGIC;
    signal c1w_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal c1w_V_V_0_state_cmp_full : STD_LOGIC;
    signal c3w_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal c3w_V_V_0_vld_in : STD_LOGIC;
    signal c3w_V_V_0_vld_out : STD_LOGIC;
    signal c3w_V_V_0_ack_in : STD_LOGIC;
    signal c3w_V_V_0_ack_out : STD_LOGIC;
    signal c3w_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal c3w_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal c3w_V_V_0_sel_rd : STD_LOGIC := '0';
    signal c3w_V_V_0_sel_wr : STD_LOGIC := '0';
    signal c3w_V_V_0_sel : STD_LOGIC;
    signal c3w_V_V_0_load_A : STD_LOGIC;
    signal c3w_V_V_0_load_B : STD_LOGIC;
    signal c3w_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal c3w_V_V_0_state_cmp_full : STD_LOGIC;
    signal c5w_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal c5w_V_V_0_vld_in : STD_LOGIC;
    signal c5w_V_V_0_vld_out : STD_LOGIC;
    signal c5w_V_V_0_ack_in : STD_LOGIC;
    signal c5w_V_V_0_ack_out : STD_LOGIC;
    signal c5w_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal c5w_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal c5w_V_V_0_sel_rd : STD_LOGIC := '0';
    signal c5w_V_V_0_sel_wr : STD_LOGIC := '0';
    signal c5w_V_V_0_sel : STD_LOGIC;
    signal c5w_V_V_0_load_A : STD_LOGIC;
    signal c5w_V_V_0_load_B : STD_LOGIC;
    signal c5w_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal c5w_V_V_0_state_cmp_full : STD_LOGIC;
    signal fcw_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal fcw_V_V_0_vld_in : STD_LOGIC;
    signal fcw_V_V_0_vld_out : STD_LOGIC;
    signal fcw_V_V_0_ack_in : STD_LOGIC;
    signal fcw_V_V_0_ack_out : STD_LOGIC;
    signal fcw_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal fcw_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal fcw_V_V_0_sel_rd : STD_LOGIC := '0';
    signal fcw_V_V_0_sel_wr : STD_LOGIC := '0';
    signal fcw_V_V_0_sel : STD_LOGIC;
    signal fcw_V_V_0_load_A : STD_LOGIC;
    signal fcw_V_V_0_load_B : STD_LOGIC;
    signal fcw_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal fcw_V_V_0_state_cmp_full : STD_LOGIC;
    signal start : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_W_size_x_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c1_W_size_x_ce0 : STD_LOGIC;
    signal c1_W_size_x_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c1_W_size_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c1_W_size_y_ce0 : STD_LOGIC;
    signal c1_W_size_y_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c1_W_size_z_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c1_W_size_z_ce0 : STD_LOGIC;
    signal c1_W_size_z_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal c3_W_size_x_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal c3_W_size_x_ce0 : STD_LOGIC;
    signal c3_W_size_x_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c3_W_size_y_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal c3_W_size_y_ce0 : STD_LOGIC;
    signal c3_W_size_y_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c3_W_size_z_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal c3_W_size_z_ce0 : STD_LOGIC;
    signal c3_W_size_z_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal c5_W_size_x_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal c5_W_size_x_ce0 : STD_LOGIC;
    signal c5_W_size_x_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c5_W_size_y_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal c5_W_size_y_ce0 : STD_LOGIC;
    signal c5_W_size_y_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal c5_W_size_z_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal c5_W_size_z_ce0 : STD_LOGIC;
    signal c5_W_size_z_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal fc6_W_size_x_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal fc6_W_size_x_ce0 : STD_LOGIC;
    signal fc6_W_size_x_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc6_W_size_y_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal fc6_W_size_y_ce0 : STD_LOGIC;
    signal fc6_W_size_y_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc6_W_size_z_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal fc6_W_size_z_ce0 : STD_LOGIC;
    signal fc6_W_size_z_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal inStream_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal exitcond2_fu_2854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal c1w_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal exitcond5_fu_2889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c3w_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal exitcond7_fu_2934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5w_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal exitcond9_fu_2979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fcw_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal exitcond1_fu_3048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1873_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_1_fu_1890_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal phi_mul_cast_fu_1901_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_mul_cast_reg_3301 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal next_mul_fu_1905_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal next_mul_reg_3306 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_fu_1911_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_reg_3311 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_fu_1923_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_3_fu_1955_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_4_fu_1972_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_5_fu_1989_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal next_mul9_fu_2000_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal next_mul9_reg_3351 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i_8_fu_2012_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_8_reg_3359 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_i_i_fu_2006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_2047_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i_reg_3379 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i_7_fu_2062_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i_6_fu_2089_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal i_9_fu_2106_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal i_10_fu_2123_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal i_11_fu_2140_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal i_12_fu_2157_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal i_13_fu_2174_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal next_mul1_fu_2185_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal next_mul1_reg_3440 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_18_fu_2191_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_18_reg_3445 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_14_fu_2203_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal i_15_fu_2236_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i_16_fu_2253_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal i_17_fu_2270_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal next_mul2_fu_2281_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal next_mul2_reg_3485 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal i_20_fu_2293_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_20_reg_3493 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_i_i1_fu_2287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_fu_2332_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i1_reg_3513 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal i_18_fu_2347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal i_37_fu_2374_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal i_42_fu_2391_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal i_43_fu_2408_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal i_44_fu_2425_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal i_45_fu_2442_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal i_46_fu_2459_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal next_mul3_fu_2470_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_mul3_reg_3574 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal tmp_33_fu_2476_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_33_reg_3579 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_47_fu_2488_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal i_48_fu_2521_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal i_49_fu_2538_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal i_50_fu_2555_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal next_mul4_fu_2566_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_mul4_reg_3619 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal i_51_fu_2578_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_51_reg_3627 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_i_i2_fu_2572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_W_size_x_load_reg_3647 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal c5_W_size_y_load_reg_3652 : STD_LOGIC_VECTOR (2 downto 0);
    signal c5_W_size_z_load_reg_3657 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i2_fu_2610_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_i2_reg_3662 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal i_19_fu_2625_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal i_52_fu_2652_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal i_53_fu_2669_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal tmp_44_fu_2680_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_reg_3691 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal tmp_47_fu_2710_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_47_reg_3696 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_54_fu_2722_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal i_55_fu_2754_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_55_reg_3715 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal exitcond_i_i3_fu_2748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_2791_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_53_reg_3735 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal tmp_i3_fu_2823_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_i3_reg_3740 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_56_fu_2834_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal idx_1_fu_2860_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state48 : BOOLEAN;
    signal next_mul5_fu_2871_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal next_mul5_reg_3761 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal i_57_fu_2883_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_57_reg_3769 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_fu_2895_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state50 : BOOLEAN;
    signal next_mul6_fu_2916_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal next_mul6_reg_3782 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal i_58_fu_2928_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_58_reg_3790 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_2_fu_2940_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state52 : BOOLEAN;
    signal next_mul7_fu_2961_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_mul7_reg_3803 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal i_59_fu_2973_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_59_reg_3811 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_3_fu_2985_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state54 : BOOLEAN;
    signal i_60_fu_3012_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_60_reg_3827 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal tmp_62_fu_3042_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_62_reg_3832 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond8_fu_3006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_fu_3054_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state56 : BOOLEAN;
    signal p_i0_0_i_cast_fu_3074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_i0_0_i_cast_reg_3845 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal p_i0_fu_3085_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_i0_reg_3853 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_64_fu_3079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i0_0_i1_cast_fu_3091_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_i0_0_i1_cast_reg_3863 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal p_i0_1_fu_3102_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_i0_1_reg_3871 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_66_fu_3096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i0_0_i2_cast_fu_3108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_i0_0_i2_cast_reg_3881 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal p_i0_2_fu_3119_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_i0_2_reg_3889 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_67_fu_3113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i0_0_i3_cast9_fu_3125_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_i0_0_i3_cast9_reg_3899 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal p_i0_3_fu_3136_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_i0_3_reg_3907 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_68_fu_3130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i0_0_i4_cast8_fu_3142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_i0_0_i4_cast8_reg_3917 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal p_i0_4_fu_3153_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_i0_4_reg_3925 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_69_fu_3147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_filter_fu_3165_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_filter_reg_3938 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal tmp_i4_fu_3171_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i4_reg_3943 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i_fu_3159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_3199_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_72_reg_3948 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_z_0_i_fu_3211_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_z_0_i_reg_3956 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal exitcond_0_i_fu_3205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc6_input_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fc6_input_data_V_lo_reg_3971 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal fc6_W_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fc6_W_data_V_load_reg_3976 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal idx_2_fu_3265_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal idx_2_reg_3989 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal exitcond_fu_3259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc6_output_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_input_data_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_input_data_V_ce0 : STD_LOGIC;
    signal c1_input_data_V_we0 : STD_LOGIC;
    signal c1_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_input_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_output_data_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal c1_output_data_V_ce0 : STD_LOGIC;
    signal c1_output_data_V_we0 : STD_LOGIC;
    signal c1_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_output_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_W_data_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal c1_W_data_V_ce0 : STD_LOGIC;
    signal c1_W_data_V_we0 : STD_LOGIC;
    signal c1_W_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_W_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_inpad_data_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal c1_inpad_data_V_ce0 : STD_LOGIC;
    signal c1_inpad_data_V_we0 : STD_LOGIC;
    signal c1_inpad_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_inpad_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_relu1_input_data_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal c1_relu1_input_data_ce0 : STD_LOGIC;
    signal c1_relu1_input_data_we0 : STD_LOGIC;
    signal c1_relu1_input_data_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_relu1_input_data_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c1_relu1_output_dat_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal c1_relu1_output_dat_ce0 : STD_LOGIC;
    signal c1_relu1_output_dat_we0 : STD_LOGIC;
    signal c1_relu1_output_dat_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal c1_relu1_output_dat_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal p2_input_data_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal p2_input_data_V_ce0 : STD_LOGIC;
    signal p2_input_data_V_we0 : STD_LOGIC;
    signal p2_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p2_input_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p2_output_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p2_output_data_V_ce0 : STD_LOGIC;
    signal p2_output_data_V_we0 : STD_LOGIC;
    signal p2_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p2_output_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p2_relu1_input_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p2_relu1_input_data_ce0 : STD_LOGIC;
    signal p2_relu1_input_data_we0 : STD_LOGIC;
    signal p2_relu1_input_data_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p2_relu1_input_data_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p2_relu1_output_dat_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p2_relu1_output_dat_ce0 : STD_LOGIC;
    signal p2_relu1_output_dat_we0 : STD_LOGIC;
    signal p2_relu1_output_dat_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal p2_relu1_output_dat_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal c3_input_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal c3_input_data_V_ce0 : STD_LOGIC;
    signal c3_input_data_V_we0 : STD_LOGIC;
    signal c3_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_input_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_output_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal c3_output_data_V_ce0 : STD_LOGIC;
    signal c3_output_data_V_we0 : STD_LOGIC;
    signal c3_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_output_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_W_data_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal c3_W_data_V_ce0 : STD_LOGIC;
    signal c3_W_data_V_we0 : STD_LOGIC;
    signal c3_W_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_W_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_inpad_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal c3_inpad_data_V_ce0 : STD_LOGIC;
    signal c3_inpad_data_V_we0 : STD_LOGIC;
    signal c3_inpad_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_inpad_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_relu1_input_data_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal c3_relu1_input_data_ce0 : STD_LOGIC;
    signal c3_relu1_input_data_we0 : STD_LOGIC;
    signal c3_relu1_input_data_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_relu1_input_data_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c3_relu1_output_dat_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal c3_relu1_output_dat_ce0 : STD_LOGIC;
    signal c3_relu1_output_dat_we0 : STD_LOGIC;
    signal c3_relu1_output_dat_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal c3_relu1_output_dat_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal p4_input_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p4_input_data_V_ce0 : STD_LOGIC;
    signal p4_input_data_V_we0 : STD_LOGIC;
    signal p4_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p4_input_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p4_output_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p4_output_data_V_ce0 : STD_LOGIC;
    signal p4_output_data_V_we0 : STD_LOGIC;
    signal p4_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p4_output_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p4_relu1_input_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p4_relu1_input_data_ce0 : STD_LOGIC;
    signal p4_relu1_input_data_we0 : STD_LOGIC;
    signal p4_relu1_input_data_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p4_relu1_input_data_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p4_relu1_output_dat_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p4_relu1_output_dat_ce0 : STD_LOGIC;
    signal p4_relu1_output_dat_we0 : STD_LOGIC;
    signal p4_relu1_output_dat_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal p4_relu1_output_dat_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal c5_input_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal c5_input_data_V_ce0 : STD_LOGIC;
    signal c5_input_data_V_we0 : STD_LOGIC;
    signal c5_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_input_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_output_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal c5_output_data_V_ce0 : STD_LOGIC;
    signal c5_output_data_V_we0 : STD_LOGIC;
    signal c5_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_output_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_W_data_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_W_data_V_ce0 : STD_LOGIC;
    signal c5_W_data_V_we0 : STD_LOGIC;
    signal c5_W_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_W_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_inpad_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal c5_inpad_data_V_ce0 : STD_LOGIC;
    signal c5_inpad_data_V_we0 : STD_LOGIC;
    signal c5_inpad_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_inpad_data_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_relu1_input_data_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal c5_relu1_input_data_ce0 : STD_LOGIC;
    signal c5_relu1_input_data_we0 : STD_LOGIC;
    signal c5_relu1_input_data_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_relu1_input_data_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c5_relu1_output_dat_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal c5_relu1_output_dat_ce0 : STD_LOGIC;
    signal c5_relu1_output_dat_we0 : STD_LOGIC;
    signal c5_relu1_output_dat_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal c5_relu1_output_dat_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal fc6_input_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal fc6_input_data_V_ce0 : STD_LOGIC;
    signal fc6_input_data_V_we0 : STD_LOGIC;
    signal fc6_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fc6_output_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal fc6_output_data_V_ce0 : STD_LOGIC;
    signal fc6_output_data_V_we0 : STD_LOGIC;
    signal fc6_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fc6_W_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal fc6_W_data_V_ce0 : STD_LOGIC;
    signal fc6_W_data_V_we0 : STD_LOGIC;
    signal fc6_W_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_3_fu_1821_ap_start : STD_LOGIC;
    signal grp_forward_3_fu_1821_ap_done : STD_LOGIC;
    signal grp_forward_3_fu_1821_ap_idle : STD_LOGIC;
    signal grp_forward_3_fu_1821_ap_ready : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_forward_2_fu_1831_ap_start : STD_LOGIC;
    signal grp_forward_2_fu_1831_ap_done : STD_LOGIC;
    signal grp_forward_2_fu_1831_ap_idle : STD_LOGIC;
    signal grp_forward_2_fu_1831_ap_ready : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_forward_fu_1841_ap_start : STD_LOGIC;
    signal grp_forward_fu_1841_ap_done : STD_LOGIC;
    signal grp_forward_fu_1841_ap_idle : STD_LOGIC;
    signal grp_forward_fu_1841_ap_ready : STD_LOGIC;
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0 : STD_LOGIC;
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_forward_4_fu_1849_ap_start : STD_LOGIC;
    signal grp_forward_4_fu_1849_ap_done : STD_LOGIC;
    signal grp_forward_4_fu_1849_ap_idle : STD_LOGIC;
    signal grp_forward_4_fu_1849_ap_ready : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_ce0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_forward_1_fu_1859_ap_start : STD_LOGIC;
    signal grp_forward_1_fu_1859_ap_done : STD_LOGIC;
    signal grp_forward_1_fu_1859_ap_idle : STD_LOGIC;
    signal grp_forward_1_fu_1859_ap_ready : STD_LOGIC;
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0 : STD_LOGIC;
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0 : STD_LOGIC;
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0 : STD_LOGIC;
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0 : STD_LOGIC;
    signal grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_0_i_i3_i_i_reg_1058 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i4_i_i_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i10_i_i_reg_1069 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond_i_i11_i_i_fu_1884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1080 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_i_i15_i_i_fu_1917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul_reg_1092 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_0_i_i14_i_i_reg_1103 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_i_i_reg_1114 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i_i_i_fu_1949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i1_i_i_i_i_reg_1125 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond_i_i2_i_i_i_s_fu_1966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i_i_i_i_reg_1136 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond_i_i_i_i_i_i_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_reg_1147 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_121_i_fu_2057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul8_reg_1158 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_1170 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_i_i1_reg_1181 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond_i_i_i_i1_fu_2083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i1_i_i_reg_1192 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i2_i_i_fu_2100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i1_i_i_i_i1_reg_1203 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i2_i_i_i_1_fu_2117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i_i_i_i1_reg_1214 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i_i_i_i_i_1_fu_2134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i3_i_i1_reg_1225 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i4_i_i1_fu_2151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i10_i_i1_reg_1236 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i11_i_i1_fu_2168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_1247 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_i_i15_i_i1_fu_2197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul1_reg_1259 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_0_i_i14_i_i1_reg_1271 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_0_i_i_i_i2_reg_1282 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i_i_i2_fu_2230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i1_i_i_i_i2_reg_1293 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i2_i_i_i_2_fu_2247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i_i_i_i2_reg_1304 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i_i_i_i_i_2_fu_2264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i1_reg_1315 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_119_i_fu_2342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul2_reg_1326 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_i1_reg_1338 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_0_i_i_i_i3_reg_1349 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_i_i_i3_fu_2368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i1_i_i1_reg_1360 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_i_i2_i_i1_fu_2385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i1_i_i_i_i3_reg_1371 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_i_i2_i_i_i_3_fu_2402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i_i_i_i3_reg_1382 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_i_i_i_i_i_i_3_fu_2419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i7_i_i2_reg_1393 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_i_i8_i_i2_fu_2436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i18_i_i_reg_1404 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_i_i19_i_i_fu_2453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_1415 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_i_i4_i_i2_fu_2482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_2509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul3_reg_1427 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_0_i_i3_i_i2_reg_1439 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_0_i_i_i_i4_reg_1450 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_i_i_i_i4_fu_2515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i1_i_i_i_i4_reg_1461 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_i_i2_i_i_i_4_fu_2532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i_i_i_i4_reg_1472 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_i_i_i_i_i_i_4_fu_2549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i2_reg_1483 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_117_i_fu_2620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul4_reg_1494 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_i2_reg_1506 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_0_i_i3_i_i3_reg_1517 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_i_i4_i_i3_fu_2646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i10_i_i2_reg_1528 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_i_i11_i_i2_fu_2663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_1539 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_i_i_i_i5_fu_2716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_2742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_i_i_i5_reg_1551 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_0_i_i3_reg_1562 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_115_i_fu_2829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_i3_reg_1574 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx_reg_1585 : STD_LOGIC_VECTOR (10 downto 0);
    signal i37_reg_1596 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul5_reg_1607 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_1619 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond3_fu_2877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_reg_1630 : STD_LOGIC_VECTOR (4 downto 0);
    signal phi_mul6_reg_1641 : STD_LOGIC_VECTOR (11 downto 0);
    signal j2_reg_1653 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_fu_2922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i3_reg_1664 : STD_LOGIC_VECTOR (6 downto 0);
    signal phi_mul7_reg_1675 : STD_LOGIC_VECTOR (15 downto 0);
    signal j4_reg_1687 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond6_fu_2967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i5_reg_1698 : STD_LOGIC_VECTOR (3 downto 0);
    signal j6_reg_1709 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_i0_0_i_reg_1720 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal p_i0_0_i1_reg_1731 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal p_i0_0_i2_reg_1742 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal p_i0_0_i3_reg_1753 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal p_i0_0_i4_reg_1764 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal p_z_assign_reg_1775 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_0_i_reg_1786 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_z_assign_1_0_i_reg_1799 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx7_reg_1810 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_3_fu_1821_ap_start_reg : STD_LOGIC := '0';
    signal grp_forward_2_fu_1831_ap_start_reg : STD_LOGIC := '0';
    signal grp_forward_fu_1841_ap_start_reg : STD_LOGIC := '0';
    signal grp_forward_4_fu_1849_ap_start_reg : STD_LOGIC := '0';
    signal grp_forward_1_fu_1859_ap_start_reg : STD_LOGIC := '0';
    signal tmp_fu_1879_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1896_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_cast_fu_1938_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_1961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_1978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_1995_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_2018_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_cast_fu_2078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_2095_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_2112_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_2129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_2146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_2163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_2180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_cast_fu_2219_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_2242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_2259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_2276_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_2299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_cast_fu_2363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_2380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_2397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_2414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_2431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_2448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_2465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_cast_fu_2504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_2527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_2544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_2561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_2584_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_cast_fu_2641_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_2658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_2675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_cast_fu_2737_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_2760_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_cast_fu_2849_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_2866_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_cast_fu_2911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_80_cast_fu_2956_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_cast_fu_3001_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_88_cast_fu_3069_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_97_cast_fu_3231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_132_0_i_fu_3217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_73_fu_3271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_cast_fu_1929_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_1933_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_2029_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp1_fu_2037_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_fu_2047_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_fu_2047_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_i_cast_fu_2053_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_122_i_cast_fu_2068_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_2072_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_cast_fu_2209_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_fu_2213_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c3_W_size_z_load_cas_fu_2314_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp2_fu_2322_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp2_fu_2322_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp2_fu_2322_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i1_fu_2332_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i1_fu_2332_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_i1_cast_fu_2338_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_120_i_cast_fu_2353_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_2357_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_47_cast_fu_2494_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_fu_2498_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_2600_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp3_fu_2600_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp3_fu_2600_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i2_fu_2610_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i2_fu_2610_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_i2_cast_fu_2616_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_118_i_cast_fu_2631_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_fu_2635_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_fu_2686_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_46_fu_2698_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_2694_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl1_cast_fu_2706_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_63_cast_fu_2728_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_49_fu_2732_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_51_fu_2767_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_fu_2779_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl2_cast_fu_2775_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl3_cast_fu_2787_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal fc6_W_size_z_load_ca_fu_2797_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_54_fu_2801_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp4_fu_2809_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_55_fu_2815_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_116_i_cast_fu_2840_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_57_fu_2844_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_75_cast_fu_2901_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_2905_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_cast_fu_2946_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_59_fu_2950_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_84_cast_fu_2991_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_2995_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_fu_3018_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_61_fu_3030_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl4_cast_fu_3026_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl5_cast_fu_3038_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_87_cast_fu_3060_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_65_fu_3064_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_70_fu_3175_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_71_fu_3187_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl6_cast_fu_3183_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl7_cast_fu_3195_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_132_0_i_cast_fu_3222_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_74_fu_3226_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_3276_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_3276_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (77 downto 0);
    signal tmp2_fu_2322_p00 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp2_fu_2322_p10 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp3_fu_2600_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_2600_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i1_fu_2332_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i1_fu_2332_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i2_fu_2610_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_i2_fu_2610_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_i_fu_2047_p00 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i_fu_2047_p10 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);

    component forward_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_input_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_layer_5_16_1_0_14_14_6_input_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_16_1_0_14_14_6_output_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_layer_5_16_1_0_14_14_6_output_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_output_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_output_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_16_1_0_14_14_6_output_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_16_1_0_14_14_6_W_data_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_layer_5_16_1_0_14_14_6_W_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_W_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component forward_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_input_data_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv_layer_5_6_1_0_32_32_1_input_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_6_1_0_32_32_1_output_data_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        conv_layer_5_6_1_0_32_32_1_output_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_output_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_output_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_6_1_0_32_32_1_output_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_6_1_0_32_32_1_W_data_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv_layer_5_6_1_0_32_32_1_W_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_W_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component forward IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pool_layer_2_2_1_28_28_6_input_data_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        pool_layer_2_2_1_28_28_6_input_data_V_ce0 : OUT STD_LOGIC;
        pool_layer_2_2_1_28_28_6_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_28_28_6_output_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pool_layer_2_2_1_28_28_6_output_data_V_ce0 : OUT STD_LOGIC;
        pool_layer_2_2_1_28_28_6_output_data_V_we0 : OUT STD_LOGIC;
        pool_layer_2_2_1_28_28_6_output_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_28_28_6_output_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0 : OUT STD_LOGIC;
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0 : OUT STD_LOGIC;
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0 : OUT STD_LOGIC;
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0 : OUT STD_LOGIC;
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component forward_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_input_data_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv_layer_5_120_1_0_5_5_16_input_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_output_data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_layer_5_120_1_0_5_5_16_output_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_output_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_output_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_output_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_W_data_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_W_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_W_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0 : OUT STD_LOGIC;
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component forward_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pool_layer_2_2_1_10_10_16_input_data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        pool_layer_2_2_1_10_10_16_input_data_V_ce0 : OUT STD_LOGIC;
        pool_layer_2_2_1_10_10_16_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_10_10_16_output_data_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        pool_layer_2_2_1_10_10_16_output_data_V_ce0 : OUT STD_LOGIC;
        pool_layer_2_2_1_10_10_16_output_data_V_we0 : OUT STD_LOGIC;
        pool_layer_2_2_1_10_10_16_output_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_10_10_16_output_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0 : OUT STD_LOGIC;
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0 : OUT STD_LOGIC;
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0 : OUT STD_LOGIC;
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0 : OUT STD_LOGIC;
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component lenet_mac_muladd_16s_16s_28ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component lenet_c1_W_size_x IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component lenet_c1_W_size_z IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component lenet_c3_W_size_x IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component lenet_c3_W_size_z IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component lenet_c5_W_size_x IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component lenet_c5_W_size_z IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component lenet_fc6_W_size_x IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component lenet_fc6_W_size_z IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component lenet_c1_input_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_c1_output_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_c1_W_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_c1_relu1_output_dat IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component lenet_p2_output_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_p2_relu1_output_dat IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component lenet_c3_output_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_c3_W_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_c3_relu1_output_dat IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component lenet_p4_output_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_p4_relu1_output_dat IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component lenet_c5_output_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_c5_W_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_c5_relu1_output_dat IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component lenet_fc6_output_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_fc6_W_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component lenet_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        start : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    c1_W_size_x_U : component lenet_c1_W_size_x
    generic map (
        DataWidth => 3,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_W_size_x_address0,
        ce0 => c1_W_size_x_ce0,
        q0 => c1_W_size_x_q0);

    c1_W_size_y_U : component lenet_c1_W_size_x
    generic map (
        DataWidth => 3,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_W_size_y_address0,
        ce0 => c1_W_size_y_ce0,
        q0 => c1_W_size_y_q0);

    c1_W_size_z_U : component lenet_c1_W_size_z
    generic map (
        DataWidth => 1,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_W_size_z_address0,
        ce0 => c1_W_size_z_ce0,
        q0 => c1_W_size_z_q0);

    c3_W_size_x_U : component lenet_c3_W_size_x
    generic map (
        DataWidth => 3,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_W_size_x_address0,
        ce0 => c3_W_size_x_ce0,
        q0 => c3_W_size_x_q0);

    c3_W_size_y_U : component lenet_c3_W_size_x
    generic map (
        DataWidth => 3,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_W_size_y_address0,
        ce0 => c3_W_size_y_ce0,
        q0 => c3_W_size_y_q0);

    c3_W_size_z_U : component lenet_c3_W_size_z
    generic map (
        DataWidth => 2,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_W_size_z_address0,
        ce0 => c3_W_size_z_ce0,
        q0 => c3_W_size_z_q0);

    c5_W_size_x_U : component lenet_c5_W_size_x
    generic map (
        DataWidth => 3,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_W_size_x_address0,
        ce0 => c5_W_size_x_ce0,
        q0 => c5_W_size_x_q0);

    c5_W_size_y_U : component lenet_c5_W_size_x
    generic map (
        DataWidth => 3,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_W_size_y_address0,
        ce0 => c5_W_size_y_ce0,
        q0 => c5_W_size_y_q0);

    c5_W_size_z_U : component lenet_c5_W_size_z
    generic map (
        DataWidth => 5,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_W_size_z_address0,
        ce0 => c5_W_size_z_ce0,
        q0 => c5_W_size_z_q0);

    fc6_W_size_x_U : component lenet_fc6_W_size_x
    generic map (
        DataWidth => 1,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc6_W_size_x_address0,
        ce0 => fc6_W_size_x_ce0,
        q0 => fc6_W_size_x_q0);

    fc6_W_size_y_U : component lenet_fc6_W_size_x
    generic map (
        DataWidth => 1,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc6_W_size_y_address0,
        ce0 => fc6_W_size_y_ce0,
        q0 => fc6_W_size_y_q0);

    fc6_W_size_z_U : component lenet_fc6_W_size_z
    generic map (
        DataWidth => 4,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc6_W_size_z_address0,
        ce0 => fc6_W_size_z_ce0,
        q0 => fc6_W_size_z_q0);

    lenet_CRTL_BUS_s_axi_U : component lenet_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_const_lv32_0,
        start => start);

    c1_input_data_V_U : component lenet_c1_input_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_input_data_V_address0,
        ce0 => c1_input_data_V_ce0,
        we0 => c1_input_data_V_we0,
        d0 => c1_input_data_V_d0,
        q0 => c1_input_data_V_q0);

    c1_output_data_V_U : component lenet_c1_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 4704,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_output_data_V_address0,
        ce0 => c1_output_data_V_ce0,
        we0 => c1_output_data_V_we0,
        d0 => c1_output_data_V_d0,
        q0 => c1_output_data_V_q0);

    c1_W_data_V_U : component lenet_c1_W_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 150,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_W_data_V_address0,
        ce0 => c1_W_data_V_ce0,
        we0 => c1_W_data_V_we0,
        d0 => c1_W_data_V_d0,
        q0 => c1_W_data_V_q0);

    c1_inpad_data_V_U : component lenet_c1_input_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_inpad_data_V_address0,
        ce0 => c1_inpad_data_V_ce0,
        we0 => c1_inpad_data_V_we0,
        d0 => c1_inpad_data_V_d0,
        q0 => c1_inpad_data_V_q0);

    c1_relu1_input_data_U : component lenet_c1_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 4704,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_relu1_input_data_address0,
        ce0 => c1_relu1_input_data_ce0,
        we0 => c1_relu1_input_data_we0,
        d0 => c1_relu1_input_data_d0,
        q0 => c1_relu1_input_data_q0);

    c1_relu1_output_dat_U : component lenet_c1_relu1_output_dat
    generic map (
        DataWidth => 15,
        AddressRange => 4704,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c1_relu1_output_dat_address0,
        ce0 => c1_relu1_output_dat_ce0,
        we0 => c1_relu1_output_dat_we0,
        d0 => c1_relu1_output_dat_d0,
        q0 => c1_relu1_output_dat_q0);

    p2_input_data_V_U : component lenet_c1_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 4704,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p2_input_data_V_address0,
        ce0 => p2_input_data_V_ce0,
        we0 => p2_input_data_V_we0,
        d0 => p2_input_data_V_d0,
        q0 => p2_input_data_V_q0);

    p2_output_data_V_U : component lenet_p2_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p2_output_data_V_address0,
        ce0 => p2_output_data_V_ce0,
        we0 => p2_output_data_V_we0,
        d0 => p2_output_data_V_d0,
        q0 => p2_output_data_V_q0);

    p2_relu1_input_data_U : component lenet_p2_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p2_relu1_input_data_address0,
        ce0 => p2_relu1_input_data_ce0,
        we0 => p2_relu1_input_data_we0,
        d0 => p2_relu1_input_data_d0,
        q0 => p2_relu1_input_data_q0);

    p2_relu1_output_dat_U : component lenet_p2_relu1_output_dat
    generic map (
        DataWidth => 15,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p2_relu1_output_dat_address0,
        ce0 => p2_relu1_output_dat_ce0,
        we0 => p2_relu1_output_dat_we0,
        d0 => p2_relu1_output_dat_d0,
        q0 => p2_relu1_output_dat_q0);

    c3_input_data_V_U : component lenet_p2_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_input_data_V_address0,
        ce0 => c3_input_data_V_ce0,
        we0 => c3_input_data_V_we0,
        d0 => c3_input_data_V_d0,
        q0 => c3_input_data_V_q0);

    c3_output_data_V_U : component lenet_c3_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_output_data_V_address0,
        ce0 => c3_output_data_V_ce0,
        we0 => c3_output_data_V_we0,
        d0 => c3_output_data_V_d0,
        q0 => c3_output_data_V_q0);

    c3_W_data_V_U : component lenet_c3_W_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 2400,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_W_data_V_address0,
        ce0 => c3_W_data_V_ce0,
        we0 => c3_W_data_V_we0,
        d0 => c3_W_data_V_d0,
        q0 => c3_W_data_V_q0);

    c3_inpad_data_V_U : component lenet_p2_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_inpad_data_V_address0,
        ce0 => c3_inpad_data_V_ce0,
        we0 => c3_inpad_data_V_we0,
        d0 => c3_inpad_data_V_d0,
        q0 => c3_inpad_data_V_q0);

    c3_relu1_input_data_U : component lenet_c3_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_relu1_input_data_address0,
        ce0 => c3_relu1_input_data_ce0,
        we0 => c3_relu1_input_data_we0,
        d0 => c3_relu1_input_data_d0,
        q0 => c3_relu1_input_data_q0);

    c3_relu1_output_dat_U : component lenet_c3_relu1_output_dat
    generic map (
        DataWidth => 15,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c3_relu1_output_dat_address0,
        ce0 => c3_relu1_output_dat_ce0,
        we0 => c3_relu1_output_dat_we0,
        d0 => c3_relu1_output_dat_d0,
        q0 => c3_relu1_output_dat_q0);

    p4_input_data_V_U : component lenet_c3_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p4_input_data_V_address0,
        ce0 => p4_input_data_V_ce0,
        we0 => p4_input_data_V_we0,
        d0 => p4_input_data_V_d0,
        q0 => p4_input_data_V_q0);

    p4_output_data_V_U : component lenet_p4_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p4_output_data_V_address0,
        ce0 => p4_output_data_V_ce0,
        we0 => p4_output_data_V_we0,
        d0 => p4_output_data_V_d0,
        q0 => p4_output_data_V_q0);

    p4_relu1_input_data_U : component lenet_p4_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p4_relu1_input_data_address0,
        ce0 => p4_relu1_input_data_ce0,
        we0 => p4_relu1_input_data_we0,
        d0 => p4_relu1_input_data_d0,
        q0 => p4_relu1_input_data_q0);

    p4_relu1_output_dat_U : component lenet_p4_relu1_output_dat
    generic map (
        DataWidth => 15,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p4_relu1_output_dat_address0,
        ce0 => p4_relu1_output_dat_ce0,
        we0 => p4_relu1_output_dat_we0,
        d0 => p4_relu1_output_dat_d0,
        q0 => p4_relu1_output_dat_q0);

    c5_input_data_V_U : component lenet_p4_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_input_data_V_address0,
        ce0 => c5_input_data_V_ce0,
        we0 => c5_input_data_V_we0,
        d0 => c5_input_data_V_d0,
        q0 => c5_input_data_V_q0);

    c5_output_data_V_U : component lenet_c5_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_output_data_V_address0,
        ce0 => c5_output_data_V_ce0,
        we0 => c5_output_data_V_we0,
        d0 => c5_output_data_V_d0,
        q0 => c5_output_data_V_q0);

    c5_W_data_V_U : component lenet_c5_W_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 48000,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_W_data_V_address0,
        ce0 => c5_W_data_V_ce0,
        we0 => c5_W_data_V_we0,
        d0 => c5_W_data_V_d0,
        q0 => c5_W_data_V_q0);

    c5_inpad_data_V_U : component lenet_p4_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_inpad_data_V_address0,
        ce0 => c5_inpad_data_V_ce0,
        we0 => c5_inpad_data_V_we0,
        d0 => c5_inpad_data_V_d0,
        q0 => c5_inpad_data_V_q0);

    c5_relu1_input_data_U : component lenet_c5_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_relu1_input_data_address0,
        ce0 => c5_relu1_input_data_ce0,
        we0 => c5_relu1_input_data_we0,
        d0 => c5_relu1_input_data_d0,
        q0 => c5_relu1_input_data_q0);

    c5_relu1_output_dat_U : component lenet_c5_relu1_output_dat
    generic map (
        DataWidth => 15,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => c5_relu1_output_dat_address0,
        ce0 => c5_relu1_output_dat_ce0,
        we0 => c5_relu1_output_dat_we0,
        d0 => c5_relu1_output_dat_d0,
        q0 => c5_relu1_output_dat_q0);

    fc6_input_data_V_U : component lenet_c5_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc6_input_data_V_address0,
        ce0 => fc6_input_data_V_ce0,
        we0 => fc6_input_data_V_we0,
        d0 => fc6_input_data_V_d0,
        q0 => fc6_input_data_V_q0);

    fc6_output_data_V_U : component lenet_fc6_output_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc6_output_data_V_address0,
        ce0 => fc6_output_data_V_ce0,
        we0 => fc6_output_data_V_we0,
        d0 => fc6_output_data_V_d0,
        q0 => fc6_output_data_V_q0);

    fc6_W_data_V_U : component lenet_fc6_W_data_V
    generic map (
        DataWidth => 16,
        AddressRange => 1200,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fc6_W_data_V_address0,
        ce0 => fc6_W_data_V_ce0,
        we0 => fc6_W_data_V_we0,
        d0 => fc6_W_data_V_d0,
        q0 => fc6_W_data_V_q0);

    grp_forward_3_fu_1821 : component forward_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_forward_3_fu_1821_ap_start,
        ap_done => grp_forward_3_fu_1821_ap_done,
        ap_idle => grp_forward_3_fu_1821_ap_idle,
        ap_ready => grp_forward_3_fu_1821_ap_ready,
        conv_layer_5_16_1_0_14_14_6_input_data_V_address0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_input_data_V_ce0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_input_data_V_q0 => c3_input_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_address0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_ce0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_we0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_we0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_d0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_d0,
        conv_layer_5_16_1_0_14_14_6_output_data_V_q0 => c3_output_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_W_data_V_address0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_W_data_V_ce0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_W_data_V_q0 => c3_W_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0,
        conv_layer_5_16_1_0_14_14_6_inpad_data_V_q0 => c3_inpad_data_V_q0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0,
        conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_q0 => c3_relu1_input_data_q0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0 => grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0,
        conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_q0 => c3_relu1_output_dat_q0);

    grp_forward_2_fu_1831 : component forward_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_forward_2_fu_1831_ap_start,
        ap_done => grp_forward_2_fu_1831_ap_done,
        ap_idle => grp_forward_2_fu_1831_ap_idle,
        ap_ready => grp_forward_2_fu_1831_ap_ready,
        conv_layer_5_6_1_0_32_32_1_input_data_V_address0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_input_data_V_ce0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_input_data_V_q0 => c1_input_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_address0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_ce0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_we0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_we0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_d0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_d0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_q0 => c1_output_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_W_data_V_address0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_W_data_V_ce0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_W_data_V_q0 => c1_W_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_q0 => c1_inpad_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_q0 => c1_relu1_input_data_q0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0 => grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_q0 => c1_relu1_output_dat_q0);

    grp_forward_fu_1841 : component forward
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_forward_fu_1841_ap_start,
        ap_done => grp_forward_fu_1841_ap_done,
        ap_idle => grp_forward_fu_1841_ap_idle,
        ap_ready => grp_forward_fu_1841_ap_ready,
        pool_layer_2_2_1_28_28_6_input_data_V_address0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_address0,
        pool_layer_2_2_1_28_28_6_input_data_V_ce0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_ce0,
        pool_layer_2_2_1_28_28_6_input_data_V_q0 => p2_input_data_V_q0,
        pool_layer_2_2_1_28_28_6_output_data_V_address0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_address0,
        pool_layer_2_2_1_28_28_6_output_data_V_ce0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_ce0,
        pool_layer_2_2_1_28_28_6_output_data_V_we0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_we0,
        pool_layer_2_2_1_28_28_6_output_data_V_d0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_d0,
        pool_layer_2_2_1_28_28_6_output_data_V_q0 => p2_output_data_V_q0,
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0,
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0,
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0,
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0,
        pool_layer_2_2_1_28_28_6_relu1_input_data_V_q0 => p2_relu1_input_data_q0,
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0,
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0,
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0,
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0 => grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0,
        pool_layer_2_2_1_28_28_6_relu1_output_data_V_q0 => p2_relu1_output_dat_q0);

    grp_forward_4_fu_1849 : component forward_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_forward_4_fu_1849_ap_start,
        ap_done => grp_forward_4_fu_1849_ap_done,
        ap_idle => grp_forward_4_fu_1849_ap_idle,
        ap_ready => grp_forward_4_fu_1849_ap_ready,
        conv_layer_5_120_1_0_5_5_16_input_data_V_address0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_address0,
        conv_layer_5_120_1_0_5_5_16_input_data_V_ce0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_ce0,
        conv_layer_5_120_1_0_5_5_16_input_data_V_q0 => c5_input_data_V_q0,
        conv_layer_5_120_1_0_5_5_16_output_data_V_address0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_address0,
        conv_layer_5_120_1_0_5_5_16_output_data_V_ce0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_ce0,
        conv_layer_5_120_1_0_5_5_16_output_data_V_we0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_we0,
        conv_layer_5_120_1_0_5_5_16_output_data_V_d0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_d0,
        conv_layer_5_120_1_0_5_5_16_output_data_V_q0 => c5_output_data_V_q0,
        conv_layer_5_120_1_0_5_5_16_W_data_V_address0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_address0,
        conv_layer_5_120_1_0_5_5_16_W_data_V_ce0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_ce0,
        conv_layer_5_120_1_0_5_5_16_W_data_V_q0 => c5_W_data_V_q0,
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0,
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0,
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0,
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0,
        conv_layer_5_120_1_0_5_5_16_inpad_data_V_q0 => c5_inpad_data_V_q0,
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0,
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0,
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0,
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0,
        conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_q0 => c5_relu1_input_data_q0,
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0,
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0,
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0,
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0 => grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0,
        conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_q0 => c5_relu1_output_dat_q0);

    grp_forward_1_fu_1859 : component forward_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_forward_1_fu_1859_ap_start,
        ap_done => grp_forward_1_fu_1859_ap_done,
        ap_idle => grp_forward_1_fu_1859_ap_idle,
        ap_ready => grp_forward_1_fu_1859_ap_ready,
        pool_layer_2_2_1_10_10_16_input_data_V_address0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_address0,
        pool_layer_2_2_1_10_10_16_input_data_V_ce0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_ce0,
        pool_layer_2_2_1_10_10_16_input_data_V_q0 => p4_input_data_V_q0,
        pool_layer_2_2_1_10_10_16_output_data_V_address0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_address0,
        pool_layer_2_2_1_10_10_16_output_data_V_ce0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_ce0,
        pool_layer_2_2_1_10_10_16_output_data_V_we0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_we0,
        pool_layer_2_2_1_10_10_16_output_data_V_d0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_d0,
        pool_layer_2_2_1_10_10_16_output_data_V_q0 => p4_output_data_V_q0,
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0,
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0,
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0,
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0,
        pool_layer_2_2_1_10_10_16_relu1_input_data_V_q0 => p4_relu1_input_data_q0,
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0,
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0,
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0,
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0 => grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0,
        pool_layer_2_2_1_10_10_16_relu1_output_data_V_q0 => p4_relu1_output_dat_q0);

    lenet_mac_muladd_16s_16s_28ns_28_1_1_U53 : component lenet_mac_muladd_16s_16s_28ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => fc6_input_data_V_lo_reg_3971,
        din1 => fc6_W_data_V_load_reg_3976,
        din2 => grp_fu_3276_p2,
        dout => grp_fu_3276_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    c1w_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c1w_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((c1w_V_V_0_ack_out = ap_const_logic_1) and (c1w_V_V_0_vld_out = ap_const_logic_1))) then 
                                        c1w_V_V_0_sel_rd <= not(c1w_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    c1w_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c1w_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((c1w_V_V_0_ack_in = ap_const_logic_1) and (c1w_V_V_0_vld_in = ap_const_logic_1))) then 
                                        c1w_V_V_0_sel_wr <= not(c1w_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    c1w_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c1w_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((c1w_V_V_0_vld_in = ap_const_logic_0) and (c1w_V_V_0_state = ap_const_lv2_2)) or ((c1w_V_V_0_vld_in = ap_const_logic_0) and (c1w_V_V_0_ack_out = ap_const_logic_1) and (c1w_V_V_0_state = ap_const_lv2_3)))) then 
                    c1w_V_V_0_state <= ap_const_lv2_2;
                elsif ((((c1w_V_V_0_ack_out = ap_const_logic_0) and (c1w_V_V_0_state = ap_const_lv2_1)) or ((c1w_V_V_0_ack_out = ap_const_logic_0) and (c1w_V_V_0_vld_in = ap_const_logic_1) and (c1w_V_V_0_state = ap_const_lv2_3)))) then 
                    c1w_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((c1w_V_V_0_vld_in = ap_const_logic_0) and (c1w_V_V_0_ack_out = ap_const_logic_1))) and not(((c1w_V_V_0_ack_out = ap_const_logic_0) and (c1w_V_V_0_vld_in = ap_const_logic_1))) and (c1w_V_V_0_state = ap_const_lv2_3)) or ((c1w_V_V_0_ack_out = ap_const_logic_1) and (c1w_V_V_0_state = ap_const_lv2_1)) or ((c1w_V_V_0_vld_in = ap_const_logic_1) and (c1w_V_V_0_state = ap_const_lv2_2)))) then 
                    c1w_V_V_0_state <= ap_const_lv2_3;
                else 
                    c1w_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    c3w_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c3w_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((c3w_V_V_0_ack_out = ap_const_logic_1) and (c3w_V_V_0_vld_out = ap_const_logic_1))) then 
                                        c3w_V_V_0_sel_rd <= not(c3w_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    c3w_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c3w_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((c3w_V_V_0_ack_in = ap_const_logic_1) and (c3w_V_V_0_vld_in = ap_const_logic_1))) then 
                                        c3w_V_V_0_sel_wr <= not(c3w_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    c3w_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c3w_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((c3w_V_V_0_vld_in = ap_const_logic_0) and (c3w_V_V_0_state = ap_const_lv2_2)) or ((c3w_V_V_0_vld_in = ap_const_logic_0) and (c3w_V_V_0_ack_out = ap_const_logic_1) and (c3w_V_V_0_state = ap_const_lv2_3)))) then 
                    c3w_V_V_0_state <= ap_const_lv2_2;
                elsif ((((c3w_V_V_0_ack_out = ap_const_logic_0) and (c3w_V_V_0_state = ap_const_lv2_1)) or ((c3w_V_V_0_ack_out = ap_const_logic_0) and (c3w_V_V_0_vld_in = ap_const_logic_1) and (c3w_V_V_0_state = ap_const_lv2_3)))) then 
                    c3w_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((c3w_V_V_0_vld_in = ap_const_logic_0) and (c3w_V_V_0_ack_out = ap_const_logic_1))) and not(((c3w_V_V_0_ack_out = ap_const_logic_0) and (c3w_V_V_0_vld_in = ap_const_logic_1))) and (c3w_V_V_0_state = ap_const_lv2_3)) or ((c3w_V_V_0_ack_out = ap_const_logic_1) and (c3w_V_V_0_state = ap_const_lv2_1)) or ((c3w_V_V_0_vld_in = ap_const_logic_1) and (c3w_V_V_0_state = ap_const_lv2_2)))) then 
                    c3w_V_V_0_state <= ap_const_lv2_3;
                else 
                    c3w_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    c5w_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c5w_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((c5w_V_V_0_ack_out = ap_const_logic_1) and (c5w_V_V_0_vld_out = ap_const_logic_1))) then 
                                        c5w_V_V_0_sel_rd <= not(c5w_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    c5w_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c5w_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((c5w_V_V_0_ack_in = ap_const_logic_1) and (c5w_V_V_0_vld_in = ap_const_logic_1))) then 
                                        c5w_V_V_0_sel_wr <= not(c5w_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    c5w_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                c5w_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((c5w_V_V_0_vld_in = ap_const_logic_0) and (c5w_V_V_0_state = ap_const_lv2_2)) or ((c5w_V_V_0_vld_in = ap_const_logic_0) and (c5w_V_V_0_ack_out = ap_const_logic_1) and (c5w_V_V_0_state = ap_const_lv2_3)))) then 
                    c5w_V_V_0_state <= ap_const_lv2_2;
                elsif ((((c5w_V_V_0_ack_out = ap_const_logic_0) and (c5w_V_V_0_state = ap_const_lv2_1)) or ((c5w_V_V_0_ack_out = ap_const_logic_0) and (c5w_V_V_0_vld_in = ap_const_logic_1) and (c5w_V_V_0_state = ap_const_lv2_3)))) then 
                    c5w_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((c5w_V_V_0_vld_in = ap_const_logic_0) and (c5w_V_V_0_ack_out = ap_const_logic_1))) and not(((c5w_V_V_0_ack_out = ap_const_logic_0) and (c5w_V_V_0_vld_in = ap_const_logic_1))) and (c5w_V_V_0_state = ap_const_lv2_3)) or ((c5w_V_V_0_ack_out = ap_const_logic_1) and (c5w_V_V_0_state = ap_const_lv2_1)) or ((c5w_V_V_0_vld_in = ap_const_logic_1) and (c5w_V_V_0_state = ap_const_lv2_2)))) then 
                    c5w_V_V_0_state <= ap_const_lv2_3;
                else 
                    c5w_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    fcw_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                fcw_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((fcw_V_V_0_ack_out = ap_const_logic_1) and (fcw_V_V_0_vld_out = ap_const_logic_1))) then 
                                        fcw_V_V_0_sel_rd <= not(fcw_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    fcw_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                fcw_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((fcw_V_V_0_ack_in = ap_const_logic_1) and (fcw_V_V_0_vld_in = ap_const_logic_1))) then 
                                        fcw_V_V_0_sel_wr <= not(fcw_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    fcw_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                fcw_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((fcw_V_V_0_vld_in = ap_const_logic_0) and (fcw_V_V_0_state = ap_const_lv2_2)) or ((fcw_V_V_0_vld_in = ap_const_logic_0) and (fcw_V_V_0_ack_out = ap_const_logic_1) and (fcw_V_V_0_state = ap_const_lv2_3)))) then 
                    fcw_V_V_0_state <= ap_const_lv2_2;
                elsif ((((fcw_V_V_0_ack_out = ap_const_logic_0) and (fcw_V_V_0_state = ap_const_lv2_1)) or ((fcw_V_V_0_ack_out = ap_const_logic_0) and (fcw_V_V_0_vld_in = ap_const_logic_1) and (fcw_V_V_0_state = ap_const_lv2_3)))) then 
                    fcw_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((fcw_V_V_0_vld_in = ap_const_logic_0) and (fcw_V_V_0_ack_out = ap_const_logic_1))) and not(((fcw_V_V_0_ack_out = ap_const_logic_0) and (fcw_V_V_0_vld_in = ap_const_logic_1))) and (fcw_V_V_0_state = ap_const_lv2_3)) or ((fcw_V_V_0_ack_out = ap_const_logic_1) and (fcw_V_V_0_state = ap_const_lv2_1)) or ((fcw_V_V_0_vld_in = ap_const_logic_1) and (fcw_V_V_0_state = ap_const_lv2_2)))) then 
                    fcw_V_V_0_state <= ap_const_lv2_3;
                else 
                    fcw_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    grp_forward_1_fu_1859_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_forward_1_fu_1859_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state64) and (tmp_67_fu_3113_p2 = ap_const_lv1_1))) then 
                    grp_forward_1_fu_1859_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forward_1_fu_1859_ap_ready = ap_const_logic_1)) then 
                    grp_forward_1_fu_1859_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forward_2_fu_1831_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_forward_2_fu_1831_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond8_fu_3006_p2 = ap_const_lv1_1))) then 
                    grp_forward_2_fu_1831_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forward_2_fu_1831_ap_ready = ap_const_logic_1)) then 
                    grp_forward_2_fu_1831_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forward_3_fu_1821_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_forward_3_fu_1821_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state61) and (tmp_66_fu_3096_p2 = ap_const_lv1_1))) then 
                    grp_forward_3_fu_1821_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forward_3_fu_1821_ap_ready = ap_const_logic_1)) then 
                    grp_forward_3_fu_1821_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forward_4_fu_1849_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_forward_4_fu_1849_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state67) and (tmp_68_fu_3130_p2 = ap_const_lv1_1))) then 
                    grp_forward_4_fu_1849_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forward_4_fu_1849_ap_ready = ap_const_logic_1)) then 
                    grp_forward_4_fu_1849_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forward_fu_1841_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_forward_fu_1841_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (tmp_64_fu_3079_p2 = ap_const_lv1_1))) then 
                    grp_forward_fu_1841_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forward_fu_1841_ap_ready = ap_const_logic_1)) then 
                    grp_forward_fu_1841_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((inStream_V_V_0_ack_out = ap_const_logic_1) and (inStream_V_V_0_vld_out = ap_const_logic_1))) then 
                                        inStream_V_V_0_sel_rd <= not(inStream_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((inStream_V_V_0_ack_in = ap_const_logic_1) and (inStream_V_V_0_vld_in = ap_const_logic_1))) then 
                                        inStream_V_V_0_sel_wr <= not(inStream_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((inStream_V_V_0_vld_in = ap_const_logic_0) and (inStream_V_V_0_state = ap_const_lv2_2)) or ((inStream_V_V_0_vld_in = ap_const_logic_0) and (inStream_V_V_0_ack_out = ap_const_logic_1) and (inStream_V_V_0_state = ap_const_lv2_3)))) then 
                    inStream_V_V_0_state <= ap_const_lv2_2;
                elsif ((((inStream_V_V_0_ack_out = ap_const_logic_0) and (inStream_V_V_0_state = ap_const_lv2_1)) or ((inStream_V_V_0_ack_out = ap_const_logic_0) and (inStream_V_V_0_vld_in = ap_const_logic_1) and (inStream_V_V_0_state = ap_const_lv2_3)))) then 
                    inStream_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((inStream_V_V_0_vld_in = ap_const_logic_0) and (inStream_V_V_0_ack_out = ap_const_logic_1))) and not(((inStream_V_V_0_ack_out = ap_const_logic_0) and (inStream_V_V_0_vld_in = ap_const_logic_1))) and (inStream_V_V_0_state = ap_const_lv2_3)) or ((inStream_V_V_0_ack_out = ap_const_logic_1) and (inStream_V_V_0_state = ap_const_lv2_1)) or ((inStream_V_V_0_vld_in = ap_const_logic_1) and (inStream_V_V_0_state = ap_const_lv2_2)))) then 
                    inStream_V_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((outStream_V_V_1_ack_out = ap_const_logic_1) and (outStream_V_V_1_vld_out = ap_const_logic_1))) then 
                                        outStream_V_V_1_sel_rd <= not(outStream_V_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((outStream_V_V_1_ack_in = ap_const_logic_1) and (outStream_V_V_1_vld_in = ap_const_logic_1))) then 
                                        outStream_V_V_1_sel_wr <= not(outStream_V_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_V_1_state <= ap_const_lv2_0;
            else
                if ((((outStream_V_V_1_vld_in = ap_const_logic_0) and (outStream_V_V_1_state = ap_const_lv2_2)) or ((outStream_V_V_1_vld_in = ap_const_logic_0) and (outStream_V_V_1_ack_out = ap_const_logic_1) and (outStream_V_V_1_state = ap_const_lv2_3)))) then 
                    outStream_V_V_1_state <= ap_const_lv2_2;
                elsif ((((outStream_V_V_1_ack_out = ap_const_logic_0) and (outStream_V_V_1_state = ap_const_lv2_1)) or ((outStream_V_V_1_ack_out = ap_const_logic_0) and (outStream_V_V_1_vld_in = ap_const_logic_1) and (outStream_V_V_1_state = ap_const_lv2_3)))) then 
                    outStream_V_V_1_state <= ap_const_lv2_1;
                elsif (((not(((outStream_V_V_1_vld_in = ap_const_logic_0) and (outStream_V_V_1_ack_out = ap_const_logic_1))) and not(((outStream_V_V_1_ack_out = ap_const_logic_0) and (outStream_V_V_1_vld_in = ap_const_logic_1))) and (outStream_V_V_1_state = ap_const_lv2_3)) or ((outStream_V_V_1_ack_out = ap_const_logic_1) and (outStream_V_V_1_state = ap_const_lv2_1)) or ((outStream_V_V_1_vld_in = ap_const_logic_1) and (outStream_V_V_1_state = ap_const_lv2_2)))) then 
                    outStream_V_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_1630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (exitcond3_fu_2877_p2 = ap_const_lv1_1))) then 
                i1_reg_1630 <= ap_const_lv5_0;
            elsif ((not(((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond7_fu_2934_p2 = ap_const_lv1_1))) then 
                i1_reg_1630 <= i_58_reg_3790;
            end if; 
        end if;
    end process;

    i37_reg_1596_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state48) and (exitcond2_fu_2854_p2 = ap_const_lv1_1))) then 
                i37_reg_1596 <= ap_const_lv3_0;
            elsif ((not(((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state50) and (exitcond5_fu_2889_p2 = ap_const_lv1_1))) then 
                i37_reg_1596 <= i_57_reg_3769;
            end if; 
        end if;
    end process;

    i3_reg_1664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state51) and (exitcond4_fu_2922_p2 = ap_const_lv1_1))) then 
                i3_reg_1664 <= ap_const_lv7_0;
            elsif ((not(((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state54) and (exitcond9_fu_2979_p2 = ap_const_lv1_1))) then 
                i3_reg_1664 <= i_59_reg_3811;
            end if; 
        end if;
    end process;

    i5_reg_1698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) and (exitcond6_fu_2967_p2 = ap_const_lv1_1))) then 
                i5_reg_1698 <= ap_const_lv4_0;
            elsif ((not(((fcw_V_V_0_vld_out = ap_const_logic_0) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state56) and (exitcond1_fu_3048_p2 = ap_const_lv1_1))) then 
                i5_reg_1698 <= i_60_reg_3827;
            end if; 
        end if;
    end process;

    i_0_i_i10_i_i1_reg_1236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond_i_i4_i_i1_fu_2151_p2 = ap_const_lv1_1))) then 
                i_0_i_i10_i_i1_reg_1236 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond_i_i11_i_i1_fu_2168_p2 = ap_const_lv1_0))) then 
                i_0_i_i10_i_i1_reg_1236 <= i_13_fu_2174_p2;
            end if; 
        end if;
    end process;

    i_0_i_i10_i_i2_reg_1528_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) and (exitcond_i_i4_i_i3_fu_2646_p2 = ap_const_lv1_1))) then 
                i_0_i_i10_i_i2_reg_1528 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state42) and (exitcond_i_i11_i_i2_fu_2663_p2 = ap_const_lv1_0))) then 
                i_0_i_i10_i_i2_reg_1528 <= i_53_fu_2669_p2;
            end if; 
        end if;
    end process;

    i_0_i_i10_i_i_reg_1069_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_i_i4_i_i_fu_1867_p2 = ap_const_lv1_1))) then 
                i_0_i_i10_i_i_reg_1069 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_i_i11_i_i_fu_1884_p2 = ap_const_lv1_0))) then 
                i_0_i_i10_i_i_reg_1069 <= i_1_fu_1890_p2;
            end if; 
        end if;
    end process;

    i_0_i_i14_i_i1_reg_1271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (exitcond_i_i15_i_i1_fu_2197_p2 = ap_const_lv1_0))) then 
                i_0_i_i14_i_i1_reg_1271 <= i_14_fu_2203_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                i_0_i_i14_i_i1_reg_1271 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    i_0_i_i14_i_i_reg_1103_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond_i_i15_i_i_fu_1917_p2 = ap_const_lv1_0))) then 
                i_0_i_i14_i_i_reg_1103 <= i_2_fu_1923_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_0_i_i14_i_i_reg_1103 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_i_i18_i_i_reg_1404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (exitcond_i_i8_i_i2_fu_2436_p2 = ap_const_lv1_1))) then 
                i_0_i_i18_i_i_reg_1404 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (exitcond_i_i19_i_i_fu_2453_p2 = ap_const_lv1_0))) then 
                i_0_i_i18_i_i_reg_1404 <= i_46_fu_2459_p2;
            end if; 
        end if;
    end process;

    i_0_i_i1_i_i1_reg_1360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (exitcond_i_i_i_i3_fu_2368_p2 = ap_const_lv1_1))) then 
                i_0_i_i1_i_i1_reg_1360 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (exitcond_i_i2_i_i1_fu_2385_p2 = ap_const_lv1_0))) then 
                i_0_i_i1_i_i1_reg_1360 <= i_42_fu_2391_p2;
            end if; 
        end if;
    end process;

    i_0_i_i1_i_i_i_i1_reg_1203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_i_i2_i_i_fu_2100_p2 = ap_const_lv1_1))) then 
                i_0_i_i1_i_i_i_i1_reg_1203 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (exitcond_i_i2_i_i_i_1_fu_2117_p2 = ap_const_lv1_0))) then 
                i_0_i_i1_i_i_i_i1_reg_1203 <= i_10_fu_2123_p2;
            end if; 
        end if;
    end process;

    i_0_i_i1_i_i_i_i2_reg_1293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (exitcond_i_i_i_i2_fu_2230_p2 = ap_const_lv1_1))) then 
                i_0_i_i1_i_i_i_i2_reg_1293 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond_i_i2_i_i_i_2_fu_2247_p2 = ap_const_lv1_0))) then 
                i_0_i_i1_i_i_i_i2_reg_1293 <= i_16_fu_2253_p2;
            end if; 
        end if;
    end process;

    i_0_i_i1_i_i_i_i3_reg_1371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (exitcond_i_i2_i_i1_fu_2385_p2 = ap_const_lv1_1))) then 
                i_0_i_i1_i_i_i_i3_reg_1371 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (exitcond_i_i2_i_i_i_3_fu_2402_p2 = ap_const_lv1_0))) then 
                i_0_i_i1_i_i_i_i3_reg_1371 <= i_43_fu_2408_p2;
            end if; 
        end if;
    end process;

    i_0_i_i1_i_i_i_i4_reg_1461_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (exitcond_i_i_i_i4_fu_2515_p2 = ap_const_lv1_1))) then 
                i_0_i_i1_i_i_i_i4_reg_1461 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state35) and (exitcond_i_i2_i_i_i_4_fu_2532_p2 = ap_const_lv1_0))) then 
                i_0_i_i1_i_i_i_i4_reg_1461 <= i_49_fu_2538_p2;
            end if; 
        end if;
    end process;

    i_0_i_i1_i_i_i_i_reg_1125_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond_i_i_i_i_fu_1949_p2 = ap_const_lv1_1))) then 
                i_0_i_i1_i_i_i_i_reg_1125 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i_i2_i_i_i_s_fu_1966_p2 = ap_const_lv1_0))) then 
                i_0_i_i1_i_i_i_i_reg_1125 <= i_4_fu_1972_p2;
            end if; 
        end if;
    end process;

    i_0_i_i1_i_i_reg_1192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_i_i_i_i1_fu_2083_p2 = ap_const_lv1_1))) then 
                i_0_i_i1_i_i_reg_1192 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_i_i2_i_i_fu_2100_p2 = ap_const_lv1_0))) then 
                i_0_i_i1_i_i_reg_1192 <= i_9_fu_2106_p2;
            end if; 
        end if;
    end process;

    i_0_i_i1_reg_1315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (exitcond_i_i_i_i_i_i_2_fu_2264_p2 = ap_const_lv1_1))) then 
                i_0_i_i1_reg_1315 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (tmp_119_i_fu_2342_p2 = ap_const_lv1_0))) then 
                i_0_i_i1_reg_1315 <= i_20_reg_3493;
            end if; 
        end if;
    end process;

    i_0_i_i2_reg_1483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond_i_i_i_i_i_i_4_fu_2549_p2 = ap_const_lv1_1))) then 
                i_0_i_i2_reg_1483 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_117_i_fu_2620_p2 = ap_const_lv1_0))) then 
                i_0_i_i2_reg_1483 <= i_51_reg_3627;
            end if; 
        end if;
    end process;

    i_0_i_i3_i_i1_reg_1225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond_i_i_i_i_i_i_1_fu_2134_p2 = ap_const_lv1_1))) then 
                i_0_i_i3_i_i1_reg_1225 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond_i_i4_i_i1_fu_2151_p2 = ap_const_lv1_0))) then 
                i_0_i_i3_i_i1_reg_1225 <= i_12_fu_2157_p2;
            end if; 
        end if;
    end process;

    i_0_i_i3_i_i2_reg_1439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond_i_i4_i_i2_fu_2482_p2 = ap_const_lv1_0))) then 
                i_0_i_i3_i_i2_reg_1439 <= i_47_fu_2488_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                i_0_i_i3_i_i2_reg_1439 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_0_i_i3_i_i3_reg_1517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state37) and (exitcond_i_i2_fu_2572_p2 = ap_const_lv1_1))) then 
                i_0_i_i3_i_i3_reg_1517 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state41) and (exitcond_i_i4_i_i3_fu_2646_p2 = ap_const_lv1_0))) then 
                i_0_i_i3_i_i3_reg_1517 <= i_52_fu_2652_p2;
            end if; 
        end if;
    end process;

    i_0_i_i3_i_i_reg_1058_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_i_i4_i_i_fu_1867_p2 = ap_const_lv1_0))) then 
                i_0_i_i3_i_i_reg_1058 <= i_fu_1873_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_i3_i_i_reg_1058 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_0_i_i3_reg_1562_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (tmp_48_fu_2742_p2 = ap_const_lv1_1) and (exitcond_i_i_i_i5_fu_2716_p2 = ap_const_lv1_1))) then 
                i_0_i_i3_reg_1562 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state47) and (tmp_115_i_fu_2829_p2 = ap_const_lv1_0))) then 
                i_0_i_i3_reg_1562 <= i_55_reg_3715;
            end if; 
        end if;
    end process;

    i_0_i_i7_i_i2_reg_1393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (exitcond_i_i_i_i_i_i_3_fu_2419_p2 = ap_const_lv1_1))) then 
                i_0_i_i7_i_i2_reg_1393 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (exitcond_i_i8_i_i2_fu_2436_p2 = ap_const_lv1_0))) then 
                i_0_i_i7_i_i2_reg_1393 <= i_45_fu_2442_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i1_reg_1181_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_i_i_fu_2006_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i1_reg_1181 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_i_i_i_i1_fu_2083_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i1_reg_1181 <= i_6_fu_2089_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i2_reg_1282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_19_fu_2224_p2 = ap_const_lv1_1) and (exitcond_i_i15_i_i1_fu_2197_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i2_reg_1282 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (exitcond_i_i_i_i2_fu_2230_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i2_reg_1282 <= i_15_fu_2236_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i3_reg_1349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state23) and (exitcond_i_i1_fu_2287_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i3_reg_1349 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state26) and (exitcond_i_i_i_i3_fu_2368_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i3_reg_1349 <= i_37_fu_2374_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i4_reg_1450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (tmp_34_fu_2509_p2 = ap_const_lv1_1) and (exitcond_i_i4_i_i2_fu_2482_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i4_reg_1450 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (exitcond_i_i_i_i4_fu_2515_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i4_reg_1450 <= i_48_fu_2521_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i5_reg_1551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (exitcond_i_i_i_i5_fu_2716_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i5_reg_1551 <= i_54_fu_2722_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                i_0_i_i_i_i5_reg_1551 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i_i_i1_reg_1214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (exitcond_i_i2_i_i_i_1_fu_2117_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i_i_i1_reg_1214 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond_i_i_i_i_i_i_1_fu_2134_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i_i_i1_reg_1214 <= i_11_fu_2140_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i_i_i2_reg_1304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond_i_i2_i_i_i_2_fu_2247_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i_i_i2_reg_1304 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (exitcond_i_i_i_i_i_i_2_fu_2264_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i_i_i2_reg_1304 <= i_17_fu_2270_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i_i_i3_reg_1382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (exitcond_i_i2_i_i_i_3_fu_2402_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i_i_i3_reg_1382 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (exitcond_i_i_i_i_i_i_3_fu_2419_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i_i_i3_reg_1382 <= i_44_fu_2425_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i_i_i4_reg_1472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (exitcond_i_i2_i_i_i_4_fu_2532_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i_i_i4_reg_1472 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond_i_i_i_i_i_i_4_fu_2549_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i_i_i4_reg_1472 <= i_50_fu_2555_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i_i_i_reg_1136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i_i2_i_i_i_s_fu_1966_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i_i_i_reg_1136 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond_i_i_i_i_i_i_fu_1983_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i_i_i_reg_1136 <= i_5_fu_1989_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_i_reg_1114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_8_fu_1943_p2 = ap_const_lv1_1) and (exitcond_i_i15_i_i_fu_1917_p2 = ap_const_lv1_1))) then 
                i_0_i_i_i_i_reg_1114 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond_i_i_i_i_fu_1949_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_i_reg_1114 <= i_3_fu_1955_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_1147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond_i_i_i_i_i_i_fu_1983_p2 = ap_const_lv1_1))) then 
                i_0_i_i_reg_1147 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_121_i_fu_2057_p2 = ap_const_lv1_0))) then 
                i_0_i_i_reg_1147 <= i_8_reg_3359;
            end if; 
        end if;
    end process;

    i_i1_reg_1338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (tmp_119_i_fu_2342_p2 = ap_const_lv1_1))) then 
                i_i1_reg_1338 <= i_18_fu_2347_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i_i1_reg_1338 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    i_i2_reg_1506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_117_i_fu_2620_p2 = ap_const_lv1_1))) then 
                i_i2_reg_1506 <= i_19_fu_2625_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                i_i2_reg_1506 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_i3_reg_1574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state47) and (tmp_115_i_fu_2829_p2 = ap_const_lv1_1))) then 
                i_i3_reg_1574 <= i_56_fu_2834_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                i_i3_reg_1574 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i_i_reg_1170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_121_i_fu_2057_p2 = ap_const_lv1_1))) then 
                i_i_reg_1170 <= i_7_fu_2062_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i_i_reg_1170 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    idx7_reg_1810_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state72) and (exitcond_i_fu_3159_p2 = ap_const_lv1_1))) then 
                idx7_reg_1810 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state78) and (outStream_V_V_1_ack_in = ap_const_logic_1))) then 
                idx7_reg_1810 <= idx_2_reg_3989;
            end if; 
        end if;
    end process;

    idx_reg_1585_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (exitcond_i_i3_fu_2748_p2 = ap_const_lv1_1))) then 
                idx_reg_1585 <= ap_const_lv11_0;
            elsif ((not(((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state48) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) then 
                idx_reg_1585 <= idx_1_fu_2860_p2;
            end if; 
        end if;
    end process;

    j2_reg_1653_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state51) and (exitcond4_fu_2922_p2 = ap_const_lv1_0))) then 
                j2_reg_1653 <= ap_const_lv8_0;
            elsif ((not(((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) then 
                j2_reg_1653 <= j_2_fu_2940_p2;
            end if; 
        end if;
    end process;

    j4_reg_1687_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) and (exitcond6_fu_2967_p2 = ap_const_lv1_0))) then 
                j4_reg_1687 <= ap_const_lv9_0;
            elsif ((not(((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state54) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) then 
                j4_reg_1687 <= j_3_fu_2985_p2;
            end if; 
        end if;
    end process;

    j6_reg_1709_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond8_fu_3006_p2 = ap_const_lv1_0))) then 
                j6_reg_1709 <= ap_const_lv7_0;
            elsif ((not(((fcw_V_V_0_vld_out = ap_const_logic_0) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state56) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) then 
                j6_reg_1709 <= j_4_fu_3054_p2;
            end if; 
        end if;
    end process;

    j_reg_1619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (exitcond3_fu_2877_p2 = ap_const_lv1_0))) then 
                j_reg_1619 <= ap_const_lv5_0;
            elsif ((not(((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state50) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) then 
                j_reg_1619 <= j_1_fu_2895_p2;
            end if; 
        end if;
    end process;

    p_Val2_0_i_reg_1786_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state72) and (exitcond_i_fu_3159_p2 = ap_const_lv1_0))) then 
                p_Val2_0_i_reg_1786 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                p_Val2_0_i_reg_1786 <= grp_fu_3276_p3(27 downto 12);
            end if; 
        end if;
    end process;

    p_i0_0_i1_reg_1731_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
                p_i0_0_i1_reg_1731 <= p_i0_1_reg_3871;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state60) and (grp_forward_fu_1841_ap_done = ap_const_logic_1))) then 
                p_i0_0_i1_reg_1731 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_i0_0_i2_reg_1742_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
                p_i0_0_i2_reg_1742 <= p_i0_2_reg_3889;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (grp_forward_3_fu_1821_ap_done = ap_const_logic_1))) then 
                p_i0_0_i2_reg_1742 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_i0_0_i3_reg_1753_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                p_i0_0_i3_reg_1753 <= p_i0_3_reg_3907;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state66) and (grp_forward_1_fu_1859_ap_done = ap_const_logic_1))) then 
                p_i0_0_i3_reg_1753 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    p_i0_0_i4_reg_1764_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                p_i0_0_i4_reg_1764 <= p_i0_4_reg_3925;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (grp_forward_4_fu_1849_ap_done = ap_const_logic_1))) then 
                p_i0_0_i4_reg_1764 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    p_i0_0_i_reg_1720_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
                p_i0_0_i_reg_1720 <= p_i0_reg_3853;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state57) and (grp_forward_2_fu_1831_ap_done = ap_const_logic_1))) then 
                p_i0_0_i_reg_1720 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_z_assign_1_0_i_reg_1799_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state72) and (exitcond_i_fu_3159_p2 = ap_const_lv1_0))) then 
                p_z_assign_1_0_i_reg_1799 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                p_z_assign_1_0_i_reg_1799 <= i_z_0_i_reg_3956;
            end if; 
        end if;
    end process;

    p_z_assign_reg_1775_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state70) and (tmp_69_fu_3147_p2 = ap_const_lv1_1))) then 
                p_z_assign_reg_1775 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state73) and (exitcond_0_i_fu_3205_p2 = ap_const_lv1_1))) then 
                p_z_assign_reg_1775 <= i_filter_reg_3938;
            end if; 
        end if;
    end process;

    phi_mul1_reg_1259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond_i_i11_i_i1_fu_2168_p2 = ap_const_lv1_1))) then 
                phi_mul1_reg_1259 <= ap_const_lv12_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (exitcond_i_i15_i_i1_fu_2197_p2 = ap_const_lv1_1) and (tmp_19_fu_2224_p2 = ap_const_lv1_0))) then 
                phi_mul1_reg_1259 <= next_mul1_reg_3440;
            end if; 
        end if;
    end process;

    phi_mul2_reg_1326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state22) and (exitcond_i_i_i_i_i_i_2_fu_2264_p2 = ap_const_lv1_1))) then 
                phi_mul2_reg_1326 <= ap_const_lv12_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (tmp_119_i_fu_2342_p2 = ap_const_lv1_0))) then 
                phi_mul2_reg_1326 <= next_mul2_reg_3485;
            end if; 
        end if;
    end process;

    phi_mul3_reg_1427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (exitcond_i_i19_i_i_fu_2453_p2 = ap_const_lv1_1))) then 
                phi_mul3_reg_1427 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond_i_i4_i_i2_fu_2482_p2 = ap_const_lv1_1) and (tmp_34_fu_2509_p2 = ap_const_lv1_0))) then 
                phi_mul3_reg_1427 <= next_mul3_reg_3574;
            end if; 
        end if;
    end process;

    phi_mul4_reg_1494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond_i_i_i_i_i_i_4_fu_2549_p2 = ap_const_lv1_1))) then 
                phi_mul4_reg_1494 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_117_i_fu_2620_p2 = ap_const_lv1_0))) then 
                phi_mul4_reg_1494 <= next_mul4_reg_3619;
            end if; 
        end if;
    end process;

    phi_mul5_reg_1607_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state48) and (exitcond2_fu_2854_p2 = ap_const_lv1_1))) then 
                phi_mul5_reg_1607 <= ap_const_lv8_0;
            elsif ((not(((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state50) and (exitcond5_fu_2889_p2 = ap_const_lv1_1))) then 
                phi_mul5_reg_1607 <= next_mul5_reg_3761;
            end if; 
        end if;
    end process;

    phi_mul6_reg_1641_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (exitcond3_fu_2877_p2 = ap_const_lv1_1))) then 
                phi_mul6_reg_1641 <= ap_const_lv12_0;
            elsif ((not(((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond7_fu_2934_p2 = ap_const_lv1_1))) then 
                phi_mul6_reg_1641 <= next_mul6_reg_3782;
            end if; 
        end if;
    end process;

    phi_mul7_reg_1675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state51) and (exitcond4_fu_2922_p2 = ap_const_lv1_1))) then 
                phi_mul7_reg_1675 <= ap_const_lv16_0;
            elsif ((not(((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state54) and (exitcond9_fu_2979_p2 = ap_const_lv1_1))) then 
                phi_mul7_reg_1675 <= next_mul7_reg_3803;
            end if; 
        end if;
    end process;

    phi_mul8_reg_1158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond_i_i_i_i_i_i_fu_1983_p2 = ap_const_lv1_1))) then 
                phi_mul8_reg_1158 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_121_i_fu_2057_p2 = ap_const_lv1_0))) then 
                phi_mul8_reg_1158 <= next_mul9_reg_3351;
            end if; 
        end if;
    end process;

    phi_mul_reg_1092_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_i_i11_i_i_fu_1884_p2 = ap_const_lv1_1))) then 
                phi_mul_reg_1092 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond_i_i15_i_i_fu_1917_p2 = ap_const_lv1_1) and (tmp_8_fu_1943_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_1092 <= next_mul_reg_3306;
            end if; 
        end if;
    end process;

    tmp_17_reg_1247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond_i_i11_i_i1_fu_2168_p2 = ap_const_lv1_1))) then 
                tmp_17_reg_1247 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (exitcond_i_i15_i_i1_fu_2197_p2 = ap_const_lv1_1) and (tmp_19_fu_2224_p2 = ap_const_lv1_0))) then 
                tmp_17_reg_1247 <= tmp_18_reg_3445;
            end if; 
        end if;
    end process;

    tmp_32_reg_1415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state31) and (exitcond_i_i19_i_i_fu_2453_p2 = ap_const_lv1_1))) then 
                tmp_32_reg_1415 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond_i_i4_i_i2_fu_2482_p2 = ap_const_lv1_1) and (tmp_34_fu_2509_p2 = ap_const_lv1_0))) then 
                tmp_32_reg_1415 <= tmp_33_reg_3579;
            end if; 
        end if;
    end process;

    tmp_43_reg_1539_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state42) and (exitcond_i_i11_i_i2_fu_2663_p2 = ap_const_lv1_1))) then 
                tmp_43_reg_1539 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state44) and (exitcond_i_i_i_i5_fu_2716_p2 = ap_const_lv1_1) and (tmp_48_fu_2742_p2 = ap_const_lv1_0))) then 
                tmp_43_reg_1539 <= tmp_44_reg_3691;
            end if; 
        end if;
    end process;

    tmp_4_reg_1080_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_i_i11_i_i_fu_1884_p2 = ap_const_lv1_1))) then 
                tmp_4_reg_1080 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond_i_i15_i_i_fu_1917_p2 = ap_const_lv1_1) and (tmp_8_fu_1943_p2 = ap_const_lv1_0))) then 
                tmp_4_reg_1080 <= tmp_5_reg_3311;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((c1w_V_V_0_load_A = ap_const_logic_1)) then
                c1w_V_V_0_payload_A <= c1w_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((c1w_V_V_0_load_B = ap_const_logic_1)) then
                c1w_V_V_0_payload_B <= c1w_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((c3w_V_V_0_load_A = ap_const_logic_1)) then
                c3w_V_V_0_payload_A <= c3w_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((c3w_V_V_0_load_B = ap_const_logic_1)) then
                c3w_V_V_0_payload_B <= c3w_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                c5_W_size_x_load_reg_3647 <= c5_W_size_x_q0;
                c5_W_size_y_load_reg_3652 <= c5_W_size_y_q0;
                c5_W_size_z_load_reg_3657 <= c5_W_size_z_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((c5w_V_V_0_load_A = ap_const_logic_1)) then
                c5w_V_V_0_payload_A <= c5w_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((c5w_V_V_0_load_B = ap_const_logic_1)) then
                c5w_V_V_0_payload_B <= c5w_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                fc6_W_data_V_load_reg_3976 <= fc6_W_data_V_q0;
                fc6_input_data_V_lo_reg_3971 <= fc6_input_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((fcw_V_V_0_load_A = ap_const_logic_1)) then
                fcw_V_V_0_payload_A <= fcw_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((fcw_V_V_0_load_B = ap_const_logic_1)) then
                fcw_V_V_0_payload_B <= fcw_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                i_20_reg_3493 <= i_20_fu_2293_p2;
                next_mul2_reg_3485 <= next_mul2_fu_2281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                i_51_reg_3627 <= i_51_fu_2578_p2;
                next_mul4_reg_3619 <= next_mul4_fu_2566_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                i_55_reg_3715 <= i_55_fu_2754_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                i_57_reg_3769 <= i_57_fu_2883_p2;
                next_mul5_reg_3761 <= next_mul5_fu_2871_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                i_58_reg_3790 <= i_58_fu_2928_p2;
                next_mul6_reg_3782 <= next_mul6_fu_2916_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                i_59_reg_3811 <= i_59_fu_2973_p2;
                next_mul7_reg_3803 <= next_mul7_fu_2961_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                i_60_reg_3827 <= i_60_fu_3012_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_8_reg_3359 <= i_8_fu_2012_p2;
                next_mul9_reg_3351 <= next_mul9_fu_2000_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                i_filter_reg_3938 <= i_filter_fu_3165_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                i_z_0_i_reg_3956 <= i_z_0_i_fu_3211_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state76) and (outStream_V_V_1_ack_in = ap_const_logic_1))) then
                idx_2_reg_3989 <= idx_2_fu_3265_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((inStream_V_V_0_load_A = ap_const_logic_1)) then
                inStream_V_V_0_payload_A <= inStream_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((inStream_V_V_0_load_B = ap_const_logic_1)) then
                inStream_V_V_0_payload_B <= inStream_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                next_mul1_reg_3440 <= next_mul1_fu_2185_p2;
                tmp_18_reg_3445 <= tmp_18_fu_2191_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                next_mul3_reg_3574 <= next_mul3_fu_2470_p2;
                tmp_33_reg_3579 <= tmp_33_fu_2476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                next_mul_reg_3306 <= next_mul_fu_1905_p2;
                    phi_mul_cast_reg_3301(6 downto 0) <= phi_mul_cast_fu_1901_p1(6 downto 0);
                tmp_5_reg_3311 <= tmp_5_fu_1911_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((outStream_V_V_1_load_A = ap_const_logic_1)) then
                outStream_V_V_1_payload_A <= fc6_output_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((outStream_V_V_1_load_B = ap_const_logic_1)) then
                outStream_V_V_1_payload_B <= fc6_output_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                    p_i0_0_i1_cast_reg_3863(10 downto 0) <= p_i0_0_i1_cast_fu_3091_p1(10 downto 0);
                p_i0_1_reg_3871 <= p_i0_1_fu_3102_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                    p_i0_0_i2_cast_reg_3881(10 downto 0) <= p_i0_0_i2_cast_fu_3108_p1(10 downto 0);
                p_i0_2_reg_3889 <= p_i0_2_fu_3119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                    p_i0_0_i3_cast9_reg_3899(8 downto 0) <= p_i0_0_i3_cast9_fu_3125_p1(8 downto 0);
                p_i0_3_reg_3907 <= p_i0_3_fu_3136_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                    p_i0_0_i4_cast8_reg_3917(6 downto 0) <= p_i0_0_i4_cast8_fu_3142_p1(6 downto 0);
                p_i0_4_reg_3925 <= p_i0_4_fu_3153_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                    p_i0_0_i_cast_reg_3845(12 downto 0) <= p_i0_0_i_cast_fu_3074_p1(12 downto 0);
                p_i0_reg_3853 <= p_i0_fu_3085_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                tmp_44_reg_3691 <= tmp_44_fu_2680_p2;
                    tmp_47_reg_3696(11 downto 3) <= tmp_47_fu_2710_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                    tmp_53_reg_3735(11 downto 3) <= tmp_53_fu_2791_p2(11 downto 3);
                tmp_i3_reg_3740 <= tmp_i3_fu_2823_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond8_fu_3006_p2 = ap_const_lv1_0))) then
                    tmp_62_reg_3832(11 downto 3) <= tmp_62_fu_3042_p2(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state72) and (exitcond_i_fu_3159_p2 = ap_const_lv1_0))) then
                    tmp_72_reg_3948(11 downto 3) <= tmp_72_fu_3199_p2(11 downto 3);
                    tmp_i4_reg_3943(3 downto 0) <= tmp_i4_fu_3171_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                tmp_i1_reg_3513 <= tmp_i1_fu_2332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                tmp_i2_reg_3662 <= tmp_i2_fu_2610_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_i_reg_3379 <= tmp_i_fu_2047_p2;
            end if;
        end if;
    end process;
    phi_mul_cast_reg_3301(7) <= '0';
    tmp_47_reg_3696(2 downto 0) <= "000";
    tmp_53_reg_3735(2 downto 0) <= "000";
    tmp_62_reg_3832(2 downto 0) <= "000";
    p_i0_0_i_cast_reg_3845(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    p_i0_0_i1_cast_reg_3863(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    p_i0_0_i2_cast_reg_3881(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    p_i0_0_i3_cast9_reg_3899(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    p_i0_0_i4_cast8_reg_3917(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    tmp_i4_reg_3943(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    tmp_72_reg_3948(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, inStream_V_V_0_vld_out, outStream_V_V_1_ack_in, outStream_V_V_1_state, c1w_V_V_0_vld_out, c3w_V_V_0_vld_out, c5w_V_V_0_vld_out, fcw_V_V_0_vld_out, ap_CS_fsm_state48, exitcond2_fu_2854_p2, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state50, exitcond5_fu_2889_p2, ap_CS_fsm_state52, exitcond7_fu_2934_p2, ap_CS_fsm_state54, exitcond9_fu_2979_p2, ap_CS_fsm_state56, exitcond1_fu_3048_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, exitcond_i_i_fu_2006_p2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, exitcond_i_i1_fu_2287_p2, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, exitcond_i_i2_fu_2572_p2, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state45, exitcond_i_i3_fu_2748_p2, ap_CS_fsm_state47, ap_CS_fsm_state49, ap_CS_fsm_state51, ap_CS_fsm_state53, ap_CS_fsm_state55, exitcond8_fu_3006_p2, ap_CS_fsm_state58, tmp_64_fu_3079_p2, ap_CS_fsm_state61, tmp_66_fu_3096_p2, ap_CS_fsm_state64, tmp_67_fu_3113_p2, ap_CS_fsm_state67, tmp_68_fu_3130_p2, ap_CS_fsm_state70, tmp_69_fu_3147_p2, ap_CS_fsm_state72, exitcond_i_fu_3159_p2, ap_CS_fsm_state73, exitcond_0_i_fu_3205_p2, ap_CS_fsm_state76, exitcond_fu_3259_p2, grp_forward_3_fu_1821_ap_done, grp_forward_2_fu_1831_ap_done, grp_forward_fu_1841_ap_done, grp_forward_4_fu_1849_ap_done, grp_forward_1_fu_1859_ap_done, exitcond_i_i4_i_i_fu_1867_p2, exitcond_i_i11_i_i_fu_1884_p2, exitcond_i_i15_i_i_fu_1917_p2, tmp_8_fu_1943_p2, exitcond_i_i_i_i_fu_1949_p2, exitcond_i_i2_i_i_i_s_fu_1966_p2, exitcond_i_i_i_i_i_i_fu_1983_p2, tmp_121_i_fu_2057_p2, exitcond_i_i_i_i1_fu_2083_p2, exitcond_i_i2_i_i_fu_2100_p2, exitcond_i_i2_i_i_i_1_fu_2117_p2, exitcond_i_i_i_i_i_i_1_fu_2134_p2, exitcond_i_i4_i_i1_fu_2151_p2, exitcond_i_i11_i_i1_fu_2168_p2, exitcond_i_i15_i_i1_fu_2197_p2, tmp_19_fu_2224_p2, exitcond_i_i_i_i2_fu_2230_p2, exitcond_i_i2_i_i_i_2_fu_2247_p2, exitcond_i_i_i_i_i_i_2_fu_2264_p2, tmp_119_i_fu_2342_p2, exitcond_i_i_i_i3_fu_2368_p2, exitcond_i_i2_i_i1_fu_2385_p2, exitcond_i_i2_i_i_i_3_fu_2402_p2, exitcond_i_i_i_i_i_i_3_fu_2419_p2, exitcond_i_i8_i_i2_fu_2436_p2, exitcond_i_i19_i_i_fu_2453_p2, exitcond_i_i4_i_i2_fu_2482_p2, tmp_34_fu_2509_p2, exitcond_i_i_i_i4_fu_2515_p2, exitcond_i_i2_i_i_i_4_fu_2532_p2, exitcond_i_i_i_i_i_i_4_fu_2549_p2, tmp_117_i_fu_2620_p2, exitcond_i_i4_i_i3_fu_2646_p2, exitcond_i_i11_i_i2_fu_2663_p2, exitcond_i_i_i_i5_fu_2716_p2, tmp_48_fu_2742_p2, tmp_115_i_fu_2829_p2, exitcond3_fu_2877_p2, exitcond4_fu_2922_p2, exitcond6_fu_2967_p2, ap_CS_fsm_state57, ap_CS_fsm_state60, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state69)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_i_i4_i_i_fu_1867_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_i_i11_i_i_fu_1884_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_8_fu_1943_p2 = ap_const_lv1_1) and (exitcond_i_i15_i_i_fu_1917_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond_i_i15_i_i_fu_1917_p2 = ap_const_lv1_1) and (tmp_8_fu_1943_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond_i_i_i_i_fu_1949_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i_i2_i_i_i_s_fu_1966_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond_i_i_i_i_i_i_fu_1983_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_i_i_fu_2006_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_121_i_fu_2057_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_i_i_i_i1_fu_2083_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_i_i2_i_i_fu_2100_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (exitcond_i_i2_i_i_i_1_fu_2117_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond_i_i_i_i_i_i_1_fu_2134_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond_i_i4_i_i1_fu_2151_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond_i_i11_i_i1_fu_2168_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_19_fu_2224_p2 = ap_const_lv1_1) and (exitcond_i_i15_i_i1_fu_2197_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (exitcond_i_i15_i_i1_fu_2197_p2 = ap_const_lv1_1) and (tmp_19_fu_2224_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (exitcond_i_i_i_i2_fu_2230_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond_i_i2_i_i_i_2_fu_2247_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (exitcond_i_i_i_i_i_i_2_fu_2264_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (exitcond_i_i1_fu_2287_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (tmp_119_i_fu_2342_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (exitcond_i_i_i_i3_fu_2368_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (exitcond_i_i2_i_i1_fu_2385_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (exitcond_i_i2_i_i_i_3_fu_2402_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (exitcond_i_i_i_i_i_i_3_fu_2419_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (exitcond_i_i8_i_i2_fu_2436_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and (exitcond_i_i19_i_i_fu_2453_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (tmp_34_fu_2509_p2 = ap_const_lv1_1) and (exitcond_i_i4_i_i2_fu_2482_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond_i_i4_i_i2_fu_2482_p2 = ap_const_lv1_1) and (tmp_34_fu_2509_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state34) and (exitcond_i_i_i_i4_fu_2515_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state35) and (exitcond_i_i2_i_i_i_4_fu_2532_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond_i_i_i_i_i_i_4_fu_2549_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state37) and (exitcond_i_i2_fu_2572_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_117_i_fu_2620_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (exitcond_i_i4_i_i3_fu_2646_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state42) and (exitcond_i_i11_i_i2_fu_2663_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state44) and (tmp_48_fu_2742_p2 = ap_const_lv1_1) and (exitcond_i_i_i_i5_fu_2716_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state44) and (exitcond_i_i_i_i5_fu_2716_p2 = ap_const_lv1_1) and (tmp_48_fu_2742_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state45) and (exitcond_i_i3_fu_2748_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state47) and (tmp_115_i_fu_2829_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                if ((not(((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state48) and (exitcond2_fu_2854_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                elsif ((not(((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state48) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (exitcond3_fu_2877_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state50 => 
                if ((not(((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state50) and (exitcond5_fu_2889_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                elsif ((not(((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state50) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state51) and (exitcond4_fu_2922_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state52 => 
                if ((not(((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond7_fu_2934_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                elsif ((not(((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state53) and (exitcond6_fu_2967_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                if ((not(((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state54) and (exitcond9_fu_2979_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                elsif ((not(((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state54) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state55) and (exitcond8_fu_3006_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state56 => 
                if ((not(((fcw_V_V_0_vld_out = ap_const_logic_0) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state56) and (exitcond1_fu_3048_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                elsif ((not(((fcw_V_V_0_vld_out = ap_const_logic_0) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state56) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state57) and (grp_forward_2_fu_1831_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (tmp_64_fu_3079_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state60 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state60) and (grp_forward_fu_1841_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state61) and (tmp_66_fu_3096_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state63 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state63) and (grp_forward_3_fu_1821_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state64 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state64) and (tmp_67_fu_3113_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state66 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state66) and (grp_forward_1_fu_1859_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state67 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state67) and (tmp_68_fu_3130_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state69 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state69) and (grp_forward_4_fu_1849_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state70) and (tmp_69_fu_3147_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state72 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (exitcond_i_fu_3159_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state73 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state73) and (exitcond_0_i_fu_3205_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state76 => 
                if (((outStream_V_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state76) and (outStream_V_V_1_ack_in = ap_const_logic_1) and (exitcond_fu_3259_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state76) and (outStream_V_V_1_ack_in = ap_const_logic_1) and (exitcond_fu_3259_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state77) and (outStream_V_V_1_ack_in = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when ap_ST_fsm_state78 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state78) and (outStream_V_V_1_ack_in = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state78;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state48_assign_proc : process(inStream_V_V_0_vld_out, exitcond2_fu_2854_p2)
    begin
                ap_block_state48 <= ((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0));
    end process;


    ap_block_state50_assign_proc : process(c1w_V_V_0_vld_out, exitcond5_fu_2889_p2)
    begin
                ap_block_state50 <= ((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0));
    end process;


    ap_block_state52_assign_proc : process(c3w_V_V_0_vld_out, exitcond7_fu_2934_p2)
    begin
                ap_block_state52 <= ((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0));
    end process;


    ap_block_state54_assign_proc : process(c5w_V_V_0_vld_out, exitcond9_fu_2979_p2)
    begin
                ap_block_state54 <= ((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0));
    end process;


    ap_block_state56_assign_proc : process(fcw_V_V_0_vld_out, exitcond1_fu_3048_p2)
    begin
                ap_block_state56 <= ((fcw_V_V_0_vld_out = ap_const_logic_0) and (exitcond1_fu_3048_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(outStream_V_V_1_ack_in, outStream_V_V_1_state, ap_CS_fsm_state76, exitcond_fu_3259_p2)
    begin
        if (((outStream_V_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state76) and (outStream_V_V_1_ack_in = ap_const_logic_1) and (exitcond_fu_3259_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(outStream_V_V_1_ack_in, outStream_V_V_1_state, ap_CS_fsm_state76, exitcond_fu_3259_p2)
    begin
        if (((outStream_V_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state76) and (outStream_V_V_1_ack_in = ap_const_logic_1) and (exitcond_fu_3259_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    c1_W_data_V_address0_assign_proc : process(ap_CS_fsm_state50, ap_CS_fsm_state5, ap_CS_fsm_state11, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_address0, ap_CS_fsm_state57, tmp_10_cast_fu_1938_p1, tmp_17_cast_fu_2078_p1, tmp_76_cast_fu_2911_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            c1_W_data_V_address0 <= tmp_76_cast_fu_2911_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            c1_W_data_V_address0 <= tmp_17_cast_fu_2078_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            c1_W_data_V_address0 <= tmp_10_cast_fu_1938_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_W_data_V_address0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_address0;
        else 
            c1_W_data_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    c1_W_data_V_ce0_assign_proc : process(c1w_V_V_0_vld_out, ap_CS_fsm_state50, exitcond5_fu_2889_p2, ap_CS_fsm_state5, ap_CS_fsm_state11, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5) or (not(((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state50)))) then 
            c1_W_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_W_data_V_ce0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0;
        else 
            c1_W_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_W_data_V_d0_assign_proc : process(c1w_V_V_0_data_out, ap_CS_fsm_state50, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            c1_W_data_V_d0 <= c1w_V_V_0_data_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            c1_W_data_V_d0 <= ap_const_lv16_28;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            c1_W_data_V_d0 <= ap_const_lv16_0;
        else 
            c1_W_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c1_W_data_V_we0_assign_proc : process(c1w_V_V_0_vld_out, ap_CS_fsm_state50, exitcond5_fu_2889_p2, ap_CS_fsm_state5, ap_CS_fsm_state11, exitcond_i_i15_i_i_fu_1917_p2, tmp_121_i_fu_2057_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_121_i_fu_2057_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond_i_i15_i_i_fu_1917_p2 = ap_const_lv1_0)) or (not(((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state50) and (exitcond5_fu_2889_p2 = ap_const_lv1_0)))) then 
            c1_W_data_V_we0 <= ap_const_logic_1;
        else 
            c1_W_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    c1_W_size_x_address0 <= tmp_7_fu_2018_p1(3 - 1 downto 0);

    c1_W_size_x_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            c1_W_size_x_ce0 <= ap_const_logic_1;
        else 
            c1_W_size_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c1_W_size_y_address0 <= tmp_7_fu_2018_p1(3 - 1 downto 0);

    c1_W_size_y_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            c1_W_size_y_ce0 <= ap_const_logic_1;
        else 
            c1_W_size_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c1_W_size_z_address0 <= tmp_7_fu_2018_p1(3 - 1 downto 0);

    c1_W_size_z_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            c1_W_size_z_ce0 <= ap_const_logic_1;
        else 
            c1_W_size_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_inpad_data_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0, ap_CS_fsm_state57, tmp_2_fu_1961_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            c1_inpad_data_V_address0 <= tmp_2_fu_1961_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_inpad_data_V_address0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0;
        else 
            c1_inpad_data_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    c1_inpad_data_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            c1_inpad_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_inpad_data_V_ce0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0;
        else 
            c1_inpad_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_inpad_data_V_d0_assign_proc : process(ap_CS_fsm_state6, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            c1_inpad_data_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_inpad_data_V_d0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0;
        else 
            c1_inpad_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c1_inpad_data_V_we0_assign_proc : process(ap_CS_fsm_state6, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0, exitcond_i_i_i_i_fu_1949_p2, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond_i_i_i_i_fu_1949_p2 = ap_const_lv1_0))) then 
            c1_inpad_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_inpad_data_V_we0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0;
        else 
            c1_inpad_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_input_data_V_address0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state2, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_address0, ap_CS_fsm_state57, tmp_fu_1879_p1, tmp_56_fu_2866_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            c1_input_data_V_address0 <= tmp_56_fu_2866_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            c1_input_data_V_address0 <= tmp_fu_1879_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_input_data_V_address0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_address0;
        else 
            c1_input_data_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    c1_input_data_V_ce0_assign_proc : process(inStream_V_V_0_vld_out, ap_CS_fsm_state48, exitcond2_fu_2854_p2, ap_CS_fsm_state2, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state48)))) then 
            c1_input_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_input_data_V_ce0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0;
        else 
            c1_input_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_input_data_V_d0_assign_proc : process(inStream_V_V_0_data_out, ap_CS_fsm_state48, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            c1_input_data_V_d0 <= inStream_V_V_0_data_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            c1_input_data_V_d0 <= ap_const_lv16_0;
        else 
            c1_input_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c1_input_data_V_we0_assign_proc : process(inStream_V_V_0_vld_out, ap_CS_fsm_state48, exitcond2_fu_2854_p2, ap_CS_fsm_state2, exitcond_i_i4_i_i_fu_1867_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_i_i4_i_i_fu_1867_p2 = ap_const_lv1_0)) or (not(((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state48) and (exitcond2_fu_2854_p2 = ap_const_lv1_0)))) then 
            c1_input_data_V_we0 <= ap_const_logic_1;
        else 
            c1_input_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_output_data_V_address0_assign_proc : process(ap_CS_fsm_state3, p_i0_0_i_cast_fu_3074_p1, ap_CS_fsm_state58, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_address0, ap_CS_fsm_state57, tmp_s_fu_1896_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            c1_output_data_V_address0 <= p_i0_0_i_cast_fu_3074_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            c1_output_data_V_address0 <= tmp_s_fu_1896_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_output_data_V_address0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_address0;
        else 
            c1_output_data_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    c1_output_data_V_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state58, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state58))) then 
            c1_output_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_output_data_V_ce0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0;
        else 
            c1_output_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_output_data_V_d0_assign_proc : process(ap_CS_fsm_state3, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_d0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            c1_output_data_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_output_data_V_d0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_d0;
        else 
            c1_output_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c1_output_data_V_we0_assign_proc : process(ap_CS_fsm_state3, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_we0, exitcond_i_i11_i_i_fu_1884_p2, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond_i_i11_i_i_fu_1884_p2 = ap_const_lv1_0))) then 
            c1_output_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_output_data_V_we0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_we0;
        else 
            c1_output_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_relu1_input_data_address0_assign_proc : process(ap_CS_fsm_state7, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0, ap_CS_fsm_state57, tmp_3_fu_1978_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            c1_relu1_input_data_address0 <= tmp_3_fu_1978_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_relu1_input_data_address0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0;
        else 
            c1_relu1_input_data_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    c1_relu1_input_data_ce0_assign_proc : process(ap_CS_fsm_state7, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            c1_relu1_input_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_relu1_input_data_ce0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0;
        else 
            c1_relu1_input_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_relu1_input_data_d0_assign_proc : process(ap_CS_fsm_state7, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            c1_relu1_input_data_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_relu1_input_data_d0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0;
        else 
            c1_relu1_input_data_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c1_relu1_input_data_we0_assign_proc : process(ap_CS_fsm_state7, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0, exitcond_i_i2_i_i_i_s_fu_1966_p2, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_i_i2_i_i_i_s_fu_1966_p2 = ap_const_lv1_0))) then 
            c1_relu1_input_data_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_relu1_input_data_we0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0;
        else 
            c1_relu1_input_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_relu1_output_dat_address0_assign_proc : process(ap_CS_fsm_state8, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0, ap_CS_fsm_state57, tmp_6_fu_1995_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c1_relu1_output_dat_address0 <= tmp_6_fu_1995_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_relu1_output_dat_address0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0;
        else 
            c1_relu1_output_dat_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    c1_relu1_output_dat_ce0_assign_proc : process(ap_CS_fsm_state8, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c1_relu1_output_dat_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_relu1_output_dat_ce0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0;
        else 
            c1_relu1_output_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c1_relu1_output_dat_d0_assign_proc : process(ap_CS_fsm_state8, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            c1_relu1_output_dat_d0 <= ap_const_lv15_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_relu1_output_dat_d0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0;
        else 
            c1_relu1_output_dat_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    c1_relu1_output_dat_we0_assign_proc : process(ap_CS_fsm_state8, grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0, exitcond_i_i_i_i_i_i_fu_1983_p2, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond_i_i_i_i_i_i_fu_1983_p2 = ap_const_lv1_0))) then 
            c1_relu1_output_dat_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            c1_relu1_output_dat_we0 <= grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0;
        else 
            c1_relu1_output_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;

    c1w_V_V_0_ack_in <= c1w_V_V_0_state(1);

    c1w_V_V_0_ack_out_assign_proc : process(c1w_V_V_0_vld_out, ap_CS_fsm_state50, exitcond5_fu_2889_p2)
    begin
        if ((not(((c1w_V_V_0_vld_out = ap_const_logic_0) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state50) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) then 
            c1w_V_V_0_ack_out <= ap_const_logic_1;
        else 
            c1w_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c1w_V_V_0_data_out_assign_proc : process(c1w_V_V_0_payload_A, c1w_V_V_0_payload_B, c1w_V_V_0_sel)
    begin
        if ((c1w_V_V_0_sel = ap_const_logic_1)) then 
            c1w_V_V_0_data_out <= c1w_V_V_0_payload_B;
        else 
            c1w_V_V_0_data_out <= c1w_V_V_0_payload_A;
        end if; 
    end process;

    c1w_V_V_0_load_A <= (not(c1w_V_V_0_sel_wr) and c1w_V_V_0_state_cmp_full);
    c1w_V_V_0_load_B <= (c1w_V_V_0_state_cmp_full and c1w_V_V_0_sel_wr);
    c1w_V_V_0_sel <= c1w_V_V_0_sel_rd;
    c1w_V_V_0_state_cmp_full <= '0' when (c1w_V_V_0_state = ap_const_lv2_1) else '1';
    c1w_V_V_0_vld_in <= c1w_V_V_TVALID;
    c1w_V_V_0_vld_out <= c1w_V_V_0_state(0);

    c1w_V_V_TDATA_blk_n_assign_proc : process(c1w_V_V_0_state, ap_CS_fsm_state50, exitcond5_fu_2889_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) and (exitcond5_fu_2889_p2 = ap_const_lv1_0))) then 
            c1w_V_V_TDATA_blk_n <= c1w_V_V_0_state(0);
        else 
            c1w_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c1w_V_V_TREADY <= c1w_V_V_0_state(1);

    c3_W_data_V_address0_assign_proc : process(ap_CS_fsm_state52, ap_CS_fsm_state19, ap_CS_fsm_state25, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_address0, ap_CS_fsm_state63, tmp_29_cast_fu_2219_p1, tmp_36_cast_fu_2363_p1, tmp_80_cast_fu_2956_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            c3_W_data_V_address0 <= tmp_80_cast_fu_2956_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            c3_W_data_V_address0 <= tmp_36_cast_fu_2363_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c3_W_data_V_address0 <= tmp_29_cast_fu_2219_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_W_data_V_address0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_address0;
        else 
            c3_W_data_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    c3_W_data_V_ce0_assign_proc : process(c3w_V_V_0_vld_out, ap_CS_fsm_state52, exitcond7_fu_2934_p2, ap_CS_fsm_state19, ap_CS_fsm_state25, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state19) or (not(((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state52)))) then 
            c3_W_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_W_data_V_ce0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0;
        else 
            c3_W_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_W_data_V_d0_assign_proc : process(c3w_V_V_0_data_out, ap_CS_fsm_state52, ap_CS_fsm_state19, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            c3_W_data_V_d0 <= c3w_V_V_0_data_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            c3_W_data_V_d0 <= ap_const_lv16_28;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c3_W_data_V_d0 <= ap_const_lv16_0;
        else 
            c3_W_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c3_W_data_V_we0_assign_proc : process(c3w_V_V_0_vld_out, ap_CS_fsm_state52, exitcond7_fu_2934_p2, ap_CS_fsm_state19, ap_CS_fsm_state25, exitcond_i_i15_i_i1_fu_2197_p2, tmp_119_i_fu_2342_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state25) and (tmp_119_i_fu_2342_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (exitcond_i_i15_i_i1_fu_2197_p2 = ap_const_lv1_0)) or (not(((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond7_fu_2934_p2 = ap_const_lv1_0)))) then 
            c3_W_data_V_we0 <= ap_const_logic_1;
        else 
            c3_W_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    c3_W_size_x_address0 <= tmp_24_fu_2299_p1(4 - 1 downto 0);

    c3_W_size_x_ce0_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            c3_W_size_x_ce0 <= ap_const_logic_1;
        else 
            c3_W_size_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c3_W_size_y_address0 <= tmp_24_fu_2299_p1(4 - 1 downto 0);

    c3_W_size_y_ce0_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            c3_W_size_y_ce0 <= ap_const_logic_1;
        else 
            c3_W_size_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c3_W_size_z_address0 <= tmp_24_fu_2299_p1(4 - 1 downto 0);

    c3_W_size_z_ce0_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            c3_W_size_z_ce0 <= ap_const_logic_1;
        else 
            c3_W_size_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        c3_W_size_z_load_cas_fu_2314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c3_W_size_z_q0),3));


    c3_inpad_data_V_address0_assign_proc : process(ap_CS_fsm_state20, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0, ap_CS_fsm_state63, tmp_21_fu_2242_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            c3_inpad_data_V_address0 <= tmp_21_fu_2242_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_inpad_data_V_address0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0;
        else 
            c3_inpad_data_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    c3_inpad_data_V_ce0_assign_proc : process(ap_CS_fsm_state20, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0, ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            c3_inpad_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_inpad_data_V_ce0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0;
        else 
            c3_inpad_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_inpad_data_V_d0_assign_proc : process(ap_CS_fsm_state20, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0, ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            c3_inpad_data_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_inpad_data_V_d0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0;
        else 
            c3_inpad_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c3_inpad_data_V_we0_assign_proc : process(ap_CS_fsm_state20, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0, exitcond_i_i_i_i2_fu_2230_p2, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) and (exitcond_i_i_i_i2_fu_2230_p2 = ap_const_lv1_0))) then 
            c3_inpad_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_inpad_data_V_we0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0;
        else 
            c3_inpad_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_input_data_V_address0_assign_proc : process(ap_CS_fsm_state16, p_i0_0_i1_cast_reg_3863, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_address0, ap_CS_fsm_state62, ap_CS_fsm_state63, tmp_15_fu_2163_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            c3_input_data_V_address0 <= p_i0_0_i1_cast_reg_3863(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            c3_input_data_V_address0 <= tmp_15_fu_2163_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_input_data_V_address0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_address0;
        else 
            c3_input_data_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    c3_input_data_V_ce0_assign_proc : process(ap_CS_fsm_state16, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0, ap_CS_fsm_state62, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            c3_input_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_input_data_V_ce0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0;
        else 
            c3_input_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_input_data_V_d0_assign_proc : process(ap_CS_fsm_state16, p2_output_data_V_q0, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            c3_input_data_V_d0 <= p2_output_data_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            c3_input_data_V_d0 <= ap_const_lv16_0;
        else 
            c3_input_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c3_input_data_V_we0_assign_proc : process(ap_CS_fsm_state16, exitcond_i_i4_i_i1_fu_2151_p2, ap_CS_fsm_state62)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond_i_i4_i_i1_fu_2151_p2 = ap_const_lv1_0)))) then 
            c3_input_data_V_we0 <= ap_const_logic_1;
        else 
            c3_input_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_output_data_V_address0_assign_proc : process(ap_CS_fsm_state17, p_i0_0_i2_cast_fu_3108_p1, ap_CS_fsm_state64, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_address0, ap_CS_fsm_state63, tmp_16_fu_2180_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            c3_output_data_V_address0 <= p_i0_0_i2_cast_fu_3108_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c3_output_data_V_address0 <= tmp_16_fu_2180_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_output_data_V_address0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_address0;
        else 
            c3_output_data_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    c3_output_data_V_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state64, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            c3_output_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_output_data_V_ce0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0;
        else 
            c3_output_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_output_data_V_d0_assign_proc : process(ap_CS_fsm_state17, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_d0, ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c3_output_data_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_output_data_V_d0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_d0;
        else 
            c3_output_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c3_output_data_V_we0_assign_proc : process(ap_CS_fsm_state17, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_we0, exitcond_i_i11_i_i1_fu_2168_p2, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond_i_i11_i_i1_fu_2168_p2 = ap_const_lv1_0))) then 
            c3_output_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_output_data_V_we0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_we0;
        else 
            c3_output_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_relu1_input_data_address0_assign_proc : process(ap_CS_fsm_state21, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0, ap_CS_fsm_state63, tmp_22_fu_2259_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c3_relu1_input_data_address0 <= tmp_22_fu_2259_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_relu1_input_data_address0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0;
        else 
            c3_relu1_input_data_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    c3_relu1_input_data_ce0_assign_proc : process(ap_CS_fsm_state21, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0, ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c3_relu1_input_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_relu1_input_data_ce0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0;
        else 
            c3_relu1_input_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_relu1_input_data_d0_assign_proc : process(ap_CS_fsm_state21, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0, ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c3_relu1_input_data_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_relu1_input_data_d0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0;
        else 
            c3_relu1_input_data_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c3_relu1_input_data_we0_assign_proc : process(ap_CS_fsm_state21, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0, exitcond_i_i2_i_i_i_2_fu_2247_p2, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond_i_i2_i_i_i_2_fu_2247_p2 = ap_const_lv1_0))) then 
            c3_relu1_input_data_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_relu1_input_data_we0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0;
        else 
            c3_relu1_input_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_relu1_output_dat_address0_assign_proc : process(ap_CS_fsm_state22, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0, ap_CS_fsm_state63, tmp_23_fu_2276_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            c3_relu1_output_dat_address0 <= tmp_23_fu_2276_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_relu1_output_dat_address0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0;
        else 
            c3_relu1_output_dat_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    c3_relu1_output_dat_ce0_assign_proc : process(ap_CS_fsm_state22, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0, ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            c3_relu1_output_dat_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_relu1_output_dat_ce0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0;
        else 
            c3_relu1_output_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c3_relu1_output_dat_d0_assign_proc : process(ap_CS_fsm_state22, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0, ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            c3_relu1_output_dat_d0 <= ap_const_lv15_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_relu1_output_dat_d0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0;
        else 
            c3_relu1_output_dat_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    c3_relu1_output_dat_we0_assign_proc : process(ap_CS_fsm_state22, grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0, exitcond_i_i_i_i_i_i_2_fu_2264_p2, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) and (exitcond_i_i_i_i_i_i_2_fu_2264_p2 = ap_const_lv1_0))) then 
            c3_relu1_output_dat_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            c3_relu1_output_dat_we0 <= grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0;
        else 
            c3_relu1_output_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;

    c3w_V_V_0_ack_in <= c3w_V_V_0_state(1);

    c3w_V_V_0_ack_out_assign_proc : process(c3w_V_V_0_vld_out, ap_CS_fsm_state52, exitcond7_fu_2934_p2)
    begin
        if ((not(((c3w_V_V_0_vld_out = ap_const_logic_0) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) then 
            c3w_V_V_0_ack_out <= ap_const_logic_1;
        else 
            c3w_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c3w_V_V_0_data_out_assign_proc : process(c3w_V_V_0_payload_A, c3w_V_V_0_payload_B, c3w_V_V_0_sel)
    begin
        if ((c3w_V_V_0_sel = ap_const_logic_1)) then 
            c3w_V_V_0_data_out <= c3w_V_V_0_payload_B;
        else 
            c3w_V_V_0_data_out <= c3w_V_V_0_payload_A;
        end if; 
    end process;

    c3w_V_V_0_load_A <= (not(c3w_V_V_0_sel_wr) and c3w_V_V_0_state_cmp_full);
    c3w_V_V_0_load_B <= (c3w_V_V_0_state_cmp_full and c3w_V_V_0_sel_wr);
    c3w_V_V_0_sel <= c3w_V_V_0_sel_rd;
    c3w_V_V_0_state_cmp_full <= '0' when (c3w_V_V_0_state = ap_const_lv2_1) else '1';
    c3w_V_V_0_vld_in <= c3w_V_V_TVALID;
    c3w_V_V_0_vld_out <= c3w_V_V_0_state(0);

    c3w_V_V_TDATA_blk_n_assign_proc : process(c3w_V_V_0_state, ap_CS_fsm_state52, exitcond7_fu_2934_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond7_fu_2934_p2 = ap_const_lv1_0))) then 
            c3w_V_V_TDATA_blk_n <= c3w_V_V_0_state(0);
        else 
            c3w_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c3w_V_V_TREADY <= c3w_V_V_0_state(1);

    c5_W_data_V_address0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state33, ap_CS_fsm_state40, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_address0, ap_CS_fsm_state69, tmp_48_cast_fu_2504_p1, tmp_55_cast_fu_2641_p1, tmp_85_cast_fu_3001_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            c5_W_data_V_address0 <= tmp_85_cast_fu_3001_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            c5_W_data_V_address0 <= tmp_55_cast_fu_2641_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c5_W_data_V_address0 <= tmp_48_cast_fu_2504_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_W_data_V_address0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_address0;
        else 
            c5_W_data_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c5_W_data_V_ce0_assign_proc : process(c5w_V_V_0_vld_out, ap_CS_fsm_state54, exitcond9_fu_2979_p2, ap_CS_fsm_state33, ap_CS_fsm_state40, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_ce0, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state33) or (not(((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state54)))) then 
            c5_W_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_W_data_V_ce0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_ce0;
        else 
            c5_W_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_W_data_V_d0_assign_proc : process(c5w_V_V_0_data_out, ap_CS_fsm_state54, ap_CS_fsm_state33, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            c5_W_data_V_d0 <= c5w_V_V_0_data_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            c5_W_data_V_d0 <= ap_const_lv16_28;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            c5_W_data_V_d0 <= ap_const_lv16_0;
        else 
            c5_W_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c5_W_data_V_we0_assign_proc : process(c5w_V_V_0_vld_out, ap_CS_fsm_state54, exitcond9_fu_2979_p2, ap_CS_fsm_state33, ap_CS_fsm_state40, exitcond_i_i4_i_i2_fu_2482_p2, tmp_117_i_fu_2620_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_117_i_fu_2620_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond_i_i4_i_i2_fu_2482_p2 = ap_const_lv1_0)) or (not(((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state54) and (exitcond9_fu_2979_p2 = ap_const_lv1_0)))) then 
            c5_W_data_V_we0 <= ap_const_logic_1;
        else 
            c5_W_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    c5_W_size_x_address0 <= tmp_39_fu_2584_p1(7 - 1 downto 0);

    c5_W_size_x_ce0_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            c5_W_size_x_ce0 <= ap_const_logic_1;
        else 
            c5_W_size_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c5_W_size_y_address0 <= tmp_39_fu_2584_p1(7 - 1 downto 0);

    c5_W_size_y_ce0_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            c5_W_size_y_ce0 <= ap_const_logic_1;
        else 
            c5_W_size_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    c5_W_size_z_address0 <= tmp_39_fu_2584_p1(7 - 1 downto 0);

    c5_W_size_z_ce0_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            c5_W_size_z_ce0 <= ap_const_logic_1;
        else 
            c5_W_size_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_inpad_data_V_address0_assign_proc : process(ap_CS_fsm_state34, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0, ap_CS_fsm_state69, tmp_36_fu_2527_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            c5_inpad_data_V_address0 <= tmp_36_fu_2527_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_inpad_data_V_address0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0;
        else 
            c5_inpad_data_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    c5_inpad_data_V_ce0_assign_proc : process(ap_CS_fsm_state34, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            c5_inpad_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_inpad_data_V_ce0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0;
        else 
            c5_inpad_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_inpad_data_V_d0_assign_proc : process(ap_CS_fsm_state34, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            c5_inpad_data_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_inpad_data_V_d0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0;
        else 
            c5_inpad_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c5_inpad_data_V_we0_assign_proc : process(ap_CS_fsm_state34, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0, exitcond_i_i_i_i4_fu_2515_p2, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and (exitcond_i_i_i_i4_fu_2515_p2 = ap_const_lv1_0))) then 
            c5_inpad_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_inpad_data_V_we0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0;
        else 
            c5_inpad_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_input_data_V_address0_assign_proc : process(ap_CS_fsm_state30, p_i0_0_i3_cast9_reg_3899, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_address0, ap_CS_fsm_state68, ap_CS_fsm_state69, tmp_30_fu_2448_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            c5_input_data_V_address0 <= p_i0_0_i3_cast9_reg_3899(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            c5_input_data_V_address0 <= tmp_30_fu_2448_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_input_data_V_address0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_address0;
        else 
            c5_input_data_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    c5_input_data_V_ce0_assign_proc : process(ap_CS_fsm_state30, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_ce0, ap_CS_fsm_state68, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            c5_input_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_input_data_V_ce0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_ce0;
        else 
            c5_input_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_input_data_V_d0_assign_proc : process(ap_CS_fsm_state30, p4_output_data_V_q0, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            c5_input_data_V_d0 <= p4_output_data_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            c5_input_data_V_d0 <= ap_const_lv16_0;
        else 
            c5_input_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c5_input_data_V_we0_assign_proc : process(ap_CS_fsm_state30, exitcond_i_i8_i_i2_fu_2436_p2, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or ((ap_const_logic_1 = ap_CS_fsm_state30) and (exitcond_i_i8_i_i2_fu_2436_p2 = ap_const_lv1_0)))) then 
            c5_input_data_V_we0 <= ap_const_logic_1;
        else 
            c5_input_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_output_data_V_address0_assign_proc : process(ap_CS_fsm_state31, p_i0_0_i4_cast8_fu_3142_p1, ap_CS_fsm_state70, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_address0, ap_CS_fsm_state69, tmp_31_fu_2465_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            c5_output_data_V_address0 <= p_i0_0_i4_cast8_fu_3142_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            c5_output_data_V_address0 <= tmp_31_fu_2465_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_output_data_V_address0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_address0;
        else 
            c5_output_data_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    c5_output_data_V_ce0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state70, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_ce0, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            c5_output_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_output_data_V_ce0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_ce0;
        else 
            c5_output_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_output_data_V_d0_assign_proc : process(ap_CS_fsm_state31, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_d0, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            c5_output_data_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_output_data_V_d0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_d0;
        else 
            c5_output_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c5_output_data_V_we0_assign_proc : process(ap_CS_fsm_state31, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_we0, exitcond_i_i19_i_i_fu_2453_p2, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) and (exitcond_i_i19_i_i_fu_2453_p2 = ap_const_lv1_0))) then 
            c5_output_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_output_data_V_we0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_we0;
        else 
            c5_output_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_relu1_input_data_address0_assign_proc : process(ap_CS_fsm_state35, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0, ap_CS_fsm_state69, tmp_37_fu_2544_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            c5_relu1_input_data_address0 <= tmp_37_fu_2544_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_relu1_input_data_address0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0;
        else 
            c5_relu1_input_data_address0 <= "XXXXXXX";
        end if; 
    end process;


    c5_relu1_input_data_ce0_assign_proc : process(ap_CS_fsm_state35, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            c5_relu1_input_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_relu1_input_data_ce0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0;
        else 
            c5_relu1_input_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_relu1_input_data_d0_assign_proc : process(ap_CS_fsm_state35, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            c5_relu1_input_data_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_relu1_input_data_d0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0;
        else 
            c5_relu1_input_data_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    c5_relu1_input_data_we0_assign_proc : process(ap_CS_fsm_state35, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0, exitcond_i_i2_i_i_i_4_fu_2532_p2, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) and (exitcond_i_i2_i_i_i_4_fu_2532_p2 = ap_const_lv1_0))) then 
            c5_relu1_input_data_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_relu1_input_data_we0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0;
        else 
            c5_relu1_input_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_relu1_output_dat_address0_assign_proc : process(ap_CS_fsm_state36, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0, ap_CS_fsm_state69, tmp_38_fu_2561_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            c5_relu1_output_dat_address0 <= tmp_38_fu_2561_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_relu1_output_dat_address0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0;
        else 
            c5_relu1_output_dat_address0 <= "XXXXXXX";
        end if; 
    end process;


    c5_relu1_output_dat_ce0_assign_proc : process(ap_CS_fsm_state36, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            c5_relu1_output_dat_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_relu1_output_dat_ce0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0;
        else 
            c5_relu1_output_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c5_relu1_output_dat_d0_assign_proc : process(ap_CS_fsm_state36, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0, ap_CS_fsm_state69)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            c5_relu1_output_dat_d0 <= ap_const_lv15_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_relu1_output_dat_d0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0;
        else 
            c5_relu1_output_dat_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    c5_relu1_output_dat_we0_assign_proc : process(ap_CS_fsm_state36, grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0, exitcond_i_i_i_i_i_i_4_fu_2549_p2, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) and (exitcond_i_i_i_i_i_i_4_fu_2549_p2 = ap_const_lv1_0))) then 
            c5_relu1_output_dat_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            c5_relu1_output_dat_we0 <= grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0;
        else 
            c5_relu1_output_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;

    c5w_V_V_0_ack_in <= c5w_V_V_0_state(1);

    c5w_V_V_0_ack_out_assign_proc : process(c5w_V_V_0_vld_out, ap_CS_fsm_state54, exitcond9_fu_2979_p2)
    begin
        if ((not(((c5w_V_V_0_vld_out = ap_const_logic_0) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state54) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) then 
            c5w_V_V_0_ack_out <= ap_const_logic_1;
        else 
            c5w_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    c5w_V_V_0_data_out_assign_proc : process(c5w_V_V_0_payload_A, c5w_V_V_0_payload_B, c5w_V_V_0_sel)
    begin
        if ((c5w_V_V_0_sel = ap_const_logic_1)) then 
            c5w_V_V_0_data_out <= c5w_V_V_0_payload_B;
        else 
            c5w_V_V_0_data_out <= c5w_V_V_0_payload_A;
        end if; 
    end process;

    c5w_V_V_0_load_A <= (not(c5w_V_V_0_sel_wr) and c5w_V_V_0_state_cmp_full);
    c5w_V_V_0_load_B <= (c5w_V_V_0_state_cmp_full and c5w_V_V_0_sel_wr);
    c5w_V_V_0_sel <= c5w_V_V_0_sel_rd;
    c5w_V_V_0_state_cmp_full <= '0' when (c5w_V_V_0_state = ap_const_lv2_1) else '1';
    c5w_V_V_0_vld_in <= c5w_V_V_TVALID;
    c5w_V_V_0_vld_out <= c5w_V_V_0_state(0);

    c5w_V_V_TDATA_blk_n_assign_proc : process(c5w_V_V_0_state, ap_CS_fsm_state54, exitcond9_fu_2979_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) and (exitcond9_fu_2979_p2 = ap_const_lv1_0))) then 
            c5w_V_V_TDATA_blk_n <= c5w_V_V_0_state(0);
        else 
            c5w_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    c5w_V_V_TREADY <= c5w_V_V_0_state(1);
    exitcond1_fu_3048_p2 <= "1" when (j6_reg_1709 = ap_const_lv7_78) else "0";
    exitcond2_fu_2854_p2 <= "1" when (idx_reg_1585 = ap_const_lv11_400) else "0";
    exitcond3_fu_2877_p2 <= "1" when (i37_reg_1596 = ap_const_lv3_6) else "0";
    exitcond4_fu_2922_p2 <= "1" when (i1_reg_1630 = ap_const_lv5_10) else "0";
    exitcond5_fu_2889_p2 <= "1" when (j_reg_1619 = ap_const_lv5_19) else "0";
    exitcond6_fu_2967_p2 <= "1" when (i3_reg_1664 = ap_const_lv7_78) else "0";
    exitcond7_fu_2934_p2 <= "1" when (j2_reg_1653 = ap_const_lv8_96) else "0";
    exitcond8_fu_3006_p2 <= "1" when (i5_reg_1698 = ap_const_lv4_A) else "0";
    exitcond9_fu_2979_p2 <= "1" when (j4_reg_1687 = ap_const_lv9_190) else "0";
    exitcond_0_i_fu_3205_p2 <= "1" when (p_z_assign_1_0_i_reg_1799 = ap_const_lv7_78) else "0";
    exitcond_fu_3259_p2 <= "1" when (idx7_reg_1810 = ap_const_lv4_A) else "0";
    exitcond_i_fu_3159_p2 <= "1" when (p_z_assign_reg_1775 = ap_const_lv4_A) else "0";
    exitcond_i_i11_i_i1_fu_2168_p2 <= "1" when (i_0_i_i10_i_i1_reg_1236 = ap_const_lv11_640) else "0";
    exitcond_i_i11_i_i2_fu_2663_p2 <= "1" when (i_0_i_i10_i_i2_reg_1528 = ap_const_lv4_A) else "0";
    exitcond_i_i11_i_i_fu_1884_p2 <= "1" when (i_0_i_i10_i_i_reg_1069 = ap_const_lv13_1260) else "0";
    exitcond_i_i15_i_i1_fu_2197_p2 <= "1" when (i_0_i_i14_i_i1_reg_1271 = ap_const_lv8_96) else "0";
    exitcond_i_i15_i_i_fu_1917_p2 <= "1" when (i_0_i_i14_i_i_reg_1103 = ap_const_lv5_19) else "0";
    exitcond_i_i19_i_i_fu_2453_p2 <= "1" when (i_0_i_i18_i_i_reg_1404 = ap_const_lv7_78) else "0";
    exitcond_i_i1_fu_2287_p2 <= "1" when (i_0_i_i1_reg_1315 = ap_const_lv5_10) else "0";
    exitcond_i_i2_fu_2572_p2 <= "1" when (i_0_i_i2_reg_1483 = ap_const_lv7_78) else "0";
    exitcond_i_i2_i_i1_fu_2385_p2 <= "1" when (i_0_i_i1_i_i1_reg_1360 = ap_const_lv9_190) else "0";
    exitcond_i_i2_i_i_fu_2100_p2 <= "1" when (i_0_i_i1_i_i_reg_1192 = ap_const_lv11_498) else "0";
    exitcond_i_i2_i_i_i_1_fu_2117_p2 <= "1" when (i_0_i_i1_i_i_i_i1_reg_1203 = ap_const_lv11_498) else "0";
    exitcond_i_i2_i_i_i_2_fu_2247_p2 <= "1" when (i_0_i_i1_i_i_i_i2_reg_1293 = ap_const_lv11_640) else "0";
    exitcond_i_i2_i_i_i_3_fu_2402_p2 <= "1" when (i_0_i_i1_i_i_i_i3_reg_1371 = ap_const_lv9_190) else "0";
    exitcond_i_i2_i_i_i_4_fu_2532_p2 <= "1" when (i_0_i_i1_i_i_i_i4_reg_1461 = ap_const_lv7_78) else "0";
    exitcond_i_i2_i_i_i_s_fu_1966_p2 <= "1" when (i_0_i_i1_i_i_i_i_reg_1125 = ap_const_lv13_1260) else "0";
    exitcond_i_i3_fu_2748_p2 <= "1" when (i_0_i_i3_reg_1562 = ap_const_lv4_A) else "0";
    exitcond_i_i4_i_i1_fu_2151_p2 <= "1" when (i_0_i_i3_i_i1_reg_1225 = ap_const_lv11_498) else "0";
    exitcond_i_i4_i_i2_fu_2482_p2 <= "1" when (i_0_i_i3_i_i2_reg_1439 = ap_const_lv9_190) else "0";
    exitcond_i_i4_i_i3_fu_2646_p2 <= "1" when (i_0_i_i3_i_i3_reg_1517 = ap_const_lv7_78) else "0";
    exitcond_i_i4_i_i_fu_1867_p2 <= "1" when (i_0_i_i3_i_i_reg_1058 = ap_const_lv11_400) else "0";
    exitcond_i_i8_i_i2_fu_2436_p2 <= "1" when (i_0_i_i7_i_i2_reg_1393 = ap_const_lv9_190) else "0";
    exitcond_i_i_fu_2006_p2 <= "1" when (i_0_i_i_reg_1147 = ap_const_lv3_6) else "0";
    exitcond_i_i_i_i1_fu_2083_p2 <= "1" when (i_0_i_i_i_i1_reg_1181 = ap_const_lv13_1260) else "0";
    exitcond_i_i_i_i2_fu_2230_p2 <= "1" when (i_0_i_i_i_i2_reg_1282 = ap_const_lv11_498) else "0";
    exitcond_i_i_i_i3_fu_2368_p2 <= "1" when (i_0_i_i_i_i3_reg_1349 = ap_const_lv11_640) else "0";
    exitcond_i_i_i_i4_fu_2515_p2 <= "1" when (i_0_i_i_i_i4_reg_1450 = ap_const_lv9_190) else "0";
    exitcond_i_i_i_i5_fu_2716_p2 <= "1" when (i_0_i_i_i_i5_reg_1551 = ap_const_lv7_78) else "0";
    exitcond_i_i_i_i_fu_1949_p2 <= "1" when (i_0_i_i_i_i_reg_1114 = ap_const_lv11_400) else "0";
    exitcond_i_i_i_i_i_i_1_fu_2134_p2 <= "1" when (i_0_i_i_i_i_i_i1_reg_1214 = ap_const_lv11_498) else "0";
    exitcond_i_i_i_i_i_i_2_fu_2264_p2 <= "1" when (i_0_i_i_i_i_i_i2_reg_1304 = ap_const_lv11_640) else "0";
    exitcond_i_i_i_i_i_i_3_fu_2419_p2 <= "1" when (i_0_i_i_i_i_i_i3_reg_1382 = ap_const_lv9_190) else "0";
    exitcond_i_i_i_i_i_i_4_fu_2549_p2 <= "1" when (i_0_i_i_i_i_i_i4_reg_1472 = ap_const_lv7_78) else "0";
    exitcond_i_i_i_i_i_i_fu_1983_p2 <= "1" when (i_0_i_i_i_i_i_i_reg_1136 = ap_const_lv13_1260) else "0";

    fc6_W_data_V_address0_assign_proc : process(ap_CS_fsm_state56, ap_CS_fsm_state44, ap_CS_fsm_state47, ap_CS_fsm_state73, tmp_64_cast_fu_2737_p1, tmp_70_cast_fu_2849_p1, tmp_88_cast_fu_3069_p1, tmp_97_cast_fu_3231_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            fc6_W_data_V_address0 <= tmp_97_cast_fu_3231_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            fc6_W_data_V_address0 <= tmp_88_cast_fu_3069_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            fc6_W_data_V_address0 <= tmp_70_cast_fu_2849_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            fc6_W_data_V_address0 <= tmp_64_cast_fu_2737_p1(11 - 1 downto 0);
        else 
            fc6_W_data_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    fc6_W_data_V_ce0_assign_proc : process(fcw_V_V_0_vld_out, ap_CS_fsm_state56, exitcond1_fu_3048_p2, ap_CS_fsm_state44, ap_CS_fsm_state47, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state47) or (not(((fcw_V_V_0_vld_out = ap_const_logic_0) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state56)))) then 
            fc6_W_data_V_ce0 <= ap_const_logic_1;
        else 
            fc6_W_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc6_W_data_V_d0_assign_proc : process(fcw_V_V_0_data_out, ap_CS_fsm_state56, ap_CS_fsm_state44, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            fc6_W_data_V_d0 <= fcw_V_V_0_data_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            fc6_W_data_V_d0 <= ap_const_lv16_28;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            fc6_W_data_V_d0 <= ap_const_lv16_0;
        else 
            fc6_W_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fc6_W_data_V_we0_assign_proc : process(fcw_V_V_0_vld_out, ap_CS_fsm_state56, exitcond1_fu_3048_p2, ap_CS_fsm_state44, ap_CS_fsm_state47, exitcond_i_i_i_i5_fu_2716_p2, tmp_115_i_fu_2829_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (exitcond_i_i_i_i5_fu_2716_p2 = ap_const_lv1_0)) or (not(((fcw_V_V_0_vld_out = ap_const_logic_0) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state56) and (exitcond1_fu_3048_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state47) and (tmp_115_i_fu_2829_p2 = ap_const_lv1_1)))) then 
            fc6_W_data_V_we0 <= ap_const_logic_1;
        else 
            fc6_W_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    fc6_W_size_x_address0 <= tmp_50_fu_2760_p1(4 - 1 downto 0);

    fc6_W_size_x_ce0_assign_proc : process(ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            fc6_W_size_x_ce0 <= ap_const_logic_1;
        else 
            fc6_W_size_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc6_W_size_y_address0 <= tmp_50_fu_2760_p1(4 - 1 downto 0);

    fc6_W_size_y_ce0_assign_proc : process(ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            fc6_W_size_y_ce0 <= ap_const_logic_1;
        else 
            fc6_W_size_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fc6_W_size_z_address0 <= tmp_50_fu_2760_p1(4 - 1 downto 0);

    fc6_W_size_z_ce0_assign_proc : process(ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            fc6_W_size_z_ce0 <= ap_const_logic_1;
        else 
            fc6_W_size_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        fc6_W_size_z_load_ca_fu_2797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(fc6_W_size_z_q0),7));


    fc6_input_data_V_address0_assign_proc : process(ap_CS_fsm_state41, p_i0_0_i4_cast8_reg_3917, ap_CS_fsm_state73, ap_CS_fsm_state71, tmp_40_fu_2658_p1, tmp_132_0_i_fu_3217_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            fc6_input_data_V_address0 <= tmp_132_0_i_fu_3217_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            fc6_input_data_V_address0 <= p_i0_0_i4_cast8_reg_3917(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            fc6_input_data_V_address0 <= tmp_40_fu_2658_p1(7 - 1 downto 0);
        else 
            fc6_input_data_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    fc6_input_data_V_ce0_assign_proc : process(ap_CS_fsm_state41, ap_CS_fsm_state73, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            fc6_input_data_V_ce0 <= ap_const_logic_1;
        else 
            fc6_input_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc6_input_data_V_d0_assign_proc : process(ap_CS_fsm_state41, c5_output_data_V_q0, ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            fc6_input_data_V_d0 <= c5_output_data_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            fc6_input_data_V_d0 <= ap_const_lv16_0;
        else 
            fc6_input_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fc6_input_data_V_we0_assign_proc : process(ap_CS_fsm_state41, exitcond_i_i4_i_i3_fu_2646_p2, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (exitcond_i_i4_i_i3_fu_2646_p2 = ap_const_lv1_0)))) then 
            fc6_input_data_V_we0 <= ap_const_logic_1;
        else 
            fc6_input_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fc6_output_data_V_address0_assign_proc : process(ap_CS_fsm_state42, tmp_i4_reg_3943, ap_CS_fsm_state73, ap_CS_fsm_state76, tmp_42_fu_2675_p1, tmp_73_fu_3271_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            fc6_output_data_V_address0 <= tmp_73_fu_3271_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            fc6_output_data_V_address0 <= tmp_i4_reg_3943(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            fc6_output_data_V_address0 <= tmp_42_fu_2675_p1(4 - 1 downto 0);
        else 
            fc6_output_data_V_address0 <= "XXXX";
        end if; 
    end process;


    fc6_output_data_V_ce0_assign_proc : process(outStream_V_V_1_ack_in, ap_CS_fsm_state42, ap_CS_fsm_state73, ap_CS_fsm_state76)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state73) or ((ap_const_logic_1 = ap_CS_fsm_state76) and (outStream_V_V_1_ack_in = ap_const_logic_1)))) then 
            fc6_output_data_V_ce0 <= ap_const_logic_1;
        else 
            fc6_output_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fc6_output_data_V_d0_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state73, p_Val2_0_i_reg_1786)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            fc6_output_data_V_d0 <= p_Val2_0_i_reg_1786;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            fc6_output_data_V_d0 <= ap_const_lv16_0;
        else 
            fc6_output_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fc6_output_data_V_we0_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state73, exitcond_0_i_fu_3205_p2, exitcond_i_i11_i_i2_fu_2663_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state42) and (exitcond_i_i11_i_i2_fu_2663_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state73) and (exitcond_0_i_fu_3205_p2 = ap_const_lv1_1)))) then 
            fc6_output_data_V_we0 <= ap_const_logic_1;
        else 
            fc6_output_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    fcw_V_V_0_ack_in <= fcw_V_V_0_state(1);

    fcw_V_V_0_ack_out_assign_proc : process(fcw_V_V_0_vld_out, ap_CS_fsm_state56, exitcond1_fu_3048_p2)
    begin
        if ((not(((fcw_V_V_0_vld_out = ap_const_logic_0) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state56) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) then 
            fcw_V_V_0_ack_out <= ap_const_logic_1;
        else 
            fcw_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    fcw_V_V_0_data_out_assign_proc : process(fcw_V_V_0_payload_A, fcw_V_V_0_payload_B, fcw_V_V_0_sel)
    begin
        if ((fcw_V_V_0_sel = ap_const_logic_1)) then 
            fcw_V_V_0_data_out <= fcw_V_V_0_payload_B;
        else 
            fcw_V_V_0_data_out <= fcw_V_V_0_payload_A;
        end if; 
    end process;

    fcw_V_V_0_load_A <= (fcw_V_V_0_state_cmp_full and not(fcw_V_V_0_sel_wr));
    fcw_V_V_0_load_B <= (fcw_V_V_0_state_cmp_full and fcw_V_V_0_sel_wr);
    fcw_V_V_0_sel <= fcw_V_V_0_sel_rd;
    fcw_V_V_0_state_cmp_full <= '0' when (fcw_V_V_0_state = ap_const_lv2_1) else '1';
    fcw_V_V_0_vld_in <= fcw_V_V_TVALID;
    fcw_V_V_0_vld_out <= fcw_V_V_0_state(0);

    fcw_V_V_TDATA_blk_n_assign_proc : process(fcw_V_V_0_state, ap_CS_fsm_state56, exitcond1_fu_3048_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state56) and (exitcond1_fu_3048_p2 = ap_const_lv1_0))) then 
            fcw_V_V_TDATA_blk_n <= fcw_V_V_0_state(0);
        else 
            fcw_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fcw_V_V_TREADY <= fcw_V_V_0_state(1);
    grp_forward_1_fu_1859_ap_start <= grp_forward_1_fu_1859_ap_start_reg;
    grp_forward_2_fu_1831_ap_start <= grp_forward_2_fu_1831_ap_start_reg;
    grp_forward_3_fu_1821_ap_start <= grp_forward_3_fu_1821_ap_start_reg;
    grp_forward_4_fu_1849_ap_start <= grp_forward_4_fu_1849_ap_start_reg;
    grp_forward_fu_1841_ap_start <= grp_forward_fu_1841_ap_start_reg;
    grp_fu_3276_p2 <= (p_Val2_0_i_reg_1786 & ap_const_lv12_0);
    i_10_fu_2123_p2 <= std_logic_vector(unsigned(i_0_i_i1_i_i_i_i1_reg_1203) + unsigned(ap_const_lv11_1));
    i_11_fu_2140_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_i_i1_reg_1214) + unsigned(ap_const_lv11_1));
    i_12_fu_2157_p2 <= std_logic_vector(unsigned(i_0_i_i3_i_i1_reg_1225) + unsigned(ap_const_lv11_1));
    i_13_fu_2174_p2 <= std_logic_vector(unsigned(i_0_i_i10_i_i1_reg_1236) + unsigned(ap_const_lv11_1));
    i_14_fu_2203_p2 <= std_logic_vector(unsigned(i_0_i_i14_i_i1_reg_1271) + unsigned(ap_const_lv8_1));
    i_15_fu_2236_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i2_reg_1282) + unsigned(ap_const_lv11_1));
    i_16_fu_2253_p2 <= std_logic_vector(unsigned(i_0_i_i1_i_i_i_i2_reg_1293) + unsigned(ap_const_lv11_1));
    i_17_fu_2270_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_i_i2_reg_1304) + unsigned(ap_const_lv11_1));
    i_18_fu_2347_p2 <= std_logic_vector(unsigned(i_i1_reg_1338) + unsigned(ap_const_lv8_1));
    i_19_fu_2625_p2 <= std_logic_vector(unsigned(i_i2_reg_1506) + unsigned(ap_const_lv9_1));
    i_1_fu_1890_p2 <= std_logic_vector(unsigned(i_0_i_i10_i_i_reg_1069) + unsigned(ap_const_lv13_1));
    i_20_fu_2293_p2 <= std_logic_vector(unsigned(i_0_i_i1_reg_1315) + unsigned(ap_const_lv5_1));
    i_2_fu_1923_p2 <= std_logic_vector(unsigned(i_0_i_i14_i_i_reg_1103) + unsigned(ap_const_lv5_1));
    i_37_fu_2374_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i3_reg_1349) + unsigned(ap_const_lv11_1));
    i_3_fu_1955_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_reg_1114) + unsigned(ap_const_lv11_1));
    i_42_fu_2391_p2 <= std_logic_vector(unsigned(i_0_i_i1_i_i1_reg_1360) + unsigned(ap_const_lv9_1));
    i_43_fu_2408_p2 <= std_logic_vector(unsigned(i_0_i_i1_i_i_i_i3_reg_1371) + unsigned(ap_const_lv9_1));
    i_44_fu_2425_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_i_i3_reg_1382) + unsigned(ap_const_lv9_1));
    i_45_fu_2442_p2 <= std_logic_vector(unsigned(i_0_i_i7_i_i2_reg_1393) + unsigned(ap_const_lv9_1));
    i_46_fu_2459_p2 <= std_logic_vector(unsigned(i_0_i_i18_i_i_reg_1404) + unsigned(ap_const_lv7_1));
    i_47_fu_2488_p2 <= std_logic_vector(unsigned(i_0_i_i3_i_i2_reg_1439) + unsigned(ap_const_lv9_1));
    i_48_fu_2521_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i4_reg_1450) + unsigned(ap_const_lv9_1));
    i_49_fu_2538_p2 <= std_logic_vector(unsigned(i_0_i_i1_i_i_i_i4_reg_1461) + unsigned(ap_const_lv7_1));
    i_4_fu_1972_p2 <= std_logic_vector(unsigned(i_0_i_i1_i_i_i_i_reg_1125) + unsigned(ap_const_lv13_1));
    i_50_fu_2555_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_i_i4_reg_1472) + unsigned(ap_const_lv7_1));
    i_51_fu_2578_p2 <= std_logic_vector(unsigned(i_0_i_i2_reg_1483) + unsigned(ap_const_lv7_1));
    i_52_fu_2652_p2 <= std_logic_vector(unsigned(i_0_i_i3_i_i3_reg_1517) + unsigned(ap_const_lv7_1));
    i_53_fu_2669_p2 <= std_logic_vector(unsigned(i_0_i_i10_i_i2_reg_1528) + unsigned(ap_const_lv4_1));
    i_54_fu_2722_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i5_reg_1551) + unsigned(ap_const_lv7_1));
    i_55_fu_2754_p2 <= std_logic_vector(unsigned(i_0_i_i3_reg_1562) + unsigned(ap_const_lv4_1));
    i_56_fu_2834_p2 <= std_logic_vector(unsigned(i_i3_reg_1574) + unsigned(ap_const_lv7_1));
    i_57_fu_2883_p2 <= std_logic_vector(unsigned(i37_reg_1596) + unsigned(ap_const_lv3_1));
    i_58_fu_2928_p2 <= std_logic_vector(unsigned(i1_reg_1630) + unsigned(ap_const_lv5_1));
    i_59_fu_2973_p2 <= std_logic_vector(unsigned(i3_reg_1664) + unsigned(ap_const_lv7_1));
    i_5_fu_1989_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_i_i_reg_1136) + unsigned(ap_const_lv13_1));
    i_60_fu_3012_p2 <= std_logic_vector(unsigned(i5_reg_1698) + unsigned(ap_const_lv4_1));
    i_6_fu_2089_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i1_reg_1181) + unsigned(ap_const_lv13_1));
    i_7_fu_2062_p2 <= std_logic_vector(unsigned(i_i_reg_1170) + unsigned(ap_const_lv5_1));
    i_8_fu_2012_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_1147) + unsigned(ap_const_lv3_1));
    i_9_fu_2106_p2 <= std_logic_vector(unsigned(i_0_i_i1_i_i_reg_1192) + unsigned(ap_const_lv11_1));
    i_filter_fu_3165_p2 <= std_logic_vector(unsigned(p_z_assign_reg_1775) + unsigned(ap_const_lv4_1));
    i_fu_1873_p2 <= std_logic_vector(unsigned(i_0_i_i3_i_i_reg_1058) + unsigned(ap_const_lv11_1));
    i_i1_cast_fu_2338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i1_reg_1338),9));
    i_i2_cast_fu_2616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i2_reg_1506),10));
    i_i_cast_fu_2053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_1170),6));
    i_z_0_i_fu_3211_p2 <= std_logic_vector(unsigned(p_z_assign_1_0_i_reg_1799) + unsigned(ap_const_lv7_1));
    idx_1_fu_2860_p2 <= std_logic_vector(unsigned(idx_reg_1585) + unsigned(ap_const_lv11_1));
    idx_2_fu_3265_p2 <= std_logic_vector(unsigned(idx7_reg_1810) + unsigned(ap_const_lv4_1));
    inStream_V_V_0_ack_in <= inStream_V_V_0_state(1);

    inStream_V_V_0_ack_out_assign_proc : process(inStream_V_V_0_vld_out, ap_CS_fsm_state48, exitcond2_fu_2854_p2)
    begin
        if ((not(((inStream_V_V_0_vld_out = ap_const_logic_0) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state48) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) then 
            inStream_V_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_V_0_data_out_assign_proc : process(inStream_V_V_0_payload_A, inStream_V_V_0_payload_B, inStream_V_V_0_sel)
    begin
        if ((inStream_V_V_0_sel = ap_const_logic_1)) then 
            inStream_V_V_0_data_out <= inStream_V_V_0_payload_B;
        else 
            inStream_V_V_0_data_out <= inStream_V_V_0_payload_A;
        end if; 
    end process;

    inStream_V_V_0_load_A <= (inStream_V_V_0_state_cmp_full and not(inStream_V_V_0_sel_wr));
    inStream_V_V_0_load_B <= (inStream_V_V_0_state_cmp_full and inStream_V_V_0_sel_wr);
    inStream_V_V_0_sel <= inStream_V_V_0_sel_rd;
    inStream_V_V_0_state_cmp_full <= '0' when (inStream_V_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_V_0_vld_in <= inStream_V_V_TVALID;
    inStream_V_V_0_vld_out <= inStream_V_V_0_state(0);

    inStream_V_V_TDATA_blk_n_assign_proc : process(inStream_V_V_0_state, ap_CS_fsm_state48, exitcond2_fu_2854_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) and (exitcond2_fu_2854_p2 = ap_const_lv1_0))) then 
            inStream_V_V_TDATA_blk_n <= inStream_V_V_0_state(0);
        else 
            inStream_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_V_V_TREADY <= inStream_V_V_0_state(1);
    j_1_fu_2895_p2 <= std_logic_vector(unsigned(j_reg_1619) + unsigned(ap_const_lv5_1));
    j_2_fu_2940_p2 <= std_logic_vector(unsigned(j2_reg_1653) + unsigned(ap_const_lv8_1));
    j_3_fu_2985_p2 <= std_logic_vector(unsigned(j4_reg_1687) + unsigned(ap_const_lv9_1));
    j_4_fu_3054_p2 <= std_logic_vector(unsigned(j6_reg_1709) + unsigned(ap_const_lv7_1));
    next_mul1_fu_2185_p2 <= std_logic_vector(unsigned(phi_mul1_reg_1259) + unsigned(ap_const_lv12_96));
    next_mul2_fu_2281_p2 <= std_logic_vector(unsigned(phi_mul2_reg_1326) + unsigned(ap_const_lv12_96));
    next_mul3_fu_2470_p2 <= std_logic_vector(unsigned(phi_mul3_reg_1427) + unsigned(ap_const_lv16_190));
    next_mul4_fu_2566_p2 <= std_logic_vector(unsigned(phi_mul4_reg_1494) + unsigned(ap_const_lv16_190));
    next_mul5_fu_2871_p2 <= std_logic_vector(unsigned(phi_mul5_reg_1607) + unsigned(ap_const_lv8_19));
    next_mul6_fu_2916_p2 <= std_logic_vector(unsigned(phi_mul6_reg_1641) + unsigned(ap_const_lv12_96));
    next_mul7_fu_2961_p2 <= std_logic_vector(unsigned(phi_mul7_reg_1675) + unsigned(ap_const_lv16_190));
    next_mul9_fu_2000_p2 <= std_logic_vector(unsigned(phi_mul8_reg_1158) + unsigned(ap_const_lv8_19));
    next_mul_fu_1905_p2 <= std_logic_vector(unsigned(phi_mul_reg_1092) + unsigned(ap_const_lv7_19));
    outStream_V_V_1_ack_in <= outStream_V_V_1_state(1);
    outStream_V_V_1_ack_out <= outStream_V_V_TREADY;

    outStream_V_V_1_data_out_assign_proc : process(outStream_V_V_1_payload_A, outStream_V_V_1_payload_B, outStream_V_V_1_sel)
    begin
        if ((outStream_V_V_1_sel = ap_const_logic_1)) then 
            outStream_V_V_1_data_out <= outStream_V_V_1_payload_B;
        else 
            outStream_V_V_1_data_out <= outStream_V_V_1_payload_A;
        end if; 
    end process;

    outStream_V_V_1_load_A <= (outStream_V_V_1_state_cmp_full and not(outStream_V_V_1_sel_wr));
    outStream_V_V_1_load_B <= (outStream_V_V_1_state_cmp_full and outStream_V_V_1_sel_wr);
    outStream_V_V_1_sel <= outStream_V_V_1_sel_rd;
    outStream_V_V_1_state_cmp_full <= '0' when (outStream_V_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_V_1_vld_in_assign_proc : process(outStream_V_V_1_ack_in, ap_CS_fsm_state77)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) and (outStream_V_V_1_ack_in = ap_const_logic_1))) then 
            outStream_V_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_V_1_vld_out <= outStream_V_V_1_state(0);
    outStream_V_V_TDATA <= outStream_V_V_1_data_out;

    outStream_V_V_TDATA_blk_n_assign_proc : process(outStream_V_V_1_state, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            outStream_V_V_TDATA_blk_n <= outStream_V_V_1_state(1);
        else 
            outStream_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_V_V_TVALID <= outStream_V_V_1_state(0);

    p2_input_data_V_address0_assign_proc : process(ap_CS_fsm_state12, p_i0_0_i_cast_reg_3845, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_address0, ap_CS_fsm_state59, ap_CS_fsm_state60, tmp_10_fu_2095_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            p2_input_data_V_address0 <= p_i0_0_i_cast_reg_3845(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p2_input_data_V_address0 <= tmp_10_fu_2095_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_input_data_V_address0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_address0;
        else 
            p2_input_data_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    p2_input_data_V_ce0_assign_proc : process(ap_CS_fsm_state12, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_ce0, ap_CS_fsm_state59, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            p2_input_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_input_data_V_ce0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_ce0;
        else 
            p2_input_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_input_data_V_d0_assign_proc : process(ap_CS_fsm_state12, c1_output_data_V_q0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            p2_input_data_V_d0 <= c1_output_data_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p2_input_data_V_d0 <= ap_const_lv16_0;
        else 
            p2_input_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p2_input_data_V_we0_assign_proc : process(ap_CS_fsm_state12, exitcond_i_i_i_i1_fu_2083_p2, ap_CS_fsm_state59)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state59) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond_i_i_i_i1_fu_2083_p2 = ap_const_lv1_0)))) then 
            p2_input_data_V_we0 <= ap_const_logic_1;
        else 
            p2_input_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_output_data_V_address0_assign_proc : process(ap_CS_fsm_state13, p_i0_0_i1_cast_fu_3091_p1, ap_CS_fsm_state61, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_address0, ap_CS_fsm_state60, tmp_12_fu_2112_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            p2_output_data_V_address0 <= p_i0_0_i1_cast_fu_3091_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p2_output_data_V_address0 <= tmp_12_fu_2112_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_output_data_V_address0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_address0;
        else 
            p2_output_data_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p2_output_data_V_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state61, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_ce0, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            p2_output_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_output_data_V_ce0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_ce0;
        else 
            p2_output_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_output_data_V_d0_assign_proc : process(ap_CS_fsm_state13, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_d0, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            p2_output_data_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_output_data_V_d0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_d0;
        else 
            p2_output_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p2_output_data_V_we0_assign_proc : process(ap_CS_fsm_state13, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_we0, exitcond_i_i2_i_i_fu_2100_p2, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond_i_i2_i_i_fu_2100_p2 = ap_const_lv1_0))) then 
            p2_output_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_output_data_V_we0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_we0;
        else 
            p2_output_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_relu1_input_data_address0_assign_proc : process(ap_CS_fsm_state14, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0, ap_CS_fsm_state60, tmp_13_fu_2129_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p2_relu1_input_data_address0 <= tmp_13_fu_2129_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_relu1_input_data_address0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0;
        else 
            p2_relu1_input_data_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p2_relu1_input_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p2_relu1_input_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_relu1_input_data_ce0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0;
        else 
            p2_relu1_input_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_relu1_input_data_d0_assign_proc : process(ap_CS_fsm_state14, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p2_relu1_input_data_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_relu1_input_data_d0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0;
        else 
            p2_relu1_input_data_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p2_relu1_input_data_we0_assign_proc : process(ap_CS_fsm_state14, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0, exitcond_i_i2_i_i_i_1_fu_2117_p2, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (exitcond_i_i2_i_i_i_1_fu_2117_p2 = ap_const_lv1_0))) then 
            p2_relu1_input_data_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_relu1_input_data_we0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0;
        else 
            p2_relu1_input_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_relu1_output_dat_address0_assign_proc : process(ap_CS_fsm_state15, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0, ap_CS_fsm_state60, tmp_14_fu_2146_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p2_relu1_output_dat_address0 <= tmp_14_fu_2146_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_relu1_output_dat_address0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0;
        else 
            p2_relu1_output_dat_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p2_relu1_output_dat_ce0_assign_proc : process(ap_CS_fsm_state15, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p2_relu1_output_dat_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_relu1_output_dat_ce0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0;
        else 
            p2_relu1_output_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p2_relu1_output_dat_d0_assign_proc : process(ap_CS_fsm_state15, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            p2_relu1_output_dat_d0 <= ap_const_lv15_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_relu1_output_dat_d0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0;
        else 
            p2_relu1_output_dat_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    p2_relu1_output_dat_we0_assign_proc : process(ap_CS_fsm_state15, grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0, exitcond_i_i_i_i_i_i_1_fu_2134_p2, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond_i_i_i_i_i_i_1_fu_2134_p2 = ap_const_lv1_0))) then 
            p2_relu1_output_dat_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            p2_relu1_output_dat_we0 <= grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0;
        else 
            p2_relu1_output_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p4_input_data_V_address0_assign_proc : process(ap_CS_fsm_state26, p_i0_0_i2_cast_reg_3881, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_address0, ap_CS_fsm_state65, ap_CS_fsm_state66, tmp_25_fu_2380_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            p4_input_data_V_address0 <= p_i0_0_i2_cast_reg_3881(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p4_input_data_V_address0 <= tmp_25_fu_2380_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_input_data_V_address0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_address0;
        else 
            p4_input_data_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p4_input_data_V_ce0_assign_proc : process(ap_CS_fsm_state26, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_ce0, ap_CS_fsm_state65, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            p4_input_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_input_data_V_ce0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_ce0;
        else 
            p4_input_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p4_input_data_V_d0_assign_proc : process(ap_CS_fsm_state26, c3_output_data_V_q0, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            p4_input_data_V_d0 <= c3_output_data_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            p4_input_data_V_d0 <= ap_const_lv16_0;
        else 
            p4_input_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p4_input_data_V_we0_assign_proc : process(ap_CS_fsm_state26, exitcond_i_i_i_i3_fu_2368_p2, ap_CS_fsm_state65)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (exitcond_i_i_i_i3_fu_2368_p2 = ap_const_lv1_0)))) then 
            p4_input_data_V_we0 <= ap_const_logic_1;
        else 
            p4_input_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p4_output_data_V_address0_assign_proc : process(ap_CS_fsm_state27, p_i0_0_i3_cast9_fu_3125_p1, ap_CS_fsm_state67, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_address0, ap_CS_fsm_state66, tmp_27_fu_2397_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            p4_output_data_V_address0 <= p_i0_0_i3_cast9_fu_3125_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p4_output_data_V_address0 <= tmp_27_fu_2397_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_output_data_V_address0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_address0;
        else 
            p4_output_data_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    p4_output_data_V_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state67, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_ce0, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state67))) then 
            p4_output_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_output_data_V_ce0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_ce0;
        else 
            p4_output_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p4_output_data_V_d0_assign_proc : process(ap_CS_fsm_state27, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_d0, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p4_output_data_V_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_output_data_V_d0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_d0;
        else 
            p4_output_data_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p4_output_data_V_we0_assign_proc : process(ap_CS_fsm_state27, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_we0, exitcond_i_i2_i_i1_fu_2385_p2, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) and (exitcond_i_i2_i_i1_fu_2385_p2 = ap_const_lv1_0))) then 
            p4_output_data_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_output_data_V_we0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_we0;
        else 
            p4_output_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p4_relu1_input_data_address0_assign_proc : process(ap_CS_fsm_state28, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0, ap_CS_fsm_state66, tmp_28_fu_2414_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p4_relu1_input_data_address0 <= tmp_28_fu_2414_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_relu1_input_data_address0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0;
        else 
            p4_relu1_input_data_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    p4_relu1_input_data_ce0_assign_proc : process(ap_CS_fsm_state28, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p4_relu1_input_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_relu1_input_data_ce0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0;
        else 
            p4_relu1_input_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p4_relu1_input_data_d0_assign_proc : process(ap_CS_fsm_state28, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            p4_relu1_input_data_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_relu1_input_data_d0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0;
        else 
            p4_relu1_input_data_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p4_relu1_input_data_we0_assign_proc : process(ap_CS_fsm_state28, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0, exitcond_i_i2_i_i_i_3_fu_2402_p2, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) and (exitcond_i_i2_i_i_i_3_fu_2402_p2 = ap_const_lv1_0))) then 
            p4_relu1_input_data_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_relu1_input_data_we0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0;
        else 
            p4_relu1_input_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p4_relu1_output_dat_address0_assign_proc : process(ap_CS_fsm_state29, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0, ap_CS_fsm_state66, tmp_29_fu_2431_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p4_relu1_output_dat_address0 <= tmp_29_fu_2431_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_relu1_output_dat_address0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0;
        else 
            p4_relu1_output_dat_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    p4_relu1_output_dat_ce0_assign_proc : process(ap_CS_fsm_state29, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p4_relu1_output_dat_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_relu1_output_dat_ce0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0;
        else 
            p4_relu1_output_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p4_relu1_output_dat_d0_assign_proc : process(ap_CS_fsm_state29, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            p4_relu1_output_dat_d0 <= ap_const_lv15_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_relu1_output_dat_d0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0;
        else 
            p4_relu1_output_dat_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    p4_relu1_output_dat_we0_assign_proc : process(ap_CS_fsm_state29, grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0, exitcond_i_i_i_i_i_i_3_fu_2419_p2, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) and (exitcond_i_i_i_i_i_i_3_fu_2419_p2 = ap_const_lv1_0))) then 
            p4_relu1_output_dat_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            p4_relu1_output_dat_we0 <= grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0;
        else 
            p4_relu1_output_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_i0_0_i1_cast_fu_3091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_i0_0_i1_reg_1731),64));
    p_i0_0_i2_cast_fu_3108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_i0_0_i2_reg_1742),64));
    p_i0_0_i3_cast9_fu_3125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_i0_0_i3_reg_1753),64));
    p_i0_0_i4_cast8_fu_3142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_i0_0_i4_reg_1764),64));
    p_i0_0_i_cast_fu_3074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_i0_0_i_reg_1720),64));
    p_i0_1_fu_3102_p2 <= std_logic_vector(unsigned(p_i0_0_i1_reg_1731) + unsigned(ap_const_lv11_1));
    p_i0_2_fu_3119_p2 <= std_logic_vector(unsigned(p_i0_0_i2_reg_1742) + unsigned(ap_const_lv11_1));
    p_i0_3_fu_3136_p2 <= std_logic_vector(unsigned(p_i0_0_i3_reg_1753) + unsigned(ap_const_lv9_1));
    p_i0_4_fu_3153_p2 <= std_logic_vector(unsigned(p_i0_0_i4_reg_1764) + unsigned(ap_const_lv7_1));
    p_i0_fu_3085_p2 <= std_logic_vector(unsigned(p_i0_0_i_reg_1720) + unsigned(ap_const_lv13_1));
    p_shl1_cast_fu_2706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_2698_p3),12));
    p_shl2_cast_fu_2775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_2767_p3),12));
    p_shl3_cast_fu_2787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_2779_p3),12));
    p_shl4_cast_fu_3026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_3018_p3),12));
    p_shl5_cast_fu_3038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_3030_p3),12));
    p_shl6_cast_fu_3183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_3175_p3),12));
    p_shl7_cast_fu_3195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_3187_p3),12));
    p_shl_cast_fu_2694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_2686_p3),12));
    phi_mul_cast_fu_1901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_1092),8));
    tmp1_fu_2037_p2 <= (tmp_9_fu_2029_p3 and c1_W_size_x_q0);
    tmp2_fu_2322_p0 <= tmp2_fu_2322_p00(3 - 1 downto 0);
    tmp2_fu_2322_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c3_W_size_x_q0),6));
    tmp2_fu_2322_p1 <= tmp2_fu_2322_p10(3 - 1 downto 0);
    tmp2_fu_2322_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c3_W_size_z_load_cas_fu_2314_p1),6));
    tmp2_fu_2322_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_2322_p0) * unsigned(tmp2_fu_2322_p1), 6));
    tmp3_fu_2600_p0 <= tmp3_fu_2600_p00(3 - 1 downto 0);
    tmp3_fu_2600_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c5_W_size_x_load_reg_3647),8));
    tmp3_fu_2600_p1 <= tmp3_fu_2600_p10(5 - 1 downto 0);
    tmp3_fu_2600_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c5_W_size_z_load_reg_3657),8));
    tmp3_fu_2600_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_2600_p0) * unsigned(tmp3_fu_2600_p1), 8));
    tmp4_fu_2809_p2 <= (tmp_54_fu_2801_p3 and fc6_W_size_z_load_ca_fu_2797_p1);
    tmp_10_cast_fu_1938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1933_p2),64));
    tmp_10_fu_2095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i1_reg_1181),64));
    tmp_115_i_fu_2829_p2 <= "1" when (unsigned(i_i3_reg_1574) < unsigned(tmp_i3_reg_3740)) else "0";
    tmp_116_i_cast_fu_2840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i3_reg_1574),12));
    tmp_117_i_fu_2620_p2 <= "1" when (signed(i_i2_cast_fu_2616_p1) < signed(tmp_i2_reg_3662)) else "0";
    tmp_118_i_cast_fu_2631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i2_reg_1506),16));
    tmp_119_i_fu_2342_p2 <= "1" when (signed(i_i1_cast_fu_2338_p1) < signed(tmp_i1_reg_3513)) else "0";
    tmp_11_fu_2072_p2 <= std_logic_vector(unsigned(phi_mul8_reg_1158) + unsigned(tmp_122_i_cast_fu_2068_p1));
    tmp_120_i_cast_fu_2353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i1_reg_1338),12));
    tmp_121_i_fu_2057_p2 <= "1" when (signed(i_i_cast_fu_2053_p1) < signed(tmp_i_reg_3379)) else "0";
    tmp_122_i_cast_fu_2068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_1170),8));
    tmp_12_fu_2112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i1_i_i_reg_1192),64));
    tmp_132_0_i_cast_fu_3222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_z_assign_1_0_i_reg_1799),12));
    tmp_132_0_i_fu_3217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_z_assign_1_0_i_reg_1799),64));
    tmp_13_fu_2129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i1_i_i_i_i1_reg_1203),64));
    tmp_14_fu_2146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i_i_i1_reg_1214),64));
    tmp_15_fu_2163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i3_i_i1_reg_1225),64));
    tmp_16_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i10_i_i1_reg_1236),64));
    tmp_17_cast_fu_2078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_2072_p2),64));
    tmp_18_fu_2191_p2 <= std_logic_vector(unsigned(tmp_17_reg_1247) + unsigned(ap_const_lv4_1));
    tmp_19_fu_2224_p2 <= "1" when (tmp_17_reg_1247 = ap_const_lv4_F) else "0";
    tmp_1_fu_1933_p2 <= std_logic_vector(unsigned(phi_mul_cast_reg_3301) + unsigned(tmp_9_cast_fu_1929_p1));
    tmp_20_fu_2213_p2 <= std_logic_vector(unsigned(phi_mul1_reg_1259) + unsigned(tmp_28_cast_fu_2209_p1));
    tmp_21_fu_2242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i2_reg_1282),64));
    tmp_22_fu_2259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i1_i_i_i_i2_reg_1293),64));
    tmp_23_fu_2276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i_i_i2_reg_1304),64));
    tmp_24_fu_2299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i1_reg_1315),64));
    tmp_25_fu_2380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i3_reg_1349),64));
    tmp_26_fu_2357_p2 <= std_logic_vector(unsigned(phi_mul2_reg_1326) + unsigned(tmp_120_i_cast_fu_2353_p1));
    tmp_27_fu_2397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i1_i_i1_reg_1360),64));
    tmp_28_cast_fu_2209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i14_i_i1_reg_1271),12));
    tmp_28_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i1_i_i_i_i3_reg_1371),64));
    tmp_29_cast_fu_2219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_2213_p2),64));
    tmp_29_fu_2431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i_i_i3_reg_1382),64));
    tmp_2_fu_1961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i_reg_1114),64));
    tmp_30_fu_2448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i7_i_i2_reg_1393),64));
    tmp_31_fu_2465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i18_i_i_reg_1404),64));
    tmp_33_fu_2476_p2 <= std_logic_vector(unsigned(tmp_32_reg_1415) + unsigned(ap_const_lv7_1));
    tmp_34_fu_2509_p2 <= "1" when (tmp_32_reg_1415 = ap_const_lv7_77) else "0";
    tmp_35_fu_2498_p2 <= std_logic_vector(unsigned(phi_mul3_reg_1427) + unsigned(tmp_47_cast_fu_2494_p1));
    tmp_36_cast_fu_2363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_2357_p2),64));
    tmp_36_fu_2527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i4_reg_1450),64));
    tmp_37_fu_2544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i1_i_i_i_i4_reg_1461),64));
    tmp_38_fu_2561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i_i_i4_reg_1472),64));
    tmp_39_fu_2584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i2_reg_1483),64));
    tmp_3_fu_1978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i1_i_i_i_i_reg_1125),64));
    tmp_40_fu_2658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i3_i_i3_reg_1517),64));
    tmp_41_fu_2635_p2 <= std_logic_vector(unsigned(phi_mul4_reg_1494) + unsigned(tmp_118_i_cast_fu_2631_p1));
    tmp_42_fu_2675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i10_i_i2_reg_1528),64));
    tmp_44_fu_2680_p2 <= std_logic_vector(unsigned(tmp_43_reg_1539) + unsigned(ap_const_lv4_1));
    tmp_45_fu_2686_p3 <= (tmp_43_reg_1539 & ap_const_lv7_0);
    tmp_46_fu_2698_p3 <= (tmp_43_reg_1539 & ap_const_lv3_0);
    tmp_47_cast_fu_2494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i3_i_i2_reg_1439),16));
    tmp_47_fu_2710_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_2694_p1) - unsigned(p_shl1_cast_fu_2706_p1));
    tmp_48_cast_fu_2504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_2498_p2),64));
    tmp_48_fu_2742_p2 <= "1" when (tmp_43_reg_1539 = ap_const_lv4_9) else "0";
    tmp_49_fu_2732_p2 <= std_logic_vector(unsigned(tmp_47_reg_3696) + unsigned(tmp_63_cast_fu_2728_p1));
    tmp_50_fu_2760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i3_reg_1562),64));
    tmp_51_fu_2767_p3 <= (i_0_i_i3_reg_1562 & ap_const_lv7_0);
    tmp_52_fu_2779_p3 <= (i_0_i_i3_reg_1562 & ap_const_lv3_0);
    tmp_53_fu_2791_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_2775_p1) - unsigned(p_shl3_cast_fu_2787_p1));
    tmp_54_fu_2801_p3 <= 
        ap_const_lv7_7F when (fc6_W_size_x_q0(0) = '1') else 
        ap_const_lv7_0;
    tmp_55_cast_fu_2641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_2635_p2),64));
    tmp_55_fu_2815_p3 <= 
        ap_const_lv7_7F when (fc6_W_size_y_q0(0) = '1') else 
        ap_const_lv7_0;
    tmp_56_fu_2866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_reg_1585),64));
    tmp_57_fu_2844_p2 <= std_logic_vector(unsigned(tmp_53_reg_3735) + unsigned(tmp_116_i_cast_fu_2840_p1));
    tmp_58_fu_2905_p2 <= std_logic_vector(unsigned(phi_mul5_reg_1607) + unsigned(tmp_75_cast_fu_2901_p1));
    tmp_59_fu_2950_p2 <= std_logic_vector(unsigned(phi_mul6_reg_1641) + unsigned(tmp_79_cast_fu_2946_p1));
    tmp_5_fu_1911_p2 <= std_logic_vector(unsigned(tmp_4_reg_1080) + unsigned(ap_const_lv3_1));
    tmp_60_fu_3018_p3 <= (i5_reg_1698 & ap_const_lv7_0);
    tmp_61_fu_3030_p3 <= (i5_reg_1698 & ap_const_lv3_0);
    tmp_62_fu_3042_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_3026_p1) - unsigned(p_shl5_cast_fu_3038_p1));
    tmp_63_cast_fu_2728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i5_reg_1551),12));
    tmp_63_fu_2995_p2 <= std_logic_vector(unsigned(phi_mul7_reg_1675) + unsigned(tmp_84_cast_fu_2991_p1));
        tmp_64_cast_fu_2737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_2732_p2),64));

    tmp_64_fu_3079_p2 <= "1" when (p_i0_0_i_reg_1720 = ap_const_lv13_1260) else "0";
    tmp_65_fu_3064_p2 <= std_logic_vector(unsigned(tmp_62_reg_3832) + unsigned(tmp_87_cast_fu_3060_p1));
    tmp_66_fu_3096_p2 <= "1" when (p_i0_0_i1_reg_1731 = ap_const_lv11_498) else "0";
    tmp_67_fu_3113_p2 <= "1" when (p_i0_0_i2_reg_1742 = ap_const_lv11_640) else "0";
    tmp_68_fu_3130_p2 <= "1" when (p_i0_0_i3_reg_1753 = ap_const_lv9_190) else "0";
    tmp_69_fu_3147_p2 <= "1" when (p_i0_0_i4_reg_1764 = ap_const_lv7_78) else "0";
    tmp_6_fu_1995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_i_i_i_i_reg_1136),64));
        tmp_70_cast_fu_2849_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_57_fu_2844_p2),64));

    tmp_70_fu_3175_p3 <= (p_z_assign_reg_1775 & ap_const_lv7_0);
    tmp_71_fu_3187_p3 <= (p_z_assign_reg_1775 & ap_const_lv3_0);
    tmp_72_fu_3199_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_3183_p1) - unsigned(p_shl7_cast_fu_3195_p1));
    tmp_73_fu_3271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx7_reg_1810),64));
    tmp_74_fu_3226_p2 <= std_logic_vector(unsigned(tmp_132_0_i_cast_fu_3222_p1) + unsigned(tmp_72_reg_3948));
    tmp_75_cast_fu_2901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_1619),8));
    tmp_76_cast_fu_2911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_2905_p2),64));
    tmp_79_cast_fu_2946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_reg_1653),12));
    tmp_7_fu_2018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_reg_1147),64));
    tmp_80_cast_fu_2956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_2950_p2),64));
    tmp_84_cast_fu_2991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j4_reg_1687),16));
    tmp_85_cast_fu_3001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_2995_p2),64));
    tmp_87_cast_fu_3060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j6_reg_1709),12));
        tmp_88_cast_fu_3069_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_fu_3064_p2),64));

    tmp_8_fu_1943_p2 <= "1" when (tmp_4_reg_1080 = ap_const_lv3_5) else "0";
        tmp_97_cast_fu_3231_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_74_fu_3226_p2),64));

    tmp_9_cast_fu_1929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i14_i_i_reg_1103),8));
    tmp_9_fu_2029_p3 <= 
        ap_const_lv3_7 when (c1_W_size_z_q0(0) = '1') else 
        ap_const_lv3_0;
    tmp_fu_1879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i3_i_i_reg_1058),64));
    tmp_i1_fu_2332_p0 <= tmp_i1_fu_2332_p00(6 - 1 downto 0);
    tmp_i1_fu_2332_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_2322_p2),9));
    tmp_i1_fu_2332_p1 <= tmp_i1_fu_2332_p10(3 - 1 downto 0);
    tmp_i1_fu_2332_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c3_W_size_y_q0),9));
    tmp_i1_fu_2332_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i1_fu_2332_p0) * unsigned(tmp_i1_fu_2332_p1), 9));
    tmp_i2_fu_2610_p0 <= tmp_i2_fu_2610_p00(8 - 1 downto 0);
    tmp_i2_fu_2610_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_2600_p2),10));
    tmp_i2_fu_2610_p1 <= tmp_i2_fu_2610_p10(3 - 1 downto 0);
    tmp_i2_fu_2610_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c5_W_size_y_load_reg_3652),10));
    tmp_i2_fu_2610_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i2_fu_2610_p0) * unsigned(tmp_i2_fu_2610_p1), 10));
    tmp_i3_fu_2823_p2 <= (tmp_55_fu_2815_p3 and tmp4_fu_2809_p2);
    tmp_i4_fu_3171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_z_assign_reg_1775),64));
    tmp_i_fu_2047_p0 <= tmp_i_fu_2047_p00(3 - 1 downto 0);
    tmp_i_fu_2047_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c1_W_size_y_q0),6));
    tmp_i_fu_2047_p1 <= tmp_i_fu_2047_p10(3 - 1 downto 0);
    tmp_i_fu_2047_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp1_fu_2037_p2),6));
    tmp_i_fu_2047_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_fu_2047_p0) * unsigned(tmp_i_fu_2047_p1), 6));
    tmp_s_fu_1896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i10_i_i_reg_1069),64));
end behav;
