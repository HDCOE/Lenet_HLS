// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module forward_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_layer_5_6_1_0_32_32_1_input_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_input_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_input_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_we0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_d0,
        conv_layer_5_6_1_0_32_32_1_output_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_W_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_W_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_W_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0,
        conv_layer_5_6_1_0_32_32_1_inpad_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0,
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_q0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0,
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_q0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] conv_layer_5_6_1_0_32_32_1_input_data_V_address0;
output   conv_layer_5_6_1_0_32_32_1_input_data_V_ce0;
input  [15:0] conv_layer_5_6_1_0_32_32_1_input_data_V_q0;
output  [12:0] conv_layer_5_6_1_0_32_32_1_output_data_V_address0;
output   conv_layer_5_6_1_0_32_32_1_output_data_V_ce0;
output   conv_layer_5_6_1_0_32_32_1_output_data_V_we0;
output  [15:0] conv_layer_5_6_1_0_32_32_1_output_data_V_d0;
input  [15:0] conv_layer_5_6_1_0_32_32_1_output_data_V_q0;
output  [7:0] conv_layer_5_6_1_0_32_32_1_W_data_V_address0;
output   conv_layer_5_6_1_0_32_32_1_W_data_V_ce0;
input  [15:0] conv_layer_5_6_1_0_32_32_1_W_data_V_q0;
output  [9:0] conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0;
output   conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0;
output   conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0;
output  [15:0] conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0;
input  [15:0] conv_layer_5_6_1_0_32_32_1_inpad_data_V_q0;
output  [12:0] conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0;
output   conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0;
output   conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0;
output  [15:0] conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0;
input  [15:0] conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_q0;
output  [12:0] conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0;
output   conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0;
output   conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0;
output  [14:0] conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0;
input  [14:0] conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] conv_layer_5_6_1_0_32_32_1_output_data_V_address0;
reg conv_layer_5_6_1_0_32_32_1_output_data_V_ce0;
reg conv_layer_5_6_1_0_32_32_1_output_data_V_we0;
reg[15:0] conv_layer_5_6_1_0_32_32_1_output_data_V_d0;
reg[12:0] conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0;
reg conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0;
reg conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0;
reg[12:0] conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0;
reg conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0;
reg conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] p_i0_0_i_cast7_fu_198_p1;
reg   [63:0] p_i0_0_i_cast7_reg_361;
wire    ap_CS_fsm_state3;
wire   [12:0] p_i0_fu_209_p2;
reg   [12:0] p_i0_reg_369;
wire   [0:0] tmp_fu_203_p2;
wire   [13:0] p_x_assign_cast6_fu_215_p1;
reg   [13:0] p_x_assign_cast6_reg_379;
wire    ap_CS_fsm_state5;
wire   [4:0] ix_fu_225_p2;
reg   [4:0] ix_reg_387;
wire   [4:0] iy_fu_237_p2;
reg   [4:0] iy_reg_395;
wire    ap_CS_fsm_state6;
wire  signed [13:0] tmp_7_i_cast_fu_273_p1;
reg  signed [13:0] tmp_7_i_cast_reg_400;
wire   [0:0] exitcond4_i_fu_231_p2;
wire   [2:0] iz_fu_287_p2;
reg   [2:0] iz_reg_408;
wire    ap_CS_fsm_state7;
wire   [12:0] next_mul_fu_293_p2;
reg   [12:0] next_mul_reg_413;
wire   [0:0] exitcond_i_fu_281_p2;
wire   [63:0] tmp_i_fu_313_p1;
reg   [63:0] tmp_i_reg_418;
wire   [63:0] p_i0_0_i1_cast2_fu_339_p1;
reg   [63:0] p_i0_0_i1_cast2_reg_428;
wire    ap_CS_fsm_state9;
wire   [12:0] p_i0_7_fu_350_p2;
reg   [12:0] p_i0_7_reg_436;
wire   [0:0] tmp_s_fu_344_p2;
wire    grp_forward_conv_fu_186_ap_start;
wire    grp_forward_conv_fu_186_ap_done;
wire    grp_forward_conv_fu_186_ap_idle;
wire    grp_forward_conv_fu_186_ap_ready;
wire   [9:0] grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_input_data_V_address0;
wire    grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0;
wire   [12:0] grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_address0;
wire    grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0;
wire    grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_we0;
wire   [15:0] grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_d0;
wire   [7:0] grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_W_data_V_address0;
wire    grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0;
wire   [9:0] grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0;
wire    grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0;
wire    grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0;
wire   [15:0] grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0;
reg   [12:0] p_i0_0_i_reg_120;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
reg   [4:0] p_x_assign_reg_131;
reg   [4:0] p_y_assign_reg_142;
wire   [0:0] exitcond3_i_fu_219_p2;
reg   [2:0] p_z_assign_reg_153;
wire    ap_CS_fsm_state8;
reg   [12:0] phi_mul_reg_164;
reg   [12:0] p_i0_0_i1_reg_175;
wire    ap_CS_fsm_state10;
reg    grp_forward_conv_fu_186_ap_start_reg;
wire   [15:0] extLd_fu_356_p1;
wire   [9:0] p_shl_i_fu_243_p3;
wire   [6:0] p_shl1_i_fu_255_p3;
wire   [10:0] p_shl_i_cast_fu_251_p1;
wire   [10:0] p_shl1_i_cast_fu_263_p1;
wire   [10:0] tmp_7_i_fu_267_p2;
wire   [13:0] phi_mul_cast_fu_277_p1;
wire   [13:0] tmp1_fu_299_p2;
wire   [13:0] tmp_9_i_fu_304_p2;
wire  signed [31:0] tmp_9_i_cast_fu_309_p1;
wire   [0:0] tmp_76_fu_322_p3;
wire   [14:0] tmp_75_fu_318_p1;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 grp_forward_conv_fu_186_ap_start_reg = 1'b0;
end

forward_conv grp_forward_conv_fu_186(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_forward_conv_fu_186_ap_start),
    .ap_done(grp_forward_conv_fu_186_ap_done),
    .ap_idle(grp_forward_conv_fu_186_ap_idle),
    .ap_ready(grp_forward_conv_fu_186_ap_ready),
    .conv_layer_5_6_1_0_32_32_1_input_data_V_address0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_input_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_input_data_V_ce0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_input_data_V_q0(conv_layer_5_6_1_0_32_32_1_input_data_V_q0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_address0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_ce0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_we0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_we0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_d0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_d0),
    .conv_layer_5_6_1_0_32_32_1_W_data_V_address0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_W_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_W_data_V_ce0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_W_data_V_q0(conv_layer_5_6_1_0_32_32_1_W_data_V_q0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0(grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_q0(conv_layer_5_6_1_0_32_32_1_inpad_data_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_forward_conv_fu_186_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_forward_conv_fu_186_ap_start_reg <= 1'b1;
        end else if ((grp_forward_conv_fu_186_ap_ready == 1'b1)) begin
            grp_forward_conv_fu_186_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_i_fu_219_p2 == 1'd1))) begin
        p_i0_0_i1_reg_175 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_i0_0_i1_reg_175 <= p_i0_7_reg_436;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_i0_0_i_reg_120 <= p_i0_reg_369;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_forward_conv_fu_186_ap_done == 1'b1))) begin
        p_i0_0_i_reg_120 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_x_assign_reg_131 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond4_i_fu_231_p2 == 1'd1))) begin
        p_x_assign_reg_131 <= ix_reg_387;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_i_fu_219_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        p_y_assign_reg_142 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i_fu_281_p2 == 1'd1))) begin
        p_y_assign_reg_142 <= iy_reg_395;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_i_fu_231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        p_z_assign_reg_153 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_z_assign_reg_153 <= iz_reg_408;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_i_fu_231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul_reg_164 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_mul_reg_164 <= next_mul_reg_413;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ix_reg_387 <= ix_fu_225_p2;
        p_x_assign_cast6_reg_379[4 : 0] <= p_x_assign_cast6_fu_215_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        iy_reg_395 <= iy_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        iz_reg_408 <= iz_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_281_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        next_mul_reg_413 <= next_mul_fu_293_p2;
        tmp_i_reg_418[31 : 0] <= tmp_i_fu_313_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_i0_0_i1_cast2_reg_428[12 : 0] <= p_i0_0_i1_cast2_fu_339_p1[12 : 0];
        p_i0_7_reg_436 <= p_i0_7_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_i0_0_i_cast7_reg_361[12 : 0] <= p_i0_0_i_cast7_fu_198_p1[12 : 0];
        p_i0_reg_369 <= p_i0_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_i_fu_231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_7_i_cast_reg_400[13 : 2] <= tmp_7_i_cast_fu_273_p1[13 : 2];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_s_fu_344_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_s_fu_344_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_address0 = p_i0_0_i1_cast2_reg_428;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_address0 = p_i0_0_i_cast7_fu_198_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_address0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_address0;
    end else begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10))) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_ce0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0;
    end else begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_d0 = extLd_fu_356_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_d0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_d0;
    end else begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_we0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_output_data_V_we0;
    end else begin
        conv_layer_5_6_1_0_32_32_1_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0 = tmp_i_fu_313_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0 = p_i0_0_i_cast7_reg_361;
    end else begin
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7))) begin
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0 = 1'b1;
    end else begin
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0 = 1'b1;
    end else begin
        conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0 = p_i0_0_i1_cast2_fu_339_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0 = tmp_i_reg_418;
    end else begin
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0 = 1'b1;
    end else begin
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0 = 1'b1;
    end else begin
        conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_forward_conv_fu_186_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond3_i_fu_219_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond4_i_fu_231_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i_fu_281_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_s_fu_344_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign conv_layer_5_6_1_0_32_32_1_W_data_V_address0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_W_data_V_address0;

assign conv_layer_5_6_1_0_32_32_1_W_data_V_ce0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0;

assign conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0;

assign conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0;

assign conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0;

assign conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0;

assign conv_layer_5_6_1_0_32_32_1_input_data_V_address0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_input_data_V_address0;

assign conv_layer_5_6_1_0_32_32_1_input_data_V_ce0 = grp_forward_conv_fu_186_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0;

assign conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0 = conv_layer_5_6_1_0_32_32_1_output_data_V_q0;

assign conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0 = ((tmp_76_fu_322_p3[0:0] === 1'b1) ? 15'd0 : tmp_75_fu_318_p1);

assign exitcond3_i_fu_219_p2 = ((p_x_assign_reg_131 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond4_i_fu_231_p2 = ((p_y_assign_reg_142 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond_i_fu_281_p2 = ((p_z_assign_reg_153 == 3'd6) ? 1'b1 : 1'b0);

assign extLd_fu_356_p1 = conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_q0;

assign grp_forward_conv_fu_186_ap_start = grp_forward_conv_fu_186_ap_start_reg;

assign ix_fu_225_p2 = (p_x_assign_reg_131 + 5'd1);

assign iy_fu_237_p2 = (p_y_assign_reg_142 + 5'd1);

assign iz_fu_287_p2 = (p_z_assign_reg_153 + 3'd1);

assign next_mul_fu_293_p2 = (13'd784 + phi_mul_reg_164);

assign p_i0_0_i1_cast2_fu_339_p1 = p_i0_0_i1_reg_175;

assign p_i0_0_i_cast7_fu_198_p1 = p_i0_0_i_reg_120;

assign p_i0_7_fu_350_p2 = (p_i0_0_i1_reg_175 + 13'd1);

assign p_i0_fu_209_p2 = (p_i0_0_i_reg_120 + 13'd1);

assign p_shl1_i_cast_fu_263_p1 = p_shl1_i_fu_255_p3;

assign p_shl1_i_fu_255_p3 = {{p_y_assign_reg_142}, {2'd0}};

assign p_shl_i_cast_fu_251_p1 = p_shl_i_fu_243_p3;

assign p_shl_i_fu_243_p3 = {{p_y_assign_reg_142}, {5'd0}};

assign p_x_assign_cast6_fu_215_p1 = p_x_assign_reg_131;

assign phi_mul_cast_fu_277_p1 = phi_mul_reg_164;

assign tmp1_fu_299_p2 = ($signed(tmp_7_i_cast_reg_400) + $signed(phi_mul_cast_fu_277_p1));

assign tmp_75_fu_318_p1 = conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_q0[14:0];

assign tmp_76_fu_322_p3 = conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_q0[32'd15];

assign tmp_7_i_cast_fu_273_p1 = $signed(tmp_7_i_fu_267_p2);

assign tmp_7_i_fu_267_p2 = (p_shl_i_cast_fu_251_p1 - p_shl1_i_cast_fu_263_p1);

assign tmp_9_i_cast_fu_309_p1 = $signed(tmp_9_i_fu_304_p2);

assign tmp_9_i_fu_304_p2 = (tmp1_fu_299_p2 + p_x_assign_cast6_reg_379);

assign tmp_fu_203_p2 = ((p_i0_0_i_reg_120 == 13'd4704) ? 1'b1 : 1'b0);

assign tmp_i_fu_313_p1 = $unsigned(tmp_9_i_cast_fu_309_p1);

assign tmp_s_fu_344_p2 = ((p_i0_0_i1_reg_175 == 13'd4704) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    p_i0_0_i_cast7_reg_361[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    p_x_assign_cast6_reg_379[13:5] <= 9'b000000000;
    tmp_7_i_cast_reg_400[1:0] <= 2'b00;
    tmp_i_reg_418[63:32] <= 32'b00000000000000000000000000000000;
    p_i0_0_i1_cast2_reg_428[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //forward_2
