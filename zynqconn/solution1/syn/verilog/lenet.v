// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lenet,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.690250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=132,HLS_SYN_DSP=4,HLS_SYN_FF=4100,HLS_SYN_LUT=10661,HLS_VERSION=2018_3}" *)

module lenet (
        ap_clk,
        ap_rst_n,
        inStream_V_V_TDATA,
        inStream_V_V_TVALID,
        inStream_V_V_TREADY,
        outStream_V_V_TDATA,
        outStream_V_V_TVALID,
        outStream_V_V_TREADY,
        c1w_V_V_TDATA,
        c1w_V_V_TVALID,
        c1w_V_V_TREADY,
        c3w_V_V_TDATA,
        c3w_V_V_TVALID,
        c3w_V_V_TREADY,
        c5w_V_V_TDATA,
        c5w_V_V_TVALID,
        c5w_V_V_TREADY,
        fcw_V_V_TDATA,
        fcw_V_V_TVALID,
        fcw_V_V_TREADY,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 78'd1;
parameter    ap_ST_fsm_state2 = 78'd2;
parameter    ap_ST_fsm_state3 = 78'd4;
parameter    ap_ST_fsm_state4 = 78'd8;
parameter    ap_ST_fsm_state5 = 78'd16;
parameter    ap_ST_fsm_state6 = 78'd32;
parameter    ap_ST_fsm_state7 = 78'd64;
parameter    ap_ST_fsm_state8 = 78'd128;
parameter    ap_ST_fsm_state9 = 78'd256;
parameter    ap_ST_fsm_state10 = 78'd512;
parameter    ap_ST_fsm_state11 = 78'd1024;
parameter    ap_ST_fsm_state12 = 78'd2048;
parameter    ap_ST_fsm_state13 = 78'd4096;
parameter    ap_ST_fsm_state14 = 78'd8192;
parameter    ap_ST_fsm_state15 = 78'd16384;
parameter    ap_ST_fsm_state16 = 78'd32768;
parameter    ap_ST_fsm_state17 = 78'd65536;
parameter    ap_ST_fsm_state18 = 78'd131072;
parameter    ap_ST_fsm_state19 = 78'd262144;
parameter    ap_ST_fsm_state20 = 78'd524288;
parameter    ap_ST_fsm_state21 = 78'd1048576;
parameter    ap_ST_fsm_state22 = 78'd2097152;
parameter    ap_ST_fsm_state23 = 78'd4194304;
parameter    ap_ST_fsm_state24 = 78'd8388608;
parameter    ap_ST_fsm_state25 = 78'd16777216;
parameter    ap_ST_fsm_state26 = 78'd33554432;
parameter    ap_ST_fsm_state27 = 78'd67108864;
parameter    ap_ST_fsm_state28 = 78'd134217728;
parameter    ap_ST_fsm_state29 = 78'd268435456;
parameter    ap_ST_fsm_state30 = 78'd536870912;
parameter    ap_ST_fsm_state31 = 78'd1073741824;
parameter    ap_ST_fsm_state32 = 78'd2147483648;
parameter    ap_ST_fsm_state33 = 78'd4294967296;
parameter    ap_ST_fsm_state34 = 78'd8589934592;
parameter    ap_ST_fsm_state35 = 78'd17179869184;
parameter    ap_ST_fsm_state36 = 78'd34359738368;
parameter    ap_ST_fsm_state37 = 78'd68719476736;
parameter    ap_ST_fsm_state38 = 78'd137438953472;
parameter    ap_ST_fsm_state39 = 78'd274877906944;
parameter    ap_ST_fsm_state40 = 78'd549755813888;
parameter    ap_ST_fsm_state41 = 78'd1099511627776;
parameter    ap_ST_fsm_state42 = 78'd2199023255552;
parameter    ap_ST_fsm_state43 = 78'd4398046511104;
parameter    ap_ST_fsm_state44 = 78'd8796093022208;
parameter    ap_ST_fsm_state45 = 78'd17592186044416;
parameter    ap_ST_fsm_state46 = 78'd35184372088832;
parameter    ap_ST_fsm_state47 = 78'd70368744177664;
parameter    ap_ST_fsm_state48 = 78'd140737488355328;
parameter    ap_ST_fsm_state49 = 78'd281474976710656;
parameter    ap_ST_fsm_state50 = 78'd562949953421312;
parameter    ap_ST_fsm_state51 = 78'd1125899906842624;
parameter    ap_ST_fsm_state52 = 78'd2251799813685248;
parameter    ap_ST_fsm_state53 = 78'd4503599627370496;
parameter    ap_ST_fsm_state54 = 78'd9007199254740992;
parameter    ap_ST_fsm_state55 = 78'd18014398509481984;
parameter    ap_ST_fsm_state56 = 78'd36028797018963968;
parameter    ap_ST_fsm_state57 = 78'd72057594037927936;
parameter    ap_ST_fsm_state58 = 78'd144115188075855872;
parameter    ap_ST_fsm_state59 = 78'd288230376151711744;
parameter    ap_ST_fsm_state60 = 78'd576460752303423488;
parameter    ap_ST_fsm_state61 = 78'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 78'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 78'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 78'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 78'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 78'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 78'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 78'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 78'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 78'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 78'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 78'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 78'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 78'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 78'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 78'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 78'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 78'd151115727451828646838272;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [15:0] inStream_V_V_TDATA;
input   inStream_V_V_TVALID;
output   inStream_V_V_TREADY;
output  [15:0] outStream_V_V_TDATA;
output   outStream_V_V_TVALID;
input   outStream_V_V_TREADY;
input  [15:0] c1w_V_V_TDATA;
input   c1w_V_V_TVALID;
output   c1w_V_V_TREADY;
input  [15:0] c3w_V_V_TDATA;
input   c3w_V_V_TVALID;
output   c3w_V_V_TREADY;
input  [15:0] c5w_V_V_TDATA;
input   c5w_V_V_TVALID;
output   c5w_V_V_TREADY;
input  [15:0] fcw_V_V_TDATA;
input   fcw_V_V_TVALID;
output   fcw_V_V_TREADY;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [77:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [15:0] inStream_V_V_0_data_out;
wire    inStream_V_V_0_vld_in;
wire    inStream_V_V_0_vld_out;
wire    inStream_V_V_0_ack_in;
reg    inStream_V_V_0_ack_out;
reg   [15:0] inStream_V_V_0_payload_A;
reg   [15:0] inStream_V_V_0_payload_B;
reg    inStream_V_V_0_sel_rd;
reg    inStream_V_V_0_sel_wr;
wire    inStream_V_V_0_sel;
wire    inStream_V_V_0_load_A;
wire    inStream_V_V_0_load_B;
reg   [1:0] inStream_V_V_0_state;
wire    inStream_V_V_0_state_cmp_full;
reg   [15:0] outStream_V_V_1_data_out;
reg    outStream_V_V_1_vld_in;
wire    outStream_V_V_1_vld_out;
wire    outStream_V_V_1_ack_in;
wire    outStream_V_V_1_ack_out;
reg   [15:0] outStream_V_V_1_payload_A;
reg   [15:0] outStream_V_V_1_payload_B;
reg    outStream_V_V_1_sel_rd;
reg    outStream_V_V_1_sel_wr;
wire    outStream_V_V_1_sel;
wire    outStream_V_V_1_load_A;
wire    outStream_V_V_1_load_B;
reg   [1:0] outStream_V_V_1_state;
wire    outStream_V_V_1_state_cmp_full;
reg   [15:0] c1w_V_V_0_data_out;
wire    c1w_V_V_0_vld_in;
wire    c1w_V_V_0_vld_out;
wire    c1w_V_V_0_ack_in;
reg    c1w_V_V_0_ack_out;
reg   [15:0] c1w_V_V_0_payload_A;
reg   [15:0] c1w_V_V_0_payload_B;
reg    c1w_V_V_0_sel_rd;
reg    c1w_V_V_0_sel_wr;
wire    c1w_V_V_0_sel;
wire    c1w_V_V_0_load_A;
wire    c1w_V_V_0_load_B;
reg   [1:0] c1w_V_V_0_state;
wire    c1w_V_V_0_state_cmp_full;
reg   [15:0] c3w_V_V_0_data_out;
wire    c3w_V_V_0_vld_in;
wire    c3w_V_V_0_vld_out;
wire    c3w_V_V_0_ack_in;
reg    c3w_V_V_0_ack_out;
reg   [15:0] c3w_V_V_0_payload_A;
reg   [15:0] c3w_V_V_0_payload_B;
reg    c3w_V_V_0_sel_rd;
reg    c3w_V_V_0_sel_wr;
wire    c3w_V_V_0_sel;
wire    c3w_V_V_0_load_A;
wire    c3w_V_V_0_load_B;
reg   [1:0] c3w_V_V_0_state;
wire    c3w_V_V_0_state_cmp_full;
reg   [15:0] c5w_V_V_0_data_out;
wire    c5w_V_V_0_vld_in;
wire    c5w_V_V_0_vld_out;
wire    c5w_V_V_0_ack_in;
reg    c5w_V_V_0_ack_out;
reg   [15:0] c5w_V_V_0_payload_A;
reg   [15:0] c5w_V_V_0_payload_B;
reg    c5w_V_V_0_sel_rd;
reg    c5w_V_V_0_sel_wr;
wire    c5w_V_V_0_sel;
wire    c5w_V_V_0_load_A;
wire    c5w_V_V_0_load_B;
reg   [1:0] c5w_V_V_0_state;
wire    c5w_V_V_0_state_cmp_full;
reg   [15:0] fcw_V_V_0_data_out;
wire    fcw_V_V_0_vld_in;
wire    fcw_V_V_0_vld_out;
wire    fcw_V_V_0_ack_in;
reg    fcw_V_V_0_ack_out;
reg   [15:0] fcw_V_V_0_payload_A;
reg   [15:0] fcw_V_V_0_payload_B;
reg    fcw_V_V_0_sel_rd;
reg    fcw_V_V_0_sel_wr;
wire    fcw_V_V_0_sel;
wire    fcw_V_V_0_load_A;
wire    fcw_V_V_0_load_B;
reg   [1:0] fcw_V_V_0_state;
wire    fcw_V_V_0_state_cmp_full;
wire   [31:0] start;
wire   [2:0] c1_W_size_x_address0;
reg    c1_W_size_x_ce0;
wire   [2:0] c1_W_size_x_q0;
wire   [2:0] c1_W_size_y_address0;
reg    c1_W_size_y_ce0;
wire   [2:0] c1_W_size_y_q0;
wire   [2:0] c1_W_size_z_address0;
reg    c1_W_size_z_ce0;
wire   [0:0] c1_W_size_z_q0;
wire   [3:0] c3_W_size_x_address0;
reg    c3_W_size_x_ce0;
wire   [2:0] c3_W_size_x_q0;
wire   [3:0] c3_W_size_y_address0;
reg    c3_W_size_y_ce0;
wire   [2:0] c3_W_size_y_q0;
wire   [3:0] c3_W_size_z_address0;
reg    c3_W_size_z_ce0;
wire   [1:0] c3_W_size_z_q0;
wire   [6:0] c5_W_size_x_address0;
reg    c5_W_size_x_ce0;
wire   [2:0] c5_W_size_x_q0;
wire   [6:0] c5_W_size_y_address0;
reg    c5_W_size_y_ce0;
wire   [2:0] c5_W_size_y_q0;
wire   [6:0] c5_W_size_z_address0;
reg    c5_W_size_z_ce0;
wire   [4:0] c5_W_size_z_q0;
wire   [3:0] fc6_W_size_x_address0;
reg    fc6_W_size_x_ce0;
wire   [0:0] fc6_W_size_x_q0;
wire   [3:0] fc6_W_size_y_address0;
reg    fc6_W_size_y_ce0;
wire   [0:0] fc6_W_size_y_q0;
wire   [3:0] fc6_W_size_z_address0;
reg    fc6_W_size_z_ce0;
wire   [3:0] fc6_W_size_z_q0;
reg    inStream_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state48;
wire   [0:0] exitcond2_fu_2854_p2;
reg    outStream_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state78;
reg    c1w_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state50;
wire   [0:0] exitcond5_fu_2889_p2;
reg    c3w_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state52;
wire   [0:0] exitcond7_fu_2934_p2;
reg    c5w_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state54;
wire   [0:0] exitcond9_fu_2979_p2;
reg    fcw_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state56;
wire   [0:0] exitcond1_fu_3048_p2;
wire   [10:0] i_fu_1873_p2;
wire    ap_CS_fsm_state2;
wire   [12:0] i_1_fu_1890_p2;
wire    ap_CS_fsm_state3;
wire   [7:0] phi_mul_cast_fu_1901_p1;
reg   [7:0] phi_mul_cast_reg_3301;
wire    ap_CS_fsm_state4;
wire   [6:0] next_mul_fu_1905_p2;
reg   [6:0] next_mul_reg_3306;
wire   [2:0] tmp_5_fu_1911_p2;
reg   [2:0] tmp_5_reg_3311;
wire   [4:0] i_2_fu_1923_p2;
wire    ap_CS_fsm_state5;
wire   [10:0] i_3_fu_1955_p2;
wire    ap_CS_fsm_state6;
wire   [12:0] i_4_fu_1972_p2;
wire    ap_CS_fsm_state7;
wire   [12:0] i_5_fu_1989_p2;
wire    ap_CS_fsm_state8;
wire   [7:0] next_mul9_fu_2000_p2;
reg   [7:0] next_mul9_reg_3351;
wire    ap_CS_fsm_state9;
wire   [2:0] i_8_fu_2012_p2;
reg   [2:0] i_8_reg_3359;
wire   [0:0] exitcond_i_i_fu_2006_p2;
wire   [5:0] tmp_i_fu_2047_p2;
reg   [5:0] tmp_i_reg_3379;
wire    ap_CS_fsm_state10;
wire   [4:0] i_7_fu_2062_p2;
wire    ap_CS_fsm_state11;
wire   [12:0] i_6_fu_2089_p2;
wire    ap_CS_fsm_state12;
wire   [10:0] i_9_fu_2106_p2;
wire    ap_CS_fsm_state13;
wire   [10:0] i_10_fu_2123_p2;
wire    ap_CS_fsm_state14;
wire   [10:0] i_11_fu_2140_p2;
wire    ap_CS_fsm_state15;
wire   [10:0] i_12_fu_2157_p2;
wire    ap_CS_fsm_state16;
wire   [10:0] i_13_fu_2174_p2;
wire    ap_CS_fsm_state17;
wire   [11:0] next_mul1_fu_2185_p2;
reg   [11:0] next_mul1_reg_3440;
wire    ap_CS_fsm_state18;
wire   [3:0] tmp_18_fu_2191_p2;
reg   [3:0] tmp_18_reg_3445;
wire   [7:0] i_14_fu_2203_p2;
wire    ap_CS_fsm_state19;
wire   [10:0] i_15_fu_2236_p2;
wire    ap_CS_fsm_state20;
wire   [10:0] i_16_fu_2253_p2;
wire    ap_CS_fsm_state21;
wire   [10:0] i_17_fu_2270_p2;
wire    ap_CS_fsm_state22;
wire   [11:0] next_mul2_fu_2281_p2;
reg   [11:0] next_mul2_reg_3485;
wire    ap_CS_fsm_state23;
wire   [4:0] i_20_fu_2293_p2;
reg   [4:0] i_20_reg_3493;
wire   [0:0] exitcond_i_i1_fu_2287_p2;
wire   [8:0] tmp_i1_fu_2332_p2;
reg   [8:0] tmp_i1_reg_3513;
wire    ap_CS_fsm_state24;
wire   [7:0] i_18_fu_2347_p2;
wire    ap_CS_fsm_state25;
wire   [10:0] i_37_fu_2374_p2;
wire    ap_CS_fsm_state26;
wire   [8:0] i_42_fu_2391_p2;
wire    ap_CS_fsm_state27;
wire   [8:0] i_43_fu_2408_p2;
wire    ap_CS_fsm_state28;
wire   [8:0] i_44_fu_2425_p2;
wire    ap_CS_fsm_state29;
wire   [8:0] i_45_fu_2442_p2;
wire    ap_CS_fsm_state30;
wire   [6:0] i_46_fu_2459_p2;
wire    ap_CS_fsm_state31;
wire   [15:0] next_mul3_fu_2470_p2;
reg   [15:0] next_mul3_reg_3574;
wire    ap_CS_fsm_state32;
wire   [6:0] tmp_33_fu_2476_p2;
reg   [6:0] tmp_33_reg_3579;
wire   [8:0] i_47_fu_2488_p2;
wire    ap_CS_fsm_state33;
wire   [8:0] i_48_fu_2521_p2;
wire    ap_CS_fsm_state34;
wire   [6:0] i_49_fu_2538_p2;
wire    ap_CS_fsm_state35;
wire   [6:0] i_50_fu_2555_p2;
wire    ap_CS_fsm_state36;
wire   [15:0] next_mul4_fu_2566_p2;
reg   [15:0] next_mul4_reg_3619;
wire    ap_CS_fsm_state37;
wire   [6:0] i_51_fu_2578_p2;
reg   [6:0] i_51_reg_3627;
wire   [0:0] exitcond_i_i2_fu_2572_p2;
reg   [2:0] c5_W_size_x_load_reg_3647;
wire    ap_CS_fsm_state38;
reg   [2:0] c5_W_size_y_load_reg_3652;
reg   [4:0] c5_W_size_z_load_reg_3657;
wire   [9:0] tmp_i2_fu_2610_p2;
reg   [9:0] tmp_i2_reg_3662;
wire    ap_CS_fsm_state39;
wire   [8:0] i_19_fu_2625_p2;
wire    ap_CS_fsm_state40;
wire   [6:0] i_52_fu_2652_p2;
wire    ap_CS_fsm_state41;
wire   [3:0] i_53_fu_2669_p2;
wire    ap_CS_fsm_state42;
wire   [3:0] tmp_44_fu_2680_p2;
reg   [3:0] tmp_44_reg_3691;
wire    ap_CS_fsm_state43;
wire   [11:0] tmp_47_fu_2710_p2;
reg   [11:0] tmp_47_reg_3696;
wire   [6:0] i_54_fu_2722_p2;
wire    ap_CS_fsm_state44;
wire   [3:0] i_55_fu_2754_p2;
reg   [3:0] i_55_reg_3715;
wire    ap_CS_fsm_state45;
wire   [0:0] exitcond_i_i3_fu_2748_p2;
wire   [11:0] tmp_53_fu_2791_p2;
reg   [11:0] tmp_53_reg_3735;
wire    ap_CS_fsm_state46;
wire   [6:0] tmp_i3_fu_2823_p2;
reg   [6:0] tmp_i3_reg_3740;
wire   [6:0] i_56_fu_2834_p2;
wire    ap_CS_fsm_state47;
wire   [10:0] idx_1_fu_2860_p2;
reg    ap_block_state48;
wire   [7:0] next_mul5_fu_2871_p2;
reg   [7:0] next_mul5_reg_3761;
wire    ap_CS_fsm_state49;
wire   [2:0] i_57_fu_2883_p2;
reg   [2:0] i_57_reg_3769;
wire   [4:0] j_1_fu_2895_p2;
reg    ap_block_state50;
wire   [11:0] next_mul6_fu_2916_p2;
reg   [11:0] next_mul6_reg_3782;
wire    ap_CS_fsm_state51;
wire   [4:0] i_58_fu_2928_p2;
reg   [4:0] i_58_reg_3790;
wire   [7:0] j_2_fu_2940_p2;
reg    ap_block_state52;
wire   [15:0] next_mul7_fu_2961_p2;
reg   [15:0] next_mul7_reg_3803;
wire    ap_CS_fsm_state53;
wire   [6:0] i_59_fu_2973_p2;
reg   [6:0] i_59_reg_3811;
wire   [8:0] j_3_fu_2985_p2;
reg    ap_block_state54;
wire   [3:0] i_60_fu_3012_p2;
reg   [3:0] i_60_reg_3827;
wire    ap_CS_fsm_state55;
wire   [11:0] tmp_62_fu_3042_p2;
reg   [11:0] tmp_62_reg_3832;
wire   [0:0] exitcond8_fu_3006_p2;
wire   [6:0] j_4_fu_3054_p2;
reg    ap_block_state56;
wire   [63:0] p_i0_0_i_cast_fu_3074_p1;
reg   [63:0] p_i0_0_i_cast_reg_3845;
wire    ap_CS_fsm_state58;
wire   [12:0] p_i0_fu_3085_p2;
reg   [12:0] p_i0_reg_3853;
wire   [0:0] tmp_64_fu_3079_p2;
wire   [63:0] p_i0_0_i1_cast_fu_3091_p1;
reg   [63:0] p_i0_0_i1_cast_reg_3863;
wire    ap_CS_fsm_state61;
wire   [10:0] p_i0_1_fu_3102_p2;
reg   [10:0] p_i0_1_reg_3871;
wire   [0:0] tmp_66_fu_3096_p2;
wire   [63:0] p_i0_0_i2_cast_fu_3108_p1;
reg   [63:0] p_i0_0_i2_cast_reg_3881;
wire    ap_CS_fsm_state64;
wire   [10:0] p_i0_2_fu_3119_p2;
reg   [10:0] p_i0_2_reg_3889;
wire   [0:0] tmp_67_fu_3113_p2;
wire   [63:0] p_i0_0_i3_cast9_fu_3125_p1;
reg   [63:0] p_i0_0_i3_cast9_reg_3899;
wire    ap_CS_fsm_state67;
wire   [8:0] p_i0_3_fu_3136_p2;
reg   [8:0] p_i0_3_reg_3907;
wire   [0:0] tmp_68_fu_3130_p2;
wire   [63:0] p_i0_0_i4_cast8_fu_3142_p1;
reg   [63:0] p_i0_0_i4_cast8_reg_3917;
wire    ap_CS_fsm_state70;
wire   [6:0] p_i0_4_fu_3153_p2;
reg   [6:0] p_i0_4_reg_3925;
wire   [0:0] tmp_69_fu_3147_p2;
wire   [3:0] i_filter_fu_3165_p2;
reg   [3:0] i_filter_reg_3938;
wire    ap_CS_fsm_state72;
wire   [63:0] tmp_i4_fu_3171_p1;
reg   [63:0] tmp_i4_reg_3943;
wire   [0:0] exitcond_i_fu_3159_p2;
wire   [11:0] tmp_72_fu_3199_p2;
reg   [11:0] tmp_72_reg_3948;
wire   [6:0] i_z_0_i_fu_3211_p2;
reg   [6:0] i_z_0_i_reg_3956;
wire    ap_CS_fsm_state73;
wire   [0:0] exitcond_0_i_fu_3205_p2;
wire   [15:0] fc6_input_data_V_q0;
reg  signed [15:0] fc6_input_data_V_lo_reg_3971;
wire    ap_CS_fsm_state74;
wire   [15:0] fc6_W_data_V_q0;
reg  signed [15:0] fc6_W_data_V_load_reg_3976;
wire    ap_CS_fsm_state75;
wire   [3:0] idx_2_fu_3265_p2;
reg   [3:0] idx_2_reg_3989;
wire    ap_CS_fsm_state76;
wire   [0:0] exitcond_fu_3259_p2;
wire   [15:0] fc6_output_data_V_q0;
reg   [9:0] c1_input_data_V_address0;
reg    c1_input_data_V_ce0;
reg    c1_input_data_V_we0;
reg   [15:0] c1_input_data_V_d0;
wire   [15:0] c1_input_data_V_q0;
reg   [12:0] c1_output_data_V_address0;
reg    c1_output_data_V_ce0;
reg    c1_output_data_V_we0;
reg   [15:0] c1_output_data_V_d0;
wire   [15:0] c1_output_data_V_q0;
reg   [7:0] c1_W_data_V_address0;
reg    c1_W_data_V_ce0;
reg    c1_W_data_V_we0;
reg   [15:0] c1_W_data_V_d0;
wire   [15:0] c1_W_data_V_q0;
reg   [9:0] c1_inpad_data_V_address0;
reg    c1_inpad_data_V_ce0;
reg    c1_inpad_data_V_we0;
reg   [15:0] c1_inpad_data_V_d0;
wire   [15:0] c1_inpad_data_V_q0;
reg   [12:0] c1_relu1_input_data_address0;
reg    c1_relu1_input_data_ce0;
reg    c1_relu1_input_data_we0;
reg   [15:0] c1_relu1_input_data_d0;
wire   [15:0] c1_relu1_input_data_q0;
reg   [12:0] c1_relu1_output_dat_address0;
reg    c1_relu1_output_dat_ce0;
reg    c1_relu1_output_dat_we0;
reg   [14:0] c1_relu1_output_dat_d0;
wire   [14:0] c1_relu1_output_dat_q0;
reg   [12:0] p2_input_data_V_address0;
reg    p2_input_data_V_ce0;
reg    p2_input_data_V_we0;
reg   [15:0] p2_input_data_V_d0;
wire   [15:0] p2_input_data_V_q0;
reg   [10:0] p2_output_data_V_address0;
reg    p2_output_data_V_ce0;
reg    p2_output_data_V_we0;
reg   [15:0] p2_output_data_V_d0;
wire   [15:0] p2_output_data_V_q0;
reg   [10:0] p2_relu1_input_data_address0;
reg    p2_relu1_input_data_ce0;
reg    p2_relu1_input_data_we0;
reg   [15:0] p2_relu1_input_data_d0;
wire   [15:0] p2_relu1_input_data_q0;
reg   [10:0] p2_relu1_output_dat_address0;
reg    p2_relu1_output_dat_ce0;
reg    p2_relu1_output_dat_we0;
reg   [14:0] p2_relu1_output_dat_d0;
wire   [14:0] p2_relu1_output_dat_q0;
reg   [10:0] c3_input_data_V_address0;
reg    c3_input_data_V_ce0;
reg    c3_input_data_V_we0;
reg   [15:0] c3_input_data_V_d0;
wire   [15:0] c3_input_data_V_q0;
reg   [10:0] c3_output_data_V_address0;
reg    c3_output_data_V_ce0;
reg    c3_output_data_V_we0;
reg   [15:0] c3_output_data_V_d0;
wire   [15:0] c3_output_data_V_q0;
reg   [11:0] c3_W_data_V_address0;
reg    c3_W_data_V_ce0;
reg    c3_W_data_V_we0;
reg   [15:0] c3_W_data_V_d0;
wire   [15:0] c3_W_data_V_q0;
reg   [10:0] c3_inpad_data_V_address0;
reg    c3_inpad_data_V_ce0;
reg    c3_inpad_data_V_we0;
reg   [15:0] c3_inpad_data_V_d0;
wire   [15:0] c3_inpad_data_V_q0;
reg   [10:0] c3_relu1_input_data_address0;
reg    c3_relu1_input_data_ce0;
reg    c3_relu1_input_data_we0;
reg   [15:0] c3_relu1_input_data_d0;
wire   [15:0] c3_relu1_input_data_q0;
reg   [10:0] c3_relu1_output_dat_address0;
reg    c3_relu1_output_dat_ce0;
reg    c3_relu1_output_dat_we0;
reg   [14:0] c3_relu1_output_dat_d0;
wire   [14:0] c3_relu1_output_dat_q0;
reg   [10:0] p4_input_data_V_address0;
reg    p4_input_data_V_ce0;
reg    p4_input_data_V_we0;
reg   [15:0] p4_input_data_V_d0;
wire   [15:0] p4_input_data_V_q0;
reg   [8:0] p4_output_data_V_address0;
reg    p4_output_data_V_ce0;
reg    p4_output_data_V_we0;
reg   [15:0] p4_output_data_V_d0;
wire   [15:0] p4_output_data_V_q0;
reg   [8:0] p4_relu1_input_data_address0;
reg    p4_relu1_input_data_ce0;
reg    p4_relu1_input_data_we0;
reg   [15:0] p4_relu1_input_data_d0;
wire   [15:0] p4_relu1_input_data_q0;
reg   [8:0] p4_relu1_output_dat_address0;
reg    p4_relu1_output_dat_ce0;
reg    p4_relu1_output_dat_we0;
reg   [14:0] p4_relu1_output_dat_d0;
wire   [14:0] p4_relu1_output_dat_q0;
reg   [8:0] c5_input_data_V_address0;
reg    c5_input_data_V_ce0;
reg    c5_input_data_V_we0;
reg   [15:0] c5_input_data_V_d0;
wire   [15:0] c5_input_data_V_q0;
reg   [6:0] c5_output_data_V_address0;
reg    c5_output_data_V_ce0;
reg    c5_output_data_V_we0;
reg   [15:0] c5_output_data_V_d0;
wire   [15:0] c5_output_data_V_q0;
reg   [15:0] c5_W_data_V_address0;
reg    c5_W_data_V_ce0;
reg    c5_W_data_V_we0;
reg   [15:0] c5_W_data_V_d0;
wire   [15:0] c5_W_data_V_q0;
reg   [8:0] c5_inpad_data_V_address0;
reg    c5_inpad_data_V_ce0;
reg    c5_inpad_data_V_we0;
reg   [15:0] c5_inpad_data_V_d0;
wire   [15:0] c5_inpad_data_V_q0;
reg   [6:0] c5_relu1_input_data_address0;
reg    c5_relu1_input_data_ce0;
reg    c5_relu1_input_data_we0;
reg   [15:0] c5_relu1_input_data_d0;
wire   [15:0] c5_relu1_input_data_q0;
reg   [6:0] c5_relu1_output_dat_address0;
reg    c5_relu1_output_dat_ce0;
reg    c5_relu1_output_dat_we0;
reg   [14:0] c5_relu1_output_dat_d0;
wire   [14:0] c5_relu1_output_dat_q0;
reg   [6:0] fc6_input_data_V_address0;
reg    fc6_input_data_V_ce0;
reg    fc6_input_data_V_we0;
reg   [15:0] fc6_input_data_V_d0;
reg   [3:0] fc6_output_data_V_address0;
reg    fc6_output_data_V_ce0;
reg    fc6_output_data_V_we0;
reg   [15:0] fc6_output_data_V_d0;
reg   [10:0] fc6_W_data_V_address0;
reg    fc6_W_data_V_ce0;
reg    fc6_W_data_V_we0;
reg   [15:0] fc6_W_data_V_d0;
wire    grp_forward_3_fu_1821_ap_start;
wire    grp_forward_3_fu_1821_ap_done;
wire    grp_forward_3_fu_1821_ap_idle;
wire    grp_forward_3_fu_1821_ap_ready;
wire   [10:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_address0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0;
wire   [10:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_address0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_we0;
wire   [15:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_d0;
wire   [11:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_address0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0;
wire   [10:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0;
wire   [15:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0;
wire   [10:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0;
wire   [15:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0;
wire   [10:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0;
wire    grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0;
wire   [14:0] grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0;
wire    grp_forward_2_fu_1831_ap_start;
wire    grp_forward_2_fu_1831_ap_done;
wire    grp_forward_2_fu_1831_ap_idle;
wire    grp_forward_2_fu_1831_ap_ready;
wire   [9:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_address0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0;
wire   [12:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_address0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_we0;
wire   [15:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_d0;
wire   [7:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_address0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0;
wire   [9:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0;
wire   [15:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0;
wire   [12:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0;
wire   [15:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0;
wire   [12:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0;
wire    grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0;
wire   [14:0] grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0;
wire    grp_forward_fu_1841_ap_start;
wire    grp_forward_fu_1841_ap_done;
wire    grp_forward_fu_1841_ap_idle;
wire    grp_forward_fu_1841_ap_ready;
wire   [12:0] grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_address0;
wire    grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_ce0;
wire   [10:0] grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_address0;
wire    grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_ce0;
wire    grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_we0;
wire   [15:0] grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_d0;
wire   [10:0] grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0;
wire    grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0;
wire    grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0;
wire   [15:0] grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0;
wire   [10:0] grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0;
wire    grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0;
wire    grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0;
wire   [14:0] grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0;
wire    grp_forward_4_fu_1849_ap_start;
wire    grp_forward_4_fu_1849_ap_done;
wire    grp_forward_4_fu_1849_ap_idle;
wire    grp_forward_4_fu_1849_ap_ready;
wire   [8:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_address0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_ce0;
wire   [6:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_address0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_ce0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_we0;
wire   [15:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_d0;
wire   [15:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_address0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_ce0;
wire   [8:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0;
wire   [15:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0;
wire   [6:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0;
wire   [15:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0;
wire   [6:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0;
wire    grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0;
wire   [14:0] grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0;
wire    grp_forward_1_fu_1859_ap_start;
wire    grp_forward_1_fu_1859_ap_done;
wire    grp_forward_1_fu_1859_ap_idle;
wire    grp_forward_1_fu_1859_ap_ready;
wire   [10:0] grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_address0;
wire    grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_ce0;
wire   [8:0] grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_address0;
wire    grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_ce0;
wire    grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_we0;
wire   [15:0] grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_d0;
wire   [8:0] grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0;
wire    grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0;
wire    grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0;
wire   [15:0] grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0;
wire   [8:0] grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0;
wire    grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0;
wire    grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0;
wire   [14:0] grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0;
reg   [10:0] i_0_i_i3_i_i_reg_1058;
wire   [0:0] exitcond_i_i4_i_i_fu_1867_p2;
reg   [12:0] i_0_i_i10_i_i_reg_1069;
wire   [0:0] exitcond_i_i11_i_i_fu_1884_p2;
reg   [2:0] tmp_4_reg_1080;
wire   [0:0] exitcond_i_i15_i_i_fu_1917_p2;
wire   [0:0] tmp_8_fu_1943_p2;
reg   [6:0] phi_mul_reg_1092;
reg   [4:0] i_0_i_i14_i_i_reg_1103;
reg   [10:0] i_0_i_i_i_i_reg_1114;
wire   [0:0] exitcond_i_i_i_i_fu_1949_p2;
reg   [12:0] i_0_i_i1_i_i_i_i_reg_1125;
wire   [0:0] exitcond_i_i2_i_i_i_s_fu_1966_p2;
reg   [12:0] i_0_i_i_i_i_i_i_reg_1136;
wire   [0:0] exitcond_i_i_i_i_i_i_fu_1983_p2;
reg   [2:0] i_0_i_i_reg_1147;
wire   [0:0] tmp_121_i_fu_2057_p2;
reg   [7:0] phi_mul8_reg_1158;
reg   [4:0] i_i_reg_1170;
reg   [12:0] i_0_i_i_i_i1_reg_1181;
wire   [0:0] exitcond_i_i_i_i1_fu_2083_p2;
reg   [10:0] i_0_i_i1_i_i_reg_1192;
wire   [0:0] exitcond_i_i2_i_i_fu_2100_p2;
reg   [10:0] i_0_i_i1_i_i_i_i1_reg_1203;
wire   [0:0] exitcond_i_i2_i_i_i_1_fu_2117_p2;
reg   [10:0] i_0_i_i_i_i_i_i1_reg_1214;
wire   [0:0] exitcond_i_i_i_i_i_i_1_fu_2134_p2;
reg   [10:0] i_0_i_i3_i_i1_reg_1225;
wire   [0:0] exitcond_i_i4_i_i1_fu_2151_p2;
reg   [10:0] i_0_i_i10_i_i1_reg_1236;
wire   [0:0] exitcond_i_i11_i_i1_fu_2168_p2;
reg   [3:0] tmp_17_reg_1247;
wire   [0:0] exitcond_i_i15_i_i1_fu_2197_p2;
wire   [0:0] tmp_19_fu_2224_p2;
reg   [11:0] phi_mul1_reg_1259;
reg   [7:0] i_0_i_i14_i_i1_reg_1271;
reg   [10:0] i_0_i_i_i_i2_reg_1282;
wire   [0:0] exitcond_i_i_i_i2_fu_2230_p2;
reg   [10:0] i_0_i_i1_i_i_i_i2_reg_1293;
wire   [0:0] exitcond_i_i2_i_i_i_2_fu_2247_p2;
reg   [10:0] i_0_i_i_i_i_i_i2_reg_1304;
wire   [0:0] exitcond_i_i_i_i_i_i_2_fu_2264_p2;
reg   [4:0] i_0_i_i1_reg_1315;
wire   [0:0] tmp_119_i_fu_2342_p2;
reg   [11:0] phi_mul2_reg_1326;
reg   [7:0] i_i1_reg_1338;
reg   [10:0] i_0_i_i_i_i3_reg_1349;
wire   [0:0] exitcond_i_i_i_i3_fu_2368_p2;
reg   [8:0] i_0_i_i1_i_i1_reg_1360;
wire   [0:0] exitcond_i_i2_i_i1_fu_2385_p2;
reg   [8:0] i_0_i_i1_i_i_i_i3_reg_1371;
wire   [0:0] exitcond_i_i2_i_i_i_3_fu_2402_p2;
reg   [8:0] i_0_i_i_i_i_i_i3_reg_1382;
wire   [0:0] exitcond_i_i_i_i_i_i_3_fu_2419_p2;
reg   [8:0] i_0_i_i7_i_i2_reg_1393;
wire   [0:0] exitcond_i_i8_i_i2_fu_2436_p2;
reg   [6:0] i_0_i_i18_i_i_reg_1404;
wire   [0:0] exitcond_i_i19_i_i_fu_2453_p2;
reg   [6:0] tmp_32_reg_1415;
wire   [0:0] exitcond_i_i4_i_i2_fu_2482_p2;
wire   [0:0] tmp_34_fu_2509_p2;
reg   [15:0] phi_mul3_reg_1427;
reg   [8:0] i_0_i_i3_i_i2_reg_1439;
reg   [8:0] i_0_i_i_i_i4_reg_1450;
wire   [0:0] exitcond_i_i_i_i4_fu_2515_p2;
reg   [6:0] i_0_i_i1_i_i_i_i4_reg_1461;
wire   [0:0] exitcond_i_i2_i_i_i_4_fu_2532_p2;
reg   [6:0] i_0_i_i_i_i_i_i4_reg_1472;
wire   [0:0] exitcond_i_i_i_i_i_i_4_fu_2549_p2;
reg   [6:0] i_0_i_i2_reg_1483;
wire   [0:0] tmp_117_i_fu_2620_p2;
reg   [15:0] phi_mul4_reg_1494;
reg   [8:0] i_i2_reg_1506;
reg   [6:0] i_0_i_i3_i_i3_reg_1517;
wire   [0:0] exitcond_i_i4_i_i3_fu_2646_p2;
reg   [3:0] i_0_i_i10_i_i2_reg_1528;
wire   [0:0] exitcond_i_i11_i_i2_fu_2663_p2;
reg   [3:0] tmp_43_reg_1539;
wire   [0:0] exitcond_i_i_i_i5_fu_2716_p2;
wire   [0:0] tmp_48_fu_2742_p2;
reg   [6:0] i_0_i_i_i_i5_reg_1551;
reg   [3:0] i_0_i_i3_reg_1562;
wire   [0:0] tmp_115_i_fu_2829_p2;
reg   [6:0] i_i3_reg_1574;
reg   [10:0] idx_reg_1585;
reg   [2:0] i37_reg_1596;
reg   [7:0] phi_mul5_reg_1607;
reg   [4:0] j_reg_1619;
wire   [0:0] exitcond3_fu_2877_p2;
reg   [4:0] i1_reg_1630;
reg   [11:0] phi_mul6_reg_1641;
reg   [7:0] j2_reg_1653;
wire   [0:0] exitcond4_fu_2922_p2;
reg   [6:0] i3_reg_1664;
reg   [15:0] phi_mul7_reg_1675;
reg   [8:0] j4_reg_1687;
wire   [0:0] exitcond6_fu_2967_p2;
reg   [3:0] i5_reg_1698;
reg   [6:0] j6_reg_1709;
reg   [12:0] p_i0_0_i_reg_1720;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state59;
reg   [10:0] p_i0_0_i1_reg_1731;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state62;
reg   [10:0] p_i0_0_i2_reg_1742;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state65;
reg   [8:0] p_i0_0_i3_reg_1753;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state68;
reg   [6:0] p_i0_0_i4_reg_1764;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state71;
reg   [3:0] p_z_assign_reg_1775;
reg   [15:0] p_Val2_0_i_reg_1786;
reg   [6:0] p_z_assign_1_0_i_reg_1799;
reg   [3:0] idx7_reg_1810;
reg    grp_forward_3_fu_1821_ap_start_reg;
reg    grp_forward_2_fu_1831_ap_start_reg;
reg    grp_forward_fu_1841_ap_start_reg;
reg    grp_forward_4_fu_1849_ap_start_reg;
reg    grp_forward_1_fu_1859_ap_start_reg;
wire   [63:0] tmp_fu_1879_p1;
wire   [63:0] tmp_s_fu_1896_p1;
wire   [63:0] tmp_10_cast_fu_1938_p1;
wire   [63:0] tmp_2_fu_1961_p1;
wire   [63:0] tmp_3_fu_1978_p1;
wire   [63:0] tmp_6_fu_1995_p1;
wire   [63:0] tmp_7_fu_2018_p1;
wire   [63:0] tmp_17_cast_fu_2078_p1;
wire   [63:0] tmp_10_fu_2095_p1;
wire   [63:0] tmp_12_fu_2112_p1;
wire   [63:0] tmp_13_fu_2129_p1;
wire   [63:0] tmp_14_fu_2146_p1;
wire   [63:0] tmp_15_fu_2163_p1;
wire   [63:0] tmp_16_fu_2180_p1;
wire   [63:0] tmp_29_cast_fu_2219_p1;
wire   [63:0] tmp_21_fu_2242_p1;
wire   [63:0] tmp_22_fu_2259_p1;
wire   [63:0] tmp_23_fu_2276_p1;
wire   [63:0] tmp_24_fu_2299_p1;
wire   [63:0] tmp_36_cast_fu_2363_p1;
wire   [63:0] tmp_25_fu_2380_p1;
wire   [63:0] tmp_27_fu_2397_p1;
wire   [63:0] tmp_28_fu_2414_p1;
wire   [63:0] tmp_29_fu_2431_p1;
wire   [63:0] tmp_30_fu_2448_p1;
wire   [63:0] tmp_31_fu_2465_p1;
wire   [63:0] tmp_48_cast_fu_2504_p1;
wire   [63:0] tmp_36_fu_2527_p1;
wire   [63:0] tmp_37_fu_2544_p1;
wire   [63:0] tmp_38_fu_2561_p1;
wire   [63:0] tmp_39_fu_2584_p1;
wire   [63:0] tmp_55_cast_fu_2641_p1;
wire   [63:0] tmp_40_fu_2658_p1;
wire   [63:0] tmp_42_fu_2675_p1;
wire  signed [63:0] tmp_64_cast_fu_2737_p1;
wire   [63:0] tmp_50_fu_2760_p1;
wire  signed [63:0] tmp_70_cast_fu_2849_p1;
wire   [63:0] tmp_56_fu_2866_p1;
wire   [63:0] tmp_76_cast_fu_2911_p1;
wire   [63:0] tmp_80_cast_fu_2956_p1;
wire   [63:0] tmp_85_cast_fu_3001_p1;
wire  signed [63:0] tmp_88_cast_fu_3069_p1;
wire  signed [63:0] tmp_97_cast_fu_3231_p1;
wire   [63:0] tmp_132_0_i_fu_3217_p1;
wire   [63:0] tmp_73_fu_3271_p1;
wire   [7:0] tmp_9_cast_fu_1929_p1;
wire   [7:0] tmp_1_fu_1933_p2;
wire   [2:0] tmp_9_fu_2029_p3;
wire   [2:0] tmp1_fu_2037_p2;
wire   [2:0] tmp_i_fu_2047_p0;
wire   [2:0] tmp_i_fu_2047_p1;
wire   [5:0] i_i_cast_fu_2053_p1;
wire   [7:0] tmp_122_i_cast_fu_2068_p1;
wire   [7:0] tmp_11_fu_2072_p2;
wire   [11:0] tmp_28_cast_fu_2209_p1;
wire   [11:0] tmp_20_fu_2213_p2;
wire  signed [2:0] c3_W_size_z_load_cas_fu_2314_p1;
wire   [2:0] tmp2_fu_2322_p0;
wire   [2:0] tmp2_fu_2322_p1;
wire   [5:0] tmp2_fu_2322_p2;
wire   [5:0] tmp_i1_fu_2332_p0;
wire   [2:0] tmp_i1_fu_2332_p1;
wire   [8:0] i_i1_cast_fu_2338_p1;
wire   [11:0] tmp_120_i_cast_fu_2353_p1;
wire   [11:0] tmp_26_fu_2357_p2;
wire   [15:0] tmp_47_cast_fu_2494_p1;
wire   [15:0] tmp_35_fu_2498_p2;
wire   [2:0] tmp3_fu_2600_p0;
wire   [4:0] tmp3_fu_2600_p1;
wire   [7:0] tmp3_fu_2600_p2;
wire   [7:0] tmp_i2_fu_2610_p0;
wire   [2:0] tmp_i2_fu_2610_p1;
wire   [9:0] i_i2_cast_fu_2616_p1;
wire   [15:0] tmp_118_i_cast_fu_2631_p1;
wire   [15:0] tmp_41_fu_2635_p2;
wire   [10:0] tmp_45_fu_2686_p3;
wire   [6:0] tmp_46_fu_2698_p3;
wire   [11:0] p_shl_cast_fu_2694_p1;
wire   [11:0] p_shl1_cast_fu_2706_p1;
wire   [11:0] tmp_63_cast_fu_2728_p1;
wire   [11:0] tmp_49_fu_2732_p2;
wire   [10:0] tmp_51_fu_2767_p3;
wire   [6:0] tmp_52_fu_2779_p3;
wire   [11:0] p_shl2_cast_fu_2775_p1;
wire   [11:0] p_shl3_cast_fu_2787_p1;
wire  signed [6:0] fc6_W_size_z_load_ca_fu_2797_p1;
wire   [6:0] tmp_54_fu_2801_p3;
wire   [6:0] tmp4_fu_2809_p2;
wire   [6:0] tmp_55_fu_2815_p3;
wire   [11:0] tmp_116_i_cast_fu_2840_p1;
wire   [11:0] tmp_57_fu_2844_p2;
wire   [7:0] tmp_75_cast_fu_2901_p1;
wire   [7:0] tmp_58_fu_2905_p2;
wire   [11:0] tmp_79_cast_fu_2946_p1;
wire   [11:0] tmp_59_fu_2950_p2;
wire   [15:0] tmp_84_cast_fu_2991_p1;
wire   [15:0] tmp_63_fu_2995_p2;
wire   [10:0] tmp_60_fu_3018_p3;
wire   [6:0] tmp_61_fu_3030_p3;
wire   [11:0] p_shl4_cast_fu_3026_p1;
wire   [11:0] p_shl5_cast_fu_3038_p1;
wire   [11:0] tmp_87_cast_fu_3060_p1;
wire   [11:0] tmp_65_fu_3064_p2;
wire   [10:0] tmp_70_fu_3175_p3;
wire   [6:0] tmp_71_fu_3187_p3;
wire   [11:0] p_shl6_cast_fu_3183_p1;
wire   [11:0] p_shl7_cast_fu_3195_p1;
wire   [11:0] tmp_132_0_i_cast_fu_3222_p1;
wire   [11:0] tmp_74_fu_3226_p2;
wire  signed [27:0] grp_fu_3276_p3;
wire   [27:0] grp_fu_3276_p2;
reg   [77:0] ap_NS_fsm;
wire   [5:0] tmp2_fu_2322_p00;
wire   [5:0] tmp2_fu_2322_p10;
wire   [7:0] tmp3_fu_2600_p00;
wire   [7:0] tmp3_fu_2600_p10;
wire   [8:0] tmp_i1_fu_2332_p00;
wire   [8:0] tmp_i1_fu_2332_p10;
wire   [9:0] tmp_i2_fu_2610_p00;
wire   [9:0] tmp_i2_fu_2610_p10;
wire   [5:0] tmp_i_fu_2047_p00;
wire   [5:0] tmp_i_fu_2047_p10;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 78'd1;
#0 inStream_V_V_0_sel_rd = 1'b0;
#0 inStream_V_V_0_sel_wr = 1'b0;
#0 inStream_V_V_0_state = 2'd0;
#0 outStream_V_V_1_sel_rd = 1'b0;
#0 outStream_V_V_1_sel_wr = 1'b0;
#0 outStream_V_V_1_state = 2'd0;
#0 c1w_V_V_0_sel_rd = 1'b0;
#0 c1w_V_V_0_sel_wr = 1'b0;
#0 c1w_V_V_0_state = 2'd0;
#0 c3w_V_V_0_sel_rd = 1'b0;
#0 c3w_V_V_0_sel_wr = 1'b0;
#0 c3w_V_V_0_state = 2'd0;
#0 c5w_V_V_0_sel_rd = 1'b0;
#0 c5w_V_V_0_sel_wr = 1'b0;
#0 c5w_V_V_0_state = 2'd0;
#0 fcw_V_V_0_sel_rd = 1'b0;
#0 fcw_V_V_0_sel_wr = 1'b0;
#0 fcw_V_V_0_state = 2'd0;
#0 grp_forward_3_fu_1821_ap_start_reg = 1'b0;
#0 grp_forward_2_fu_1831_ap_start_reg = 1'b0;
#0 grp_forward_fu_1841_ap_start_reg = 1'b0;
#0 grp_forward_4_fu_1849_ap_start_reg = 1'b0;
#0 grp_forward_1_fu_1859_ap_start_reg = 1'b0;
end

lenet_c1_W_size_x #(
    .DataWidth( 3 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
c1_W_size_x_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_W_size_x_address0),
    .ce0(c1_W_size_x_ce0),
    .q0(c1_W_size_x_q0)
);

lenet_c1_W_size_x #(
    .DataWidth( 3 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
c1_W_size_y_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_W_size_y_address0),
    .ce0(c1_W_size_y_ce0),
    .q0(c1_W_size_y_q0)
);

lenet_c1_W_size_z #(
    .DataWidth( 1 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
c1_W_size_z_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_W_size_z_address0),
    .ce0(c1_W_size_z_ce0),
    .q0(c1_W_size_z_q0)
);

lenet_c3_W_size_x #(
    .DataWidth( 3 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
c3_W_size_x_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_W_size_x_address0),
    .ce0(c3_W_size_x_ce0),
    .q0(c3_W_size_x_q0)
);

lenet_c3_W_size_x #(
    .DataWidth( 3 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
c3_W_size_y_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_W_size_y_address0),
    .ce0(c3_W_size_y_ce0),
    .q0(c3_W_size_y_q0)
);

lenet_c3_W_size_z #(
    .DataWidth( 2 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
c3_W_size_z_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_W_size_z_address0),
    .ce0(c3_W_size_z_ce0),
    .q0(c3_W_size_z_q0)
);

lenet_c5_W_size_x #(
    .DataWidth( 3 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
c5_W_size_x_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_W_size_x_address0),
    .ce0(c5_W_size_x_ce0),
    .q0(c5_W_size_x_q0)
);

lenet_c5_W_size_x #(
    .DataWidth( 3 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
c5_W_size_y_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_W_size_y_address0),
    .ce0(c5_W_size_y_ce0),
    .q0(c5_W_size_y_q0)
);

lenet_c5_W_size_z #(
    .DataWidth( 5 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
c5_W_size_z_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_W_size_z_address0),
    .ce0(c5_W_size_z_ce0),
    .q0(c5_W_size_z_q0)
);

lenet_fc6_W_size_x #(
    .DataWidth( 1 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc6_W_size_x_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc6_W_size_x_address0),
    .ce0(fc6_W_size_x_ce0),
    .q0(fc6_W_size_x_q0)
);

lenet_fc6_W_size_x #(
    .DataWidth( 1 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc6_W_size_y_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc6_W_size_y_address0),
    .ce0(fc6_W_size_y_ce0),
    .q0(fc6_W_size_y_q0)
);

lenet_fc6_W_size_z #(
    .DataWidth( 4 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc6_W_size_z_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc6_W_size_z_address0),
    .ce0(fc6_W_size_z_ce0),
    .q0(fc6_W_size_z_q0)
);

lenet_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
lenet_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(32'd0),
    .start(start)
);

lenet_c1_input_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
c1_input_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_input_data_V_address0),
    .ce0(c1_input_data_V_ce0),
    .we0(c1_input_data_V_we0),
    .d0(c1_input_data_V_d0),
    .q0(c1_input_data_V_q0)
);

lenet_c1_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
c1_output_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_output_data_V_address0),
    .ce0(c1_output_data_V_ce0),
    .we0(c1_output_data_V_we0),
    .d0(c1_output_data_V_d0),
    .q0(c1_output_data_V_q0)
);

lenet_c1_W_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 150 ),
    .AddressWidth( 8 ))
c1_W_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_W_data_V_address0),
    .ce0(c1_W_data_V_ce0),
    .we0(c1_W_data_V_we0),
    .d0(c1_W_data_V_d0),
    .q0(c1_W_data_V_q0)
);

lenet_c1_input_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
c1_inpad_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_inpad_data_V_address0),
    .ce0(c1_inpad_data_V_ce0),
    .we0(c1_inpad_data_V_we0),
    .d0(c1_inpad_data_V_d0),
    .q0(c1_inpad_data_V_q0)
);

lenet_c1_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
c1_relu1_input_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_relu1_input_data_address0),
    .ce0(c1_relu1_input_data_ce0),
    .we0(c1_relu1_input_data_we0),
    .d0(c1_relu1_input_data_d0),
    .q0(c1_relu1_input_data_q0)
);

lenet_c1_relu1_output_dat #(
    .DataWidth( 15 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
c1_relu1_output_dat_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c1_relu1_output_dat_address0),
    .ce0(c1_relu1_output_dat_ce0),
    .we0(c1_relu1_output_dat_we0),
    .d0(c1_relu1_output_dat_d0),
    .q0(c1_relu1_output_dat_q0)
);

lenet_c1_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 4704 ),
    .AddressWidth( 13 ))
p2_input_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p2_input_data_V_address0),
    .ce0(p2_input_data_V_ce0),
    .we0(p2_input_data_V_we0),
    .d0(p2_input_data_V_d0),
    .q0(p2_input_data_V_q0)
);

lenet_p2_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1176 ),
    .AddressWidth( 11 ))
p2_output_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p2_output_data_V_address0),
    .ce0(p2_output_data_V_ce0),
    .we0(p2_output_data_V_we0),
    .d0(p2_output_data_V_d0),
    .q0(p2_output_data_V_q0)
);

lenet_p2_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1176 ),
    .AddressWidth( 11 ))
p2_relu1_input_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p2_relu1_input_data_address0),
    .ce0(p2_relu1_input_data_ce0),
    .we0(p2_relu1_input_data_we0),
    .d0(p2_relu1_input_data_d0),
    .q0(p2_relu1_input_data_q0)
);

lenet_p2_relu1_output_dat #(
    .DataWidth( 15 ),
    .AddressRange( 1176 ),
    .AddressWidth( 11 ))
p2_relu1_output_dat_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p2_relu1_output_dat_address0),
    .ce0(p2_relu1_output_dat_ce0),
    .we0(p2_relu1_output_dat_we0),
    .d0(p2_relu1_output_dat_d0),
    .q0(p2_relu1_output_dat_q0)
);

lenet_p2_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1176 ),
    .AddressWidth( 11 ))
c3_input_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_input_data_V_address0),
    .ce0(c3_input_data_V_ce0),
    .we0(c3_input_data_V_we0),
    .d0(c3_input_data_V_d0),
    .q0(c3_input_data_V_q0)
);

lenet_c3_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
c3_output_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_output_data_V_address0),
    .ce0(c3_output_data_V_ce0),
    .we0(c3_output_data_V_we0),
    .d0(c3_output_data_V_d0),
    .q0(c3_output_data_V_q0)
);

lenet_c3_W_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 2400 ),
    .AddressWidth( 12 ))
c3_W_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_W_data_V_address0),
    .ce0(c3_W_data_V_ce0),
    .we0(c3_W_data_V_we0),
    .d0(c3_W_data_V_d0),
    .q0(c3_W_data_V_q0)
);

lenet_p2_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1176 ),
    .AddressWidth( 11 ))
c3_inpad_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_inpad_data_V_address0),
    .ce0(c3_inpad_data_V_ce0),
    .we0(c3_inpad_data_V_we0),
    .d0(c3_inpad_data_V_d0),
    .q0(c3_inpad_data_V_q0)
);

lenet_c3_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
c3_relu1_input_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_relu1_input_data_address0),
    .ce0(c3_relu1_input_data_ce0),
    .we0(c3_relu1_input_data_we0),
    .d0(c3_relu1_input_data_d0),
    .q0(c3_relu1_input_data_q0)
);

lenet_c3_relu1_output_dat #(
    .DataWidth( 15 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
c3_relu1_output_dat_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c3_relu1_output_dat_address0),
    .ce0(c3_relu1_output_dat_ce0),
    .we0(c3_relu1_output_dat_we0),
    .d0(c3_relu1_output_dat_d0),
    .q0(c3_relu1_output_dat_q0)
);

lenet_c3_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
p4_input_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p4_input_data_V_address0),
    .ce0(p4_input_data_V_ce0),
    .we0(p4_input_data_V_we0),
    .d0(p4_input_data_V_d0),
    .q0(p4_input_data_V_q0)
);

lenet_p4_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
p4_output_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p4_output_data_V_address0),
    .ce0(p4_output_data_V_ce0),
    .we0(p4_output_data_V_we0),
    .d0(p4_output_data_V_d0),
    .q0(p4_output_data_V_q0)
);

lenet_p4_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
p4_relu1_input_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p4_relu1_input_data_address0),
    .ce0(p4_relu1_input_data_ce0),
    .we0(p4_relu1_input_data_we0),
    .d0(p4_relu1_input_data_d0),
    .q0(p4_relu1_input_data_q0)
);

lenet_p4_relu1_output_dat #(
    .DataWidth( 15 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
p4_relu1_output_dat_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(p4_relu1_output_dat_address0),
    .ce0(p4_relu1_output_dat_ce0),
    .we0(p4_relu1_output_dat_we0),
    .d0(p4_relu1_output_dat_d0),
    .q0(p4_relu1_output_dat_q0)
);

lenet_p4_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
c5_input_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_input_data_V_address0),
    .ce0(c5_input_data_V_ce0),
    .we0(c5_input_data_V_we0),
    .d0(c5_input_data_V_d0),
    .q0(c5_input_data_V_q0)
);

lenet_c5_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
c5_output_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_output_data_V_address0),
    .ce0(c5_output_data_V_ce0),
    .we0(c5_output_data_V_we0),
    .d0(c5_output_data_V_d0),
    .q0(c5_output_data_V_q0)
);

lenet_c5_W_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 48000 ),
    .AddressWidth( 16 ))
c5_W_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_W_data_V_address0),
    .ce0(c5_W_data_V_ce0),
    .we0(c5_W_data_V_we0),
    .d0(c5_W_data_V_d0),
    .q0(c5_W_data_V_q0)
);

lenet_p4_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
c5_inpad_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_inpad_data_V_address0),
    .ce0(c5_inpad_data_V_ce0),
    .we0(c5_inpad_data_V_we0),
    .d0(c5_inpad_data_V_d0),
    .q0(c5_inpad_data_V_q0)
);

lenet_c5_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
c5_relu1_input_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_relu1_input_data_address0),
    .ce0(c5_relu1_input_data_ce0),
    .we0(c5_relu1_input_data_we0),
    .d0(c5_relu1_input_data_d0),
    .q0(c5_relu1_input_data_q0)
);

lenet_c5_relu1_output_dat #(
    .DataWidth( 15 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
c5_relu1_output_dat_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c5_relu1_output_dat_address0),
    .ce0(c5_relu1_output_dat_ce0),
    .we0(c5_relu1_output_dat_we0),
    .d0(c5_relu1_output_dat_d0),
    .q0(c5_relu1_output_dat_q0)
);

lenet_c5_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
fc6_input_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc6_input_data_V_address0),
    .ce0(fc6_input_data_V_ce0),
    .we0(fc6_input_data_V_we0),
    .d0(fc6_input_data_V_d0),
    .q0(fc6_input_data_V_q0)
);

lenet_fc6_output_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc6_output_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc6_output_data_V_address0),
    .ce0(fc6_output_data_V_ce0),
    .we0(fc6_output_data_V_we0),
    .d0(fc6_output_data_V_d0),
    .q0(fc6_output_data_V_q0)
);

lenet_fc6_W_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 1200 ),
    .AddressWidth( 11 ))
fc6_W_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc6_W_data_V_address0),
    .ce0(fc6_W_data_V_ce0),
    .we0(fc6_W_data_V_we0),
    .d0(fc6_W_data_V_d0),
    .q0(fc6_W_data_V_q0)
);

forward_3 grp_forward_3_fu_1821(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_forward_3_fu_1821_ap_start),
    .ap_done(grp_forward_3_fu_1821_ap_done),
    .ap_idle(grp_forward_3_fu_1821_ap_idle),
    .ap_ready(grp_forward_3_fu_1821_ap_ready),
    .conv_layer_5_16_1_0_14_14_6_input_data_V_address0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_input_data_V_ce0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_input_data_V_q0(c3_input_data_V_q0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_address0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_ce0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_we0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_we0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_d0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_d0),
    .conv_layer_5_16_1_0_14_14_6_output_data_V_q0(c3_output_data_V_q0),
    .conv_layer_5_16_1_0_14_14_6_W_data_V_address0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_W_data_V_ce0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_W_data_V_q0(c3_W_data_V_q0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0),
    .conv_layer_5_16_1_0_14_14_6_inpad_data_V_q0(c3_inpad_data_V_q0),
    .conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0),
    .conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0),
    .conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_q0(c3_relu1_input_data_q0),
    .conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0),
    .conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0),
    .conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0),
    .conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0(grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0),
    .conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_q0(c3_relu1_output_dat_q0)
);

forward_2 grp_forward_2_fu_1831(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_forward_2_fu_1831_ap_start),
    .ap_done(grp_forward_2_fu_1831_ap_done),
    .ap_idle(grp_forward_2_fu_1831_ap_idle),
    .ap_ready(grp_forward_2_fu_1831_ap_ready),
    .conv_layer_5_6_1_0_32_32_1_input_data_V_address0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_input_data_V_ce0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_input_data_V_q0(c1_input_data_V_q0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_address0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_ce0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_we0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_we0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_d0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_d0),
    .conv_layer_5_6_1_0_32_32_1_output_data_V_q0(c1_output_data_V_q0),
    .conv_layer_5_6_1_0_32_32_1_W_data_V_address0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_W_data_V_ce0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_W_data_V_q0(c1_W_data_V_q0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0),
    .conv_layer_5_6_1_0_32_32_1_inpad_data_V_q0(c1_inpad_data_V_q0),
    .conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0),
    .conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0),
    .conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_q0(c1_relu1_input_data_q0),
    .conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0),
    .conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0),
    .conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0),
    .conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0(grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0),
    .conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_q0(c1_relu1_output_dat_q0)
);

forward grp_forward_fu_1841(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_forward_fu_1841_ap_start),
    .ap_done(grp_forward_fu_1841_ap_done),
    .ap_idle(grp_forward_fu_1841_ap_idle),
    .ap_ready(grp_forward_fu_1841_ap_ready),
    .pool_layer_2_2_1_28_28_6_input_data_V_address0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_address0),
    .pool_layer_2_2_1_28_28_6_input_data_V_ce0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_ce0),
    .pool_layer_2_2_1_28_28_6_input_data_V_q0(p2_input_data_V_q0),
    .pool_layer_2_2_1_28_28_6_output_data_V_address0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_address0),
    .pool_layer_2_2_1_28_28_6_output_data_V_ce0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_ce0),
    .pool_layer_2_2_1_28_28_6_output_data_V_we0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_we0),
    .pool_layer_2_2_1_28_28_6_output_data_V_d0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_d0),
    .pool_layer_2_2_1_28_28_6_output_data_V_q0(p2_output_data_V_q0),
    .pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0),
    .pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0),
    .pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0),
    .pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0),
    .pool_layer_2_2_1_28_28_6_relu1_input_data_V_q0(p2_relu1_input_data_q0),
    .pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0),
    .pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0),
    .pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0),
    .pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0(grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0),
    .pool_layer_2_2_1_28_28_6_relu1_output_data_V_q0(p2_relu1_output_dat_q0)
);

forward_4 grp_forward_4_fu_1849(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_forward_4_fu_1849_ap_start),
    .ap_done(grp_forward_4_fu_1849_ap_done),
    .ap_idle(grp_forward_4_fu_1849_ap_idle),
    .ap_ready(grp_forward_4_fu_1849_ap_ready),
    .conv_layer_5_120_1_0_5_5_16_input_data_V_address0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_address0),
    .conv_layer_5_120_1_0_5_5_16_input_data_V_ce0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_ce0),
    .conv_layer_5_120_1_0_5_5_16_input_data_V_q0(c5_input_data_V_q0),
    .conv_layer_5_120_1_0_5_5_16_output_data_V_address0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_address0),
    .conv_layer_5_120_1_0_5_5_16_output_data_V_ce0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_ce0),
    .conv_layer_5_120_1_0_5_5_16_output_data_V_we0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_we0),
    .conv_layer_5_120_1_0_5_5_16_output_data_V_d0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_d0),
    .conv_layer_5_120_1_0_5_5_16_output_data_V_q0(c5_output_data_V_q0),
    .conv_layer_5_120_1_0_5_5_16_W_data_V_address0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_address0),
    .conv_layer_5_120_1_0_5_5_16_W_data_V_ce0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_ce0),
    .conv_layer_5_120_1_0_5_5_16_W_data_V_q0(c5_W_data_V_q0),
    .conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0),
    .conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0),
    .conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0),
    .conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0),
    .conv_layer_5_120_1_0_5_5_16_inpad_data_V_q0(c5_inpad_data_V_q0),
    .conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0),
    .conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0),
    .conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0),
    .conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0),
    .conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_q0(c5_relu1_input_data_q0),
    .conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0),
    .conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0),
    .conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0),
    .conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0(grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0),
    .conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_q0(c5_relu1_output_dat_q0)
);

forward_1 grp_forward_1_fu_1859(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_forward_1_fu_1859_ap_start),
    .ap_done(grp_forward_1_fu_1859_ap_done),
    .ap_idle(grp_forward_1_fu_1859_ap_idle),
    .ap_ready(grp_forward_1_fu_1859_ap_ready),
    .pool_layer_2_2_1_10_10_16_input_data_V_address0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_address0),
    .pool_layer_2_2_1_10_10_16_input_data_V_ce0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_ce0),
    .pool_layer_2_2_1_10_10_16_input_data_V_q0(p4_input_data_V_q0),
    .pool_layer_2_2_1_10_10_16_output_data_V_address0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_address0),
    .pool_layer_2_2_1_10_10_16_output_data_V_ce0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_ce0),
    .pool_layer_2_2_1_10_10_16_output_data_V_we0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_we0),
    .pool_layer_2_2_1_10_10_16_output_data_V_d0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_d0),
    .pool_layer_2_2_1_10_10_16_output_data_V_q0(p4_output_data_V_q0),
    .pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0),
    .pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0),
    .pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0),
    .pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0),
    .pool_layer_2_2_1_10_10_16_relu1_input_data_V_q0(p4_relu1_input_data_q0),
    .pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0),
    .pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0),
    .pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0),
    .pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0(grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0),
    .pool_layer_2_2_1_10_10_16_relu1_output_data_V_q0(p4_relu1_output_dat_q0)
);

lenet_mac_muladd_16s_16s_28ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
lenet_mac_muladd_16s_16s_28ns_28_1_1_U53(
    .din0(fc6_input_data_V_lo_reg_3971),
    .din1(fc6_W_data_V_load_reg_3976),
    .din2(grp_fu_3276_p2),
    .dout(grp_fu_3276_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c1w_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((c1w_V_V_0_ack_out == 1'b1) & (c1w_V_V_0_vld_out == 1'b1))) begin
            c1w_V_V_0_sel_rd <= ~c1w_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c1w_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((c1w_V_V_0_ack_in == 1'b1) & (c1w_V_V_0_vld_in == 1'b1))) begin
            c1w_V_V_0_sel_wr <= ~c1w_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c1w_V_V_0_state <= 2'd0;
    end else begin
        if ((((c1w_V_V_0_vld_in == 1'b0) & (c1w_V_V_0_state == 2'd2)) | ((c1w_V_V_0_vld_in == 1'b0) & (c1w_V_V_0_ack_out == 1'b1) & (c1w_V_V_0_state == 2'd3)))) begin
            c1w_V_V_0_state <= 2'd2;
        end else if ((((c1w_V_V_0_ack_out == 1'b0) & (c1w_V_V_0_state == 2'd1)) | ((c1w_V_V_0_ack_out == 1'b0) & (c1w_V_V_0_vld_in == 1'b1) & (c1w_V_V_0_state == 2'd3)))) begin
            c1w_V_V_0_state <= 2'd1;
        end else if (((~((c1w_V_V_0_vld_in == 1'b0) & (c1w_V_V_0_ack_out == 1'b1)) & ~((c1w_V_V_0_ack_out == 1'b0) & (c1w_V_V_0_vld_in == 1'b1)) & (c1w_V_V_0_state == 2'd3)) | ((c1w_V_V_0_ack_out == 1'b1) & (c1w_V_V_0_state == 2'd1)) | ((c1w_V_V_0_vld_in == 1'b1) & (c1w_V_V_0_state == 2'd2)))) begin
            c1w_V_V_0_state <= 2'd3;
        end else begin
            c1w_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c3w_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((c3w_V_V_0_ack_out == 1'b1) & (c3w_V_V_0_vld_out == 1'b1))) begin
            c3w_V_V_0_sel_rd <= ~c3w_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c3w_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((c3w_V_V_0_ack_in == 1'b1) & (c3w_V_V_0_vld_in == 1'b1))) begin
            c3w_V_V_0_sel_wr <= ~c3w_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c3w_V_V_0_state <= 2'd0;
    end else begin
        if ((((c3w_V_V_0_vld_in == 1'b0) & (c3w_V_V_0_state == 2'd2)) | ((c3w_V_V_0_vld_in == 1'b0) & (c3w_V_V_0_ack_out == 1'b1) & (c3w_V_V_0_state == 2'd3)))) begin
            c3w_V_V_0_state <= 2'd2;
        end else if ((((c3w_V_V_0_ack_out == 1'b0) & (c3w_V_V_0_state == 2'd1)) | ((c3w_V_V_0_ack_out == 1'b0) & (c3w_V_V_0_vld_in == 1'b1) & (c3w_V_V_0_state == 2'd3)))) begin
            c3w_V_V_0_state <= 2'd1;
        end else if (((~((c3w_V_V_0_vld_in == 1'b0) & (c3w_V_V_0_ack_out == 1'b1)) & ~((c3w_V_V_0_ack_out == 1'b0) & (c3w_V_V_0_vld_in == 1'b1)) & (c3w_V_V_0_state == 2'd3)) | ((c3w_V_V_0_ack_out == 1'b1) & (c3w_V_V_0_state == 2'd1)) | ((c3w_V_V_0_vld_in == 1'b1) & (c3w_V_V_0_state == 2'd2)))) begin
            c3w_V_V_0_state <= 2'd3;
        end else begin
            c3w_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c5w_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((c5w_V_V_0_ack_out == 1'b1) & (c5w_V_V_0_vld_out == 1'b1))) begin
            c5w_V_V_0_sel_rd <= ~c5w_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c5w_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((c5w_V_V_0_ack_in == 1'b1) & (c5w_V_V_0_vld_in == 1'b1))) begin
            c5w_V_V_0_sel_wr <= ~c5w_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c5w_V_V_0_state <= 2'd0;
    end else begin
        if ((((c5w_V_V_0_vld_in == 1'b0) & (c5w_V_V_0_state == 2'd2)) | ((c5w_V_V_0_vld_in == 1'b0) & (c5w_V_V_0_ack_out == 1'b1) & (c5w_V_V_0_state == 2'd3)))) begin
            c5w_V_V_0_state <= 2'd2;
        end else if ((((c5w_V_V_0_ack_out == 1'b0) & (c5w_V_V_0_state == 2'd1)) | ((c5w_V_V_0_ack_out == 1'b0) & (c5w_V_V_0_vld_in == 1'b1) & (c5w_V_V_0_state == 2'd3)))) begin
            c5w_V_V_0_state <= 2'd1;
        end else if (((~((c5w_V_V_0_vld_in == 1'b0) & (c5w_V_V_0_ack_out == 1'b1)) & ~((c5w_V_V_0_ack_out == 1'b0) & (c5w_V_V_0_vld_in == 1'b1)) & (c5w_V_V_0_state == 2'd3)) | ((c5w_V_V_0_ack_out == 1'b1) & (c5w_V_V_0_state == 2'd1)) | ((c5w_V_V_0_vld_in == 1'b1) & (c5w_V_V_0_state == 2'd2)))) begin
            c5w_V_V_0_state <= 2'd3;
        end else begin
            c5w_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        fcw_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((fcw_V_V_0_ack_out == 1'b1) & (fcw_V_V_0_vld_out == 1'b1))) begin
            fcw_V_V_0_sel_rd <= ~fcw_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        fcw_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((fcw_V_V_0_ack_in == 1'b1) & (fcw_V_V_0_vld_in == 1'b1))) begin
            fcw_V_V_0_sel_wr <= ~fcw_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        fcw_V_V_0_state <= 2'd0;
    end else begin
        if ((((fcw_V_V_0_vld_in == 1'b0) & (fcw_V_V_0_state == 2'd2)) | ((fcw_V_V_0_vld_in == 1'b0) & (fcw_V_V_0_ack_out == 1'b1) & (fcw_V_V_0_state == 2'd3)))) begin
            fcw_V_V_0_state <= 2'd2;
        end else if ((((fcw_V_V_0_ack_out == 1'b0) & (fcw_V_V_0_state == 2'd1)) | ((fcw_V_V_0_ack_out == 1'b0) & (fcw_V_V_0_vld_in == 1'b1) & (fcw_V_V_0_state == 2'd3)))) begin
            fcw_V_V_0_state <= 2'd1;
        end else if (((~((fcw_V_V_0_vld_in == 1'b0) & (fcw_V_V_0_ack_out == 1'b1)) & ~((fcw_V_V_0_ack_out == 1'b0) & (fcw_V_V_0_vld_in == 1'b1)) & (fcw_V_V_0_state == 2'd3)) | ((fcw_V_V_0_ack_out == 1'b1) & (fcw_V_V_0_state == 2'd1)) | ((fcw_V_V_0_vld_in == 1'b1) & (fcw_V_V_0_state == 2'd2)))) begin
            fcw_V_V_0_state <= 2'd3;
        end else begin
            fcw_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_forward_1_fu_1859_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state64) & (tmp_67_fu_3113_p2 == 1'd1))) begin
            grp_forward_1_fu_1859_ap_start_reg <= 1'b1;
        end else if ((grp_forward_1_fu_1859_ap_ready == 1'b1)) begin
            grp_forward_1_fu_1859_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_forward_2_fu_1831_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state55) & (exitcond8_fu_3006_p2 == 1'd1))) begin
            grp_forward_2_fu_1831_ap_start_reg <= 1'b1;
        end else if ((grp_forward_2_fu_1831_ap_ready == 1'b1)) begin
            grp_forward_2_fu_1831_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_forward_3_fu_1821_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state61) & (tmp_66_fu_3096_p2 == 1'd1))) begin
            grp_forward_3_fu_1821_ap_start_reg <= 1'b1;
        end else if ((grp_forward_3_fu_1821_ap_ready == 1'b1)) begin
            grp_forward_3_fu_1821_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_forward_4_fu_1849_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state67) & (tmp_68_fu_3130_p2 == 1'd1))) begin
            grp_forward_4_fu_1849_ap_start_reg <= 1'b1;
        end else if ((grp_forward_4_fu_1849_ap_ready == 1'b1)) begin
            grp_forward_4_fu_1849_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_forward_fu_1841_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state58) & (tmp_64_fu_3079_p2 == 1'd1))) begin
            grp_forward_fu_1841_ap_start_reg <= 1'b1;
        end else if ((grp_forward_fu_1841_ap_ready == 1'b1)) begin
            grp_forward_fu_1841_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_V_0_ack_out == 1'b1) & (inStream_V_V_0_vld_out == 1'b1))) begin
            inStream_V_V_0_sel_rd <= ~inStream_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_V_0_ack_in == 1'b1) & (inStream_V_V_0_vld_in == 1'b1))) begin
            inStream_V_V_0_sel_wr <= ~inStream_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_V_0_vld_in == 1'b0) & (inStream_V_V_0_state == 2'd2)) | ((inStream_V_V_0_vld_in == 1'b0) & (inStream_V_V_0_ack_out == 1'b1) & (inStream_V_V_0_state == 2'd3)))) begin
            inStream_V_V_0_state <= 2'd2;
        end else if ((((inStream_V_V_0_ack_out == 1'b0) & (inStream_V_V_0_state == 2'd1)) | ((inStream_V_V_0_ack_out == 1'b0) & (inStream_V_V_0_vld_in == 1'b1) & (inStream_V_V_0_state == 2'd3)))) begin
            inStream_V_V_0_state <= 2'd1;
        end else if (((~((inStream_V_V_0_vld_in == 1'b0) & (inStream_V_V_0_ack_out == 1'b1)) & ~((inStream_V_V_0_ack_out == 1'b0) & (inStream_V_V_0_vld_in == 1'b1)) & (inStream_V_V_0_state == 2'd3)) | ((inStream_V_V_0_ack_out == 1'b1) & (inStream_V_V_0_state == 2'd1)) | ((inStream_V_V_0_vld_in == 1'b1) & (inStream_V_V_0_state == 2'd2)))) begin
            inStream_V_V_0_state <= 2'd3;
        end else begin
            inStream_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_V_1_ack_out == 1'b1) & (outStream_V_V_1_vld_out == 1'b1))) begin
            outStream_V_V_1_sel_rd <= ~outStream_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_V_1_ack_in == 1'b1) & (outStream_V_V_1_vld_in == 1'b1))) begin
            outStream_V_V_1_sel_wr <= ~outStream_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_V_1_vld_in == 1'b0) & (outStream_V_V_1_state == 2'd2)) | ((outStream_V_V_1_vld_in == 1'b0) & (outStream_V_V_1_ack_out == 1'b1) & (outStream_V_V_1_state == 2'd3)))) begin
            outStream_V_V_1_state <= 2'd2;
        end else if ((((outStream_V_V_1_ack_out == 1'b0) & (outStream_V_V_1_state == 2'd1)) | ((outStream_V_V_1_ack_out == 1'b0) & (outStream_V_V_1_vld_in == 1'b1) & (outStream_V_V_1_state == 2'd3)))) begin
            outStream_V_V_1_state <= 2'd1;
        end else if (((~((outStream_V_V_1_vld_in == 1'b0) & (outStream_V_V_1_ack_out == 1'b1)) & ~((outStream_V_V_1_ack_out == 1'b0) & (outStream_V_V_1_vld_in == 1'b1)) & (outStream_V_V_1_state == 2'd3)) | ((outStream_V_V_1_ack_out == 1'b1) & (outStream_V_V_1_state == 2'd1)) | ((outStream_V_V_1_vld_in == 1'b1) & (outStream_V_V_1_state == 2'd2)))) begin
            outStream_V_V_1_state <= 2'd3;
        end else begin
            outStream_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_2877_p2 == 1'd1))) begin
        i1_reg_1630 <= 5'd0;
    end else if ((~((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state52) & (exitcond7_fu_2934_p2 == 1'd1))) begin
        i1_reg_1630 <= i_58_reg_3790;
    end
end

always @ (posedge ap_clk) begin
    if ((~((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state48) & (exitcond2_fu_2854_p2 == 1'd1))) begin
        i37_reg_1596 <= 3'd0;
    end else if ((~((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond5_fu_2889_p2 == 1'd1))) begin
        i37_reg_1596 <= i_57_reg_3769;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (exitcond4_fu_2922_p2 == 1'd1))) begin
        i3_reg_1664 <= 7'd0;
    end else if ((~((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state54) & (exitcond9_fu_2979_p2 == 1'd1))) begin
        i3_reg_1664 <= i_59_reg_3811;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond6_fu_2967_p2 == 1'd1))) begin
        i5_reg_1698 <= 4'd0;
    end else if ((~((fcw_V_V_0_vld_out == 1'b0) & (exitcond1_fu_3048_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state56) & (exitcond1_fu_3048_p2 == 1'd1))) begin
        i5_reg_1698 <= i_60_reg_3827;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond_i_i4_i_i1_fu_2151_p2 == 1'd1))) begin
        i_0_i_i10_i_i1_reg_1236 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond_i_i11_i_i1_fu_2168_p2 == 1'd0))) begin
        i_0_i_i10_i_i1_reg_1236 <= i_13_fu_2174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (exitcond_i_i4_i_i3_fu_2646_p2 == 1'd1))) begin
        i_0_i_i10_i_i2_reg_1528 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state42) & (exitcond_i_i11_i_i2_fu_2663_p2 == 1'd0))) begin
        i_0_i_i10_i_i2_reg_1528 <= i_53_fu_2669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i4_i_i_fu_1867_p2 == 1'd1))) begin
        i_0_i_i10_i_i_reg_1069 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond_i_i11_i_i_fu_1884_p2 == 1'd0))) begin
        i_0_i_i10_i_i_reg_1069 <= i_1_fu_1890_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (exitcond_i_i15_i_i1_fu_2197_p2 == 1'd0))) begin
        i_0_i_i14_i_i1_reg_1271 <= i_14_fu_2203_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        i_0_i_i14_i_i1_reg_1271 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_i15_i_i_fu_1917_p2 == 1'd0))) begin
        i_0_i_i14_i_i_reg_1103 <= i_2_fu_1923_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_i_i14_i_i_reg_1103 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (exitcond_i_i8_i_i2_fu_2436_p2 == 1'd1))) begin
        i_0_i_i18_i_i_reg_1404 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state31) & (exitcond_i_i19_i_i_fu_2453_p2 == 1'd0))) begin
        i_0_i_i18_i_i_reg_1404 <= i_46_fu_2459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i_i_i_i3_fu_2368_p2 == 1'd1))) begin
        i_0_i_i1_i_i1_reg_1360 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (exitcond_i_i2_i_i1_fu_2385_p2 == 1'd0))) begin
        i_0_i_i1_i_i1_reg_1360 <= i_42_fu_2391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i_i2_i_i_fu_2100_p2 == 1'd1))) begin
        i_0_i_i1_i_i_i_i1_reg_1203 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (exitcond_i_i2_i_i_i_1_fu_2117_p2 == 1'd0))) begin
        i_0_i_i1_i_i_i_i1_reg_1203 <= i_10_fu_2123_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond_i_i_i_i2_fu_2230_p2 == 1'd1))) begin
        i_0_i_i1_i_i_i_i2_reg_1293 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state21) & (exitcond_i_i2_i_i_i_2_fu_2247_p2 == 1'd0))) begin
        i_0_i_i1_i_i_i_i2_reg_1293 <= i_16_fu_2253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (exitcond_i_i2_i_i1_fu_2385_p2 == 1'd1))) begin
        i_0_i_i1_i_i_i_i3_reg_1371 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state28) & (exitcond_i_i2_i_i_i_3_fu_2402_p2 == 1'd0))) begin
        i_0_i_i1_i_i_i_i3_reg_1371 <= i_43_fu_2408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (exitcond_i_i_i_i4_fu_2515_p2 == 1'd1))) begin
        i_0_i_i1_i_i_i_i4_reg_1461 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state35) & (exitcond_i_i2_i_i_i_4_fu_2532_p2 == 1'd0))) begin
        i_0_i_i1_i_i_i_i4_reg_1461 <= i_49_fu_2538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond_i_i_i_i_fu_1949_p2 == 1'd1))) begin
        i_0_i_i1_i_i_i_i_reg_1125 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i_i2_i_i_i_s_fu_1966_p2 == 1'd0))) begin
        i_0_i_i1_i_i_i_i_reg_1125 <= i_4_fu_1972_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond_i_i_i_i1_fu_2083_p2 == 1'd1))) begin
        i_0_i_i1_i_i_reg_1192 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i_i2_i_i_fu_2100_p2 == 1'd0))) begin
        i_0_i_i1_i_i_reg_1192 <= i_9_fu_2106_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_i_i_i_i_2_fu_2264_p2 == 1'd1))) begin
        i_0_i_i1_reg_1315 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state25) & (tmp_119_i_fu_2342_p2 == 1'd0))) begin
        i_0_i_i1_reg_1315 <= i_20_reg_3493;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i_i_i_i_i_i_4_fu_2549_p2 == 1'd1))) begin
        i_0_i_i2_reg_1483 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_117_i_fu_2620_p2 == 1'd0))) begin
        i_0_i_i2_reg_1483 <= i_51_reg_3627;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_i_i_i_i_i_1_fu_2134_p2 == 1'd1))) begin
        i_0_i_i3_i_i1_reg_1225 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (exitcond_i_i4_i_i1_fu_2151_p2 == 1'd0))) begin
        i_0_i_i3_i_i1_reg_1225 <= i_12_fu_2157_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (exitcond_i_i4_i_i2_fu_2482_p2 == 1'd0))) begin
        i_0_i_i3_i_i2_reg_1439 <= i_47_fu_2488_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        i_0_i_i3_i_i2_reg_1439 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (exitcond_i_i2_fu_2572_p2 == 1'd1))) begin
        i_0_i_i3_i_i3_reg_1517 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state41) & (exitcond_i_i4_i_i3_fu_2646_p2 == 1'd0))) begin
        i_0_i_i3_i_i3_reg_1517 <= i_52_fu_2652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i4_i_i_fu_1867_p2 == 1'd0))) begin
        i_0_i_i3_i_i_reg_1058 <= i_fu_1873_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i3_i_i_reg_1058 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (tmp_48_fu_2742_p2 == 1'd1) & (exitcond_i_i_i_i5_fu_2716_p2 == 1'd1))) begin
        i_0_i_i3_reg_1562 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state47) & (tmp_115_i_fu_2829_p2 == 1'd0))) begin
        i_0_i_i3_reg_1562 <= i_55_reg_3715;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i_i_i_i_i_i_3_fu_2419_p2 == 1'd1))) begin
        i_0_i_i7_i_i2_reg_1393 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state30) & (exitcond_i_i8_i_i2_fu_2436_p2 == 1'd0))) begin
        i_0_i_i7_i_i2_reg_1393 <= i_45_fu_2442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond_i_i_fu_2006_p2 == 1'd1))) begin
        i_0_i_i_i_i1_reg_1181 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (exitcond_i_i_i_i1_fu_2083_p2 == 1'd0))) begin
        i_0_i_i_i_i1_reg_1181 <= i_6_fu_2089_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_19_fu_2224_p2 == 1'd1) & (exitcond_i_i15_i_i1_fu_2197_p2 == 1'd1))) begin
        i_0_i_i_i_i2_reg_1282 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (exitcond_i_i_i_i2_fu_2230_p2 == 1'd0))) begin
        i_0_i_i_i_i2_reg_1282 <= i_15_fu_2236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (exitcond_i_i1_fu_2287_p2 == 1'd1))) begin
        i_0_i_i_i_i3_reg_1349 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i_i_i_i3_fu_2368_p2 == 1'd0))) begin
        i_0_i_i_i_i3_reg_1349 <= i_37_fu_2374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (tmp_34_fu_2509_p2 == 1'd1) & (exitcond_i_i4_i_i2_fu_2482_p2 == 1'd1))) begin
        i_0_i_i_i_i4_reg_1450 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state34) & (exitcond_i_i_i_i4_fu_2515_p2 == 1'd0))) begin
        i_0_i_i_i_i4_reg_1450 <= i_48_fu_2521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (exitcond_i_i_i_i5_fu_2716_p2 == 1'd0))) begin
        i_0_i_i_i_i5_reg_1551 <= i_54_fu_2722_p2;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        i_0_i_i_i_i5_reg_1551 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond_i_i2_i_i_i_1_fu_2117_p2 == 1'd1))) begin
        i_0_i_i_i_i_i_i1_reg_1214 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_i_i_i_i_i_1_fu_2134_p2 == 1'd0))) begin
        i_0_i_i_i_i_i_i1_reg_1214 <= i_11_fu_2140_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (exitcond_i_i2_i_i_i_2_fu_2247_p2 == 1'd1))) begin
        i_0_i_i_i_i_i_i2_reg_1304 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_i_i_i_i_2_fu_2264_p2 == 1'd0))) begin
        i_0_i_i_i_i_i_i2_reg_1304 <= i_17_fu_2270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (exitcond_i_i2_i_i_i_3_fu_2402_p2 == 1'd1))) begin
        i_0_i_i_i_i_i_i3_reg_1382 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i_i_i_i_i_i_3_fu_2419_p2 == 1'd0))) begin
        i_0_i_i_i_i_i_i3_reg_1382 <= i_44_fu_2425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (exitcond_i_i2_i_i_i_4_fu_2532_p2 == 1'd1))) begin
        i_0_i_i_i_i_i_i4_reg_1472 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i_i_i_i_i_i_4_fu_2549_p2 == 1'd0))) begin
        i_0_i_i_i_i_i_i4_reg_1472 <= i_50_fu_2555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i_i2_i_i_i_s_fu_1966_p2 == 1'd1))) begin
        i_0_i_i_i_i_i_i_reg_1136 <= 13'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (exitcond_i_i_i_i_i_i_fu_1983_p2 == 1'd0))) begin
        i_0_i_i_i_i_i_i_reg_1136 <= i_5_fu_1989_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_8_fu_1943_p2 == 1'd1) & (exitcond_i_i15_i_i_fu_1917_p2 == 1'd1))) begin
        i_0_i_i_i_i_reg_1114 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond_i_i_i_i_fu_1949_p2 == 1'd0))) begin
        i_0_i_i_i_i_reg_1114 <= i_3_fu_1955_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond_i_i_i_i_i_i_fu_1983_p2 == 1'd1))) begin
        i_0_i_i_reg_1147 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_121_i_fu_2057_p2 == 1'd0))) begin
        i_0_i_i_reg_1147 <= i_8_reg_3359;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_119_i_fu_2342_p2 == 1'd1))) begin
        i_i1_reg_1338 <= i_18_fu_2347_p2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        i_i1_reg_1338 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_117_i_fu_2620_p2 == 1'd1))) begin
        i_i2_reg_1506 <= i_19_fu_2625_p2;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        i_i2_reg_1506 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) & (tmp_115_i_fu_2829_p2 == 1'd1))) begin
        i_i3_reg_1574 <= i_56_fu_2834_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i_i3_reg_1574 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_121_i_fu_2057_p2 == 1'd1))) begin
        i_i_reg_1170 <= i_7_fu_2062_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i_i_reg_1170 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) & (exitcond_i_fu_3159_p2 == 1'd1))) begin
        idx7_reg_1810 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state78) & (outStream_V_V_1_ack_in == 1'b1))) begin
        idx7_reg_1810 <= idx_2_reg_3989;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond_i_i3_fu_2748_p2 == 1'd1))) begin
        idx_reg_1585 <= 11'd0;
    end else if ((~((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state48) & (exitcond2_fu_2854_p2 == 1'd0))) begin
        idx_reg_1585 <= idx_1_fu_2860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (exitcond4_fu_2922_p2 == 1'd0))) begin
        j2_reg_1653 <= 8'd0;
    end else if ((~((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state52) & (exitcond7_fu_2934_p2 == 1'd0))) begin
        j2_reg_1653 <= j_2_fu_2940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond6_fu_2967_p2 == 1'd0))) begin
        j4_reg_1687 <= 9'd0;
    end else if ((~((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state54) & (exitcond9_fu_2979_p2 == 1'd0))) begin
        j4_reg_1687 <= j_3_fu_2985_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & (exitcond8_fu_3006_p2 == 1'd0))) begin
        j6_reg_1709 <= 7'd0;
    end else if ((~((fcw_V_V_0_vld_out == 1'b0) & (exitcond1_fu_3048_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state56) & (exitcond1_fu_3048_p2 == 1'd0))) begin
        j6_reg_1709 <= j_4_fu_3054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_2877_p2 == 1'd0))) begin
        j_reg_1619 <= 5'd0;
    end else if ((~((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond5_fu_2889_p2 == 1'd0))) begin
        j_reg_1619 <= j_1_fu_2895_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) & (exitcond_i_fu_3159_p2 == 1'd0))) begin
        p_Val2_0_i_reg_1786 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        p_Val2_0_i_reg_1786 <= {{grp_fu_3276_p3[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        p_i0_0_i1_reg_1731 <= p_i0_1_reg_3871;
    end else if (((1'b1 == ap_CS_fsm_state60) & (grp_forward_fu_1841_ap_done == 1'b1))) begin
        p_i0_0_i1_reg_1731 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        p_i0_0_i2_reg_1742 <= p_i0_2_reg_3889;
    end else if (((1'b1 == ap_CS_fsm_state63) & (grp_forward_3_fu_1821_ap_done == 1'b1))) begin
        p_i0_0_i2_reg_1742 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        p_i0_0_i3_reg_1753 <= p_i0_3_reg_3907;
    end else if (((1'b1 == ap_CS_fsm_state66) & (grp_forward_1_fu_1859_ap_done == 1'b1))) begin
        p_i0_0_i3_reg_1753 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        p_i0_0_i4_reg_1764 <= p_i0_4_reg_3925;
    end else if (((1'b1 == ap_CS_fsm_state69) & (grp_forward_4_fu_1849_ap_done == 1'b1))) begin
        p_i0_0_i4_reg_1764 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        p_i0_0_i_reg_1720 <= p_i0_reg_3853;
    end else if (((1'b1 == ap_CS_fsm_state57) & (grp_forward_2_fu_1831_ap_done == 1'b1))) begin
        p_i0_0_i_reg_1720 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) & (exitcond_i_fu_3159_p2 == 1'd0))) begin
        p_z_assign_1_0_i_reg_1799 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        p_z_assign_1_0_i_reg_1799 <= i_z_0_i_reg_3956;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state70) & (tmp_69_fu_3147_p2 == 1'd1))) begin
        p_z_assign_reg_1775 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state73) & (exitcond_0_i_fu_3205_p2 == 1'd1))) begin
        p_z_assign_reg_1775 <= i_filter_reg_3938;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond_i_i11_i_i1_fu_2168_p2 == 1'd1))) begin
        phi_mul1_reg_1259 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (exitcond_i_i15_i_i1_fu_2197_p2 == 1'd1) & (tmp_19_fu_2224_p2 == 1'd0))) begin
        phi_mul1_reg_1259 <= next_mul1_reg_3440;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_i_i_i_i_2_fu_2264_p2 == 1'd1))) begin
        phi_mul2_reg_1326 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_state25) & (tmp_119_i_fu_2342_p2 == 1'd0))) begin
        phi_mul2_reg_1326 <= next_mul2_reg_3485;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (exitcond_i_i19_i_i_fu_2453_p2 == 1'd1))) begin
        phi_mul3_reg_1427 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) & (exitcond_i_i4_i_i2_fu_2482_p2 == 1'd1) & (tmp_34_fu_2509_p2 == 1'd0))) begin
        phi_mul3_reg_1427 <= next_mul3_reg_3574;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i_i_i_i_i_i_4_fu_2549_p2 == 1'd1))) begin
        phi_mul4_reg_1494 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_117_i_fu_2620_p2 == 1'd0))) begin
        phi_mul4_reg_1494 <= next_mul4_reg_3619;
    end
end

always @ (posedge ap_clk) begin
    if ((~((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state48) & (exitcond2_fu_2854_p2 == 1'd1))) begin
        phi_mul5_reg_1607 <= 8'd0;
    end else if ((~((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond5_fu_2889_p2 == 1'd1))) begin
        phi_mul5_reg_1607 <= next_mul5_reg_3761;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_2877_p2 == 1'd1))) begin
        phi_mul6_reg_1641 <= 12'd0;
    end else if ((~((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state52) & (exitcond7_fu_2934_p2 == 1'd1))) begin
        phi_mul6_reg_1641 <= next_mul6_reg_3782;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (exitcond4_fu_2922_p2 == 1'd1))) begin
        phi_mul7_reg_1675 <= 16'd0;
    end else if ((~((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state54) & (exitcond9_fu_2979_p2 == 1'd1))) begin
        phi_mul7_reg_1675 <= next_mul7_reg_3803;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond_i_i_i_i_i_i_fu_1983_p2 == 1'd1))) begin
        phi_mul8_reg_1158 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (tmp_121_i_fu_2057_p2 == 1'd0))) begin
        phi_mul8_reg_1158 <= next_mul9_reg_3351;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_i_i11_i_i_fu_1884_p2 == 1'd1))) begin
        phi_mul_reg_1092 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_i15_i_i_fu_1917_p2 == 1'd1) & (tmp_8_fu_1943_p2 == 1'd0))) begin
        phi_mul_reg_1092 <= next_mul_reg_3306;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond_i_i11_i_i1_fu_2168_p2 == 1'd1))) begin
        tmp_17_reg_1247 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (exitcond_i_i15_i_i1_fu_2197_p2 == 1'd1) & (tmp_19_fu_2224_p2 == 1'd0))) begin
        tmp_17_reg_1247 <= tmp_18_reg_3445;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (exitcond_i_i19_i_i_fu_2453_p2 == 1'd1))) begin
        tmp_32_reg_1415 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) & (exitcond_i_i4_i_i2_fu_2482_p2 == 1'd1) & (tmp_34_fu_2509_p2 == 1'd0))) begin
        tmp_32_reg_1415 <= tmp_33_reg_3579;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (exitcond_i_i11_i_i2_fu_2663_p2 == 1'd1))) begin
        tmp_43_reg_1539 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state44) & (exitcond_i_i_i_i5_fu_2716_p2 == 1'd1) & (tmp_48_fu_2742_p2 == 1'd0))) begin
        tmp_43_reg_1539 <= tmp_44_reg_3691;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_i_i11_i_i_fu_1884_p2 == 1'd1))) begin
        tmp_4_reg_1080 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_i15_i_i_fu_1917_p2 == 1'd1) & (tmp_8_fu_1943_p2 == 1'd0))) begin
        tmp_4_reg_1080 <= tmp_5_reg_3311;
    end
end

always @ (posedge ap_clk) begin
    if ((c1w_V_V_0_load_A == 1'b1)) begin
        c1w_V_V_0_payload_A <= c1w_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((c1w_V_V_0_load_B == 1'b1)) begin
        c1w_V_V_0_payload_B <= c1w_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((c3w_V_V_0_load_A == 1'b1)) begin
        c3w_V_V_0_payload_A <= c3w_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((c3w_V_V_0_load_B == 1'b1)) begin
        c3w_V_V_0_payload_B <= c3w_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        c5_W_size_x_load_reg_3647 <= c5_W_size_x_q0;
        c5_W_size_y_load_reg_3652 <= c5_W_size_y_q0;
        c5_W_size_z_load_reg_3657 <= c5_W_size_z_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((c5w_V_V_0_load_A == 1'b1)) begin
        c5w_V_V_0_payload_A <= c5w_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((c5w_V_V_0_load_B == 1'b1)) begin
        c5w_V_V_0_payload_B <= c5w_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        fc6_W_data_V_load_reg_3976 <= fc6_W_data_V_q0;
        fc6_input_data_V_lo_reg_3971 <= fc6_input_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((fcw_V_V_0_load_A == 1'b1)) begin
        fcw_V_V_0_payload_A <= fcw_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((fcw_V_V_0_load_B == 1'b1)) begin
        fcw_V_V_0_payload_B <= fcw_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_20_reg_3493 <= i_20_fu_2293_p2;
        next_mul2_reg_3485 <= next_mul2_fu_2281_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_51_reg_3627 <= i_51_fu_2578_p2;
        next_mul4_reg_3619 <= next_mul4_fu_2566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        i_55_reg_3715 <= i_55_fu_2754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        i_57_reg_3769 <= i_57_fu_2883_p2;
        next_mul5_reg_3761 <= next_mul5_fu_2871_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        i_58_reg_3790 <= i_58_fu_2928_p2;
        next_mul6_reg_3782 <= next_mul6_fu_2916_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        i_59_reg_3811 <= i_59_fu_2973_p2;
        next_mul7_reg_3803 <= next_mul7_fu_2961_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        i_60_reg_3827 <= i_60_fu_3012_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_8_reg_3359 <= i_8_fu_2012_p2;
        next_mul9_reg_3351 <= next_mul9_fu_2000_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        i_filter_reg_3938 <= i_filter_fu_3165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        i_z_0_i_reg_3956 <= i_z_0_i_fu_3211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) & (outStream_V_V_1_ack_in == 1'b1))) begin
        idx_2_reg_3989 <= idx_2_fu_3265_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_V_0_load_A == 1'b1)) begin
        inStream_V_V_0_payload_A <= inStream_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_V_0_load_B == 1'b1)) begin
        inStream_V_V_0_payload_B <= inStream_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        next_mul1_reg_3440 <= next_mul1_fu_2185_p2;
        tmp_18_reg_3445 <= tmp_18_fu_2191_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        next_mul3_reg_3574 <= next_mul3_fu_2470_p2;
        tmp_33_reg_3579 <= tmp_33_fu_2476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        next_mul_reg_3306 <= next_mul_fu_1905_p2;
        phi_mul_cast_reg_3301[6 : 0] <= phi_mul_cast_fu_1901_p1[6 : 0];
        tmp_5_reg_3311 <= tmp_5_fu_1911_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_V_1_load_A == 1'b1)) begin
        outStream_V_V_1_payload_A <= fc6_output_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_V_1_load_B == 1'b1)) begin
        outStream_V_V_1_payload_B <= fc6_output_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        p_i0_0_i1_cast_reg_3863[10 : 0] <= p_i0_0_i1_cast_fu_3091_p1[10 : 0];
        p_i0_1_reg_3871 <= p_i0_1_fu_3102_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        p_i0_0_i2_cast_reg_3881[10 : 0] <= p_i0_0_i2_cast_fu_3108_p1[10 : 0];
        p_i0_2_reg_3889 <= p_i0_2_fu_3119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        p_i0_0_i3_cast9_reg_3899[8 : 0] <= p_i0_0_i3_cast9_fu_3125_p1[8 : 0];
        p_i0_3_reg_3907 <= p_i0_3_fu_3136_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        p_i0_0_i4_cast8_reg_3917[6 : 0] <= p_i0_0_i4_cast8_fu_3142_p1[6 : 0];
        p_i0_4_reg_3925 <= p_i0_4_fu_3153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        p_i0_0_i_cast_reg_3845[12 : 0] <= p_i0_0_i_cast_fu_3074_p1[12 : 0];
        p_i0_reg_3853 <= p_i0_fu_3085_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_44_reg_3691 <= tmp_44_fu_2680_p2;
        tmp_47_reg_3696[11 : 3] <= tmp_47_fu_2710_p2[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp_53_reg_3735[11 : 3] <= tmp_53_fu_2791_p2[11 : 3];
        tmp_i3_reg_3740 <= tmp_i3_fu_2823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) & (exitcond8_fu_3006_p2 == 1'd0))) begin
        tmp_62_reg_3832[11 : 3] <= tmp_62_fu_3042_p2[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state72) & (exitcond_i_fu_3159_p2 == 1'd0))) begin
        tmp_72_reg_3948[11 : 3] <= tmp_72_fu_3199_p2[11 : 3];
        tmp_i4_reg_3943[3 : 0] <= tmp_i4_fu_3171_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_i1_reg_3513 <= tmp_i1_fu_2332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_i2_reg_3662 <= tmp_i2_fu_2610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_i_reg_3379 <= tmp_i_fu_2047_p2;
    end
end

always @ (*) begin
    if (((outStream_V_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state76) & (outStream_V_V_1_ack_in == 1'b1) & (exitcond_fu_3259_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((outStream_V_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state76) & (outStream_V_V_1_ack_in == 1'b1) & (exitcond_fu_3259_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        c1_W_data_V_address0 = tmp_76_cast_fu_2911_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        c1_W_data_V_address0 = tmp_17_cast_fu_2078_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c1_W_data_V_address0 = tmp_10_cast_fu_1938_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_W_data_V_address0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_address0;
    end else begin
        c1_W_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5) | (~((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50)))) begin
        c1_W_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_W_data_V_ce0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_W_data_V_ce0;
    end else begin
        c1_W_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        c1_W_data_V_d0 = c1w_V_V_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        c1_W_data_V_d0 = 16'd40;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c1_W_data_V_d0 = 16'd0;
    end else begin
        c1_W_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (tmp_121_i_fu_2057_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (exitcond_i_i15_i_i_fu_1917_p2 == 1'd0)) | (~((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond5_fu_2889_p2 == 1'd0)))) begin
        c1_W_data_V_we0 = 1'b1;
    end else begin
        c1_W_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        c1_W_size_x_ce0 = 1'b1;
    end else begin
        c1_W_size_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        c1_W_size_y_ce0 = 1'b1;
    end else begin
        c1_W_size_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        c1_W_size_z_ce0 = 1'b1;
    end else begin
        c1_W_size_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        c1_inpad_data_V_address0 = tmp_2_fu_1961_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_inpad_data_V_address0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_address0;
    end else begin
        c1_inpad_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        c1_inpad_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_inpad_data_V_ce0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_ce0;
    end else begin
        c1_inpad_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        c1_inpad_data_V_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_inpad_data_V_d0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_d0;
    end else begin
        c1_inpad_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond_i_i_i_i_fu_1949_p2 == 1'd0))) begin
        c1_inpad_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_inpad_data_V_we0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_inpad_data_V_we0;
    end else begin
        c1_inpad_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        c1_input_data_V_address0 = tmp_56_fu_2866_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c1_input_data_V_address0 = tmp_fu_1879_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_input_data_V_address0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_address0;
    end else begin
        c1_input_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state48)))) begin
        c1_input_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_input_data_V_ce0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_input_data_V_ce0;
    end else begin
        c1_input_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        c1_input_data_V_d0 = inStream_V_V_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c1_input_data_V_d0 = 16'd0;
    end else begin
        c1_input_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i4_i_i_fu_1867_p2 == 1'd0)) | (~((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state48) & (exitcond2_fu_2854_p2 == 1'd0)))) begin
        c1_input_data_V_we0 = 1'b1;
    end else begin
        c1_input_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        c1_output_data_V_address0 = p_i0_0_i_cast_fu_3074_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        c1_output_data_V_address0 = tmp_s_fu_1896_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_output_data_V_address0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_address0;
    end else begin
        c1_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state58))) begin
        c1_output_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_output_data_V_ce0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_ce0;
    end else begin
        c1_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c1_output_data_V_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_output_data_V_d0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_d0;
    end else begin
        c1_output_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_i_i11_i_i_fu_1884_p2 == 1'd0))) begin
        c1_output_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_output_data_V_we0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_output_data_V_we0;
    end else begin
        c1_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        c1_relu1_input_data_address0 = tmp_3_fu_1978_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_relu1_input_data_address0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_address0;
    end else begin
        c1_relu1_input_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        c1_relu1_input_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_relu1_input_data_ce0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_ce0;
    end else begin
        c1_relu1_input_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        c1_relu1_input_data_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_relu1_input_data_d0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_d0;
    end else begin
        c1_relu1_input_data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i_i2_i_i_i_s_fu_1966_p2 == 1'd0))) begin
        c1_relu1_input_data_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_relu1_input_data_we0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_input_data_V_we0;
    end else begin
        c1_relu1_input_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        c1_relu1_output_dat_address0 = tmp_6_fu_1995_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_relu1_output_dat_address0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_address0;
    end else begin
        c1_relu1_output_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        c1_relu1_output_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_relu1_output_dat_ce0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_ce0;
    end else begin
        c1_relu1_output_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        c1_relu1_output_dat_d0 = 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_relu1_output_dat_d0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_d0;
    end else begin
        c1_relu1_output_dat_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond_i_i_i_i_i_i_fu_1983_p2 == 1'd0))) begin
        c1_relu1_output_dat_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        c1_relu1_output_dat_we0 = grp_forward_2_fu_1831_conv_layer_5_6_1_0_32_32_1_relu1_output_data_V_we0;
    end else begin
        c1_relu1_output_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond5_fu_2889_p2 == 1'd0))) begin
        c1w_V_V_0_ack_out = 1'b1;
    end else begin
        c1w_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((c1w_V_V_0_sel == 1'b1)) begin
        c1w_V_V_0_data_out = c1w_V_V_0_payload_B;
    end else begin
        c1w_V_V_0_data_out = c1w_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) & (exitcond5_fu_2889_p2 == 1'd0))) begin
        c1w_V_V_TDATA_blk_n = c1w_V_V_0_state[1'd0];
    end else begin
        c1w_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        c3_W_data_V_address0 = tmp_80_cast_fu_2956_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        c3_W_data_V_address0 = tmp_36_cast_fu_2363_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c3_W_data_V_address0 = tmp_29_cast_fu_2219_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_W_data_V_address0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_address0;
    end else begin
        c3_W_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (~((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state52)))) begin
        c3_W_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_W_data_V_ce0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_W_data_V_ce0;
    end else begin
        c3_W_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        c3_W_data_V_d0 = c3w_V_V_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        c3_W_data_V_d0 = 16'd40;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c3_W_data_V_d0 = 16'd0;
    end else begin
        c3_W_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state25) & (tmp_119_i_fu_2342_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state19) & (exitcond_i_i15_i_i1_fu_2197_p2 == 1'd0)) | (~((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state52) & (exitcond7_fu_2934_p2 == 1'd0)))) begin
        c3_W_data_V_we0 = 1'b1;
    end else begin
        c3_W_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        c3_W_size_x_ce0 = 1'b1;
    end else begin
        c3_W_size_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        c3_W_size_y_ce0 = 1'b1;
    end else begin
        c3_W_size_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        c3_W_size_z_ce0 = 1'b1;
    end else begin
        c3_W_size_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        c3_inpad_data_V_address0 = tmp_21_fu_2242_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_inpad_data_V_address0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_address0;
    end else begin
        c3_inpad_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        c3_inpad_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_inpad_data_V_ce0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_ce0;
    end else begin
        c3_inpad_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        c3_inpad_data_V_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_inpad_data_V_d0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_d0;
    end else begin
        c3_inpad_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond_i_i_i_i2_fu_2230_p2 == 1'd0))) begin
        c3_inpad_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_inpad_data_V_we0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_inpad_data_V_we0;
    end else begin
        c3_inpad_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        c3_input_data_V_address0 = p_i0_0_i1_cast_reg_3863;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c3_input_data_V_address0 = tmp_15_fu_2163_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_input_data_V_address0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_address0;
    end else begin
        c3_input_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state62))) begin
        c3_input_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_input_data_V_ce0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_input_data_V_ce0;
    end else begin
        c3_input_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        c3_input_data_V_d0 = p2_output_data_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c3_input_data_V_d0 = 16'd0;
    end else begin
        c3_input_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | ((1'b1 == ap_CS_fsm_state16) & (exitcond_i_i4_i_i1_fu_2151_p2 == 1'd0)))) begin
        c3_input_data_V_we0 = 1'b1;
    end else begin
        c3_input_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        c3_output_data_V_address0 = p_i0_0_i2_cast_fu_3108_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c3_output_data_V_address0 = tmp_16_fu_2180_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_output_data_V_address0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_address0;
    end else begin
        c3_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state64))) begin
        c3_output_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_output_data_V_ce0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_ce0;
    end else begin
        c3_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        c3_output_data_V_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_output_data_V_d0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_d0;
    end else begin
        c3_output_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond_i_i11_i_i1_fu_2168_p2 == 1'd0))) begin
        c3_output_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_output_data_V_we0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_output_data_V_we0;
    end else begin
        c3_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c3_relu1_input_data_address0 = tmp_22_fu_2259_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_relu1_input_data_address0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_address0;
    end else begin
        c3_relu1_input_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c3_relu1_input_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_relu1_input_data_ce0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_ce0;
    end else begin
        c3_relu1_input_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c3_relu1_input_data_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_relu1_input_data_d0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_d0;
    end else begin
        c3_relu1_input_data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (exitcond_i_i2_i_i_i_2_fu_2247_p2 == 1'd0))) begin
        c3_relu1_input_data_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_relu1_input_data_we0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_input_data_V_we0;
    end else begin
        c3_relu1_input_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        c3_relu1_output_dat_address0 = tmp_23_fu_2276_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_relu1_output_dat_address0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_address0;
    end else begin
        c3_relu1_output_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        c3_relu1_output_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_relu1_output_dat_ce0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_ce0;
    end else begin
        c3_relu1_output_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        c3_relu1_output_dat_d0 = 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_relu1_output_dat_d0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_d0;
    end else begin
        c3_relu1_output_dat_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_i_i_i_i_2_fu_2264_p2 == 1'd0))) begin
        c3_relu1_output_dat_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        c3_relu1_output_dat_we0 = grp_forward_3_fu_1821_conv_layer_5_16_1_0_14_14_6_relu1_output_data_V_we0;
    end else begin
        c3_relu1_output_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state52) & (exitcond7_fu_2934_p2 == 1'd0))) begin
        c3w_V_V_0_ack_out = 1'b1;
    end else begin
        c3w_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((c3w_V_V_0_sel == 1'b1)) begin
        c3w_V_V_0_data_out = c3w_V_V_0_payload_B;
    end else begin
        c3w_V_V_0_data_out = c3w_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & (exitcond7_fu_2934_p2 == 1'd0))) begin
        c3w_V_V_TDATA_blk_n = c3w_V_V_0_state[1'd0];
    end else begin
        c3w_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        c5_W_data_V_address0 = tmp_85_cast_fu_3001_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        c5_W_data_V_address0 = tmp_55_cast_fu_2641_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c5_W_data_V_address0 = tmp_48_cast_fu_2504_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_W_data_V_address0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_address0;
    end else begin
        c5_W_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state33) | (~((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state54)))) begin
        c5_W_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_W_data_V_ce0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_W_data_V_ce0;
    end else begin
        c5_W_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        c5_W_data_V_d0 = c5w_V_V_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        c5_W_data_V_d0 = 16'd40;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c5_W_data_V_d0 = 16'd0;
    end else begin
        c5_W_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state40) & (tmp_117_i_fu_2620_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state33) & (exitcond_i_i4_i_i2_fu_2482_p2 == 1'd0)) | (~((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state54) & (exitcond9_fu_2979_p2 == 1'd0)))) begin
        c5_W_data_V_we0 = 1'b1;
    end else begin
        c5_W_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        c5_W_size_x_ce0 = 1'b1;
    end else begin
        c5_W_size_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        c5_W_size_y_ce0 = 1'b1;
    end else begin
        c5_W_size_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        c5_W_size_z_ce0 = 1'b1;
    end else begin
        c5_W_size_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        c5_inpad_data_V_address0 = tmp_36_fu_2527_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_inpad_data_V_address0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_address0;
    end else begin
        c5_inpad_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        c5_inpad_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_inpad_data_V_ce0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_ce0;
    end else begin
        c5_inpad_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        c5_inpad_data_V_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_inpad_data_V_d0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_d0;
    end else begin
        c5_inpad_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) & (exitcond_i_i_i_i4_fu_2515_p2 == 1'd0))) begin
        c5_inpad_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_inpad_data_V_we0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_inpad_data_V_we0;
    end else begin
        c5_inpad_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        c5_input_data_V_address0 = p_i0_0_i3_cast9_reg_3899;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        c5_input_data_V_address0 = tmp_30_fu_2448_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_input_data_V_address0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_address0;
    end else begin
        c5_input_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state68))) begin
        c5_input_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_input_data_V_ce0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_input_data_V_ce0;
    end else begin
        c5_input_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        c5_input_data_V_d0 = p4_output_data_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        c5_input_data_V_d0 = 16'd0;
    end else begin
        c5_input_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | ((1'b1 == ap_CS_fsm_state30) & (exitcond_i_i8_i_i2_fu_2436_p2 == 1'd0)))) begin
        c5_input_data_V_we0 = 1'b1;
    end else begin
        c5_input_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        c5_output_data_V_address0 = p_i0_0_i4_cast8_fu_3142_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        c5_output_data_V_address0 = tmp_31_fu_2465_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_output_data_V_address0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_address0;
    end else begin
        c5_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state70))) begin
        c5_output_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_output_data_V_ce0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_ce0;
    end else begin
        c5_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        c5_output_data_V_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_output_data_V_d0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_d0;
    end else begin
        c5_output_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) & (exitcond_i_i19_i_i_fu_2453_p2 == 1'd0))) begin
        c5_output_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_output_data_V_we0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_output_data_V_we0;
    end else begin
        c5_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        c5_relu1_input_data_address0 = tmp_37_fu_2544_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_relu1_input_data_address0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_address0;
    end else begin
        c5_relu1_input_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        c5_relu1_input_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_relu1_input_data_ce0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_ce0;
    end else begin
        c5_relu1_input_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        c5_relu1_input_data_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_relu1_input_data_d0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_d0;
    end else begin
        c5_relu1_input_data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) & (exitcond_i_i2_i_i_i_4_fu_2532_p2 == 1'd0))) begin
        c5_relu1_input_data_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_relu1_input_data_we0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_input_data_V_we0;
    end else begin
        c5_relu1_input_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        c5_relu1_output_dat_address0 = tmp_38_fu_2561_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_relu1_output_dat_address0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_address0;
    end else begin
        c5_relu1_output_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        c5_relu1_output_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_relu1_output_dat_ce0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_ce0;
    end else begin
        c5_relu1_output_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        c5_relu1_output_dat_d0 = 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_relu1_output_dat_d0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_d0;
    end else begin
        c5_relu1_output_dat_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i_i_i_i_i_i_4_fu_2549_p2 == 1'd0))) begin
        c5_relu1_output_dat_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        c5_relu1_output_dat_we0 = grp_forward_4_fu_1849_conv_layer_5_120_1_0_5_5_16_relu1_output_data_V_we0;
    end else begin
        c5_relu1_output_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state54) & (exitcond9_fu_2979_p2 == 1'd0))) begin
        c5w_V_V_0_ack_out = 1'b1;
    end else begin
        c5w_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((c5w_V_V_0_sel == 1'b1)) begin
        c5w_V_V_0_data_out = c5w_V_V_0_payload_B;
    end else begin
        c5w_V_V_0_data_out = c5w_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) & (exitcond9_fu_2979_p2 == 1'd0))) begin
        c5w_V_V_TDATA_blk_n = c5w_V_V_0_state[1'd0];
    end else begin
        c5w_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        fc6_W_data_V_address0 = tmp_97_cast_fu_3231_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        fc6_W_data_V_address0 = tmp_88_cast_fu_3069_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        fc6_W_data_V_address0 = tmp_70_cast_fu_2849_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        fc6_W_data_V_address0 = tmp_64_cast_fu_2737_p1;
    end else begin
        fc6_W_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state47) | (~((fcw_V_V_0_vld_out == 1'b0) & (exitcond1_fu_3048_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state56)))) begin
        fc6_W_data_V_ce0 = 1'b1;
    end else begin
        fc6_W_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        fc6_W_data_V_d0 = fcw_V_V_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        fc6_W_data_V_d0 = 16'd40;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        fc6_W_data_V_d0 = 16'd0;
    end else begin
        fc6_W_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state44) & (exitcond_i_i_i_i5_fu_2716_p2 == 1'd0)) | (~((fcw_V_V_0_vld_out == 1'b0) & (exitcond1_fu_3048_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state56) & (exitcond1_fu_3048_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state47) & (tmp_115_i_fu_2829_p2 == 1'd1)))) begin
        fc6_W_data_V_we0 = 1'b1;
    end else begin
        fc6_W_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        fc6_W_size_x_ce0 = 1'b1;
    end else begin
        fc6_W_size_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        fc6_W_size_y_ce0 = 1'b1;
    end else begin
        fc6_W_size_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        fc6_W_size_z_ce0 = 1'b1;
    end else begin
        fc6_W_size_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        fc6_input_data_V_address0 = tmp_132_0_i_fu_3217_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        fc6_input_data_V_address0 = p_i0_0_i4_cast8_reg_3917;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        fc6_input_data_V_address0 = tmp_40_fu_2658_p1;
    end else begin
        fc6_input_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state73))) begin
        fc6_input_data_V_ce0 = 1'b1;
    end else begin
        fc6_input_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        fc6_input_data_V_d0 = c5_output_data_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        fc6_input_data_V_d0 = 16'd0;
    end else begin
        fc6_input_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state71) | ((1'b1 == ap_CS_fsm_state41) & (exitcond_i_i4_i_i3_fu_2646_p2 == 1'd0)))) begin
        fc6_input_data_V_we0 = 1'b1;
    end else begin
        fc6_input_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        fc6_output_data_V_address0 = tmp_73_fu_3271_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc6_output_data_V_address0 = tmp_i4_reg_3943;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        fc6_output_data_V_address0 = tmp_42_fu_2675_p1;
    end else begin
        fc6_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state73) | ((1'b1 == ap_CS_fsm_state76) & (outStream_V_V_1_ack_in == 1'b1)))) begin
        fc6_output_data_V_ce0 = 1'b1;
    end else begin
        fc6_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        fc6_output_data_V_d0 = p_Val2_0_i_reg_1786;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        fc6_output_data_V_d0 = 16'd0;
    end else begin
        fc6_output_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state42) & (exitcond_i_i11_i_i2_fu_2663_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state73) & (exitcond_0_i_fu_3205_p2 == 1'd1)))) begin
        fc6_output_data_V_we0 = 1'b1;
    end else begin
        fc6_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((fcw_V_V_0_vld_out == 1'b0) & (exitcond1_fu_3048_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state56) & (exitcond1_fu_3048_p2 == 1'd0))) begin
        fcw_V_V_0_ack_out = 1'b1;
    end else begin
        fcw_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((fcw_V_V_0_sel == 1'b1)) begin
        fcw_V_V_0_data_out = fcw_V_V_0_payload_B;
    end else begin
        fcw_V_V_0_data_out = fcw_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) & (exitcond1_fu_3048_p2 == 1'd0))) begin
        fcw_V_V_TDATA_blk_n = fcw_V_V_0_state[1'd0];
    end else begin
        fcw_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state48) & (exitcond2_fu_2854_p2 == 1'd0))) begin
        inStream_V_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_V_0_sel == 1'b1)) begin
        inStream_V_V_0_data_out = inStream_V_V_0_payload_B;
    end else begin
        inStream_V_V_0_data_out = inStream_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) & (exitcond2_fu_2854_p2 == 1'd0))) begin
        inStream_V_V_TDATA_blk_n = inStream_V_V_0_state[1'd0];
    end else begin
        inStream_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((outStream_V_V_1_sel == 1'b1)) begin
        outStream_V_V_1_data_out = outStream_V_V_1_payload_B;
    end else begin
        outStream_V_V_1_data_out = outStream_V_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) & (outStream_V_V_1_ack_in == 1'b1))) begin
        outStream_V_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77))) begin
        outStream_V_V_TDATA_blk_n = outStream_V_V_1_state[1'd1];
    end else begin
        outStream_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        p2_input_data_V_address0 = p_i0_0_i_cast_reg_3845;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p2_input_data_V_address0 = tmp_10_fu_2095_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_input_data_V_address0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_address0;
    end else begin
        p2_input_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state59))) begin
        p2_input_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_input_data_V_ce0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_input_data_V_ce0;
    end else begin
        p2_input_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        p2_input_data_V_d0 = c1_output_data_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p2_input_data_V_d0 = 16'd0;
    end else begin
        p2_input_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b1 == ap_CS_fsm_state12) & (exitcond_i_i_i_i1_fu_2083_p2 == 1'd0)))) begin
        p2_input_data_V_we0 = 1'b1;
    end else begin
        p2_input_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        p2_output_data_V_address0 = p_i0_0_i1_cast_fu_3091_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p2_output_data_V_address0 = tmp_12_fu_2112_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_output_data_V_address0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_address0;
    end else begin
        p2_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state61))) begin
        p2_output_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_output_data_V_ce0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_ce0;
    end else begin
        p2_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p2_output_data_V_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_output_data_V_d0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_d0;
    end else begin
        p2_output_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i_i2_i_i_fu_2100_p2 == 1'd0))) begin
        p2_output_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_output_data_V_we0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_output_data_V_we0;
    end else begin
        p2_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p2_relu1_input_data_address0 = tmp_13_fu_2129_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_relu1_input_data_address0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_address0;
    end else begin
        p2_relu1_input_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p2_relu1_input_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_relu1_input_data_ce0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_ce0;
    end else begin
        p2_relu1_input_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p2_relu1_input_data_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_relu1_input_data_d0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_d0;
    end else begin
        p2_relu1_input_data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond_i_i2_i_i_i_1_fu_2117_p2 == 1'd0))) begin
        p2_relu1_input_data_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_relu1_input_data_we0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_input_data_V_we0;
    end else begin
        p2_relu1_input_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p2_relu1_output_dat_address0 = tmp_14_fu_2146_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_relu1_output_dat_address0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_address0;
    end else begin
        p2_relu1_output_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p2_relu1_output_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_relu1_output_dat_ce0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_ce0;
    end else begin
        p2_relu1_output_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p2_relu1_output_dat_d0 = 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_relu1_output_dat_d0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_d0;
    end else begin
        p2_relu1_output_dat_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_i_i_i_i_i_1_fu_2134_p2 == 1'd0))) begin
        p2_relu1_output_dat_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        p2_relu1_output_dat_we0 = grp_forward_fu_1841_pool_layer_2_2_1_28_28_6_relu1_output_data_V_we0;
    end else begin
        p2_relu1_output_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        p4_input_data_V_address0 = p_i0_0_i2_cast_reg_3881;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        p4_input_data_V_address0 = tmp_25_fu_2380_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_input_data_V_address0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_address0;
    end else begin
        p4_input_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state65))) begin
        p4_input_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_input_data_V_ce0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_input_data_V_ce0;
    end else begin
        p4_input_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        p4_input_data_V_d0 = c3_output_data_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        p4_input_data_V_d0 = 16'd0;
    end else begin
        p4_input_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | ((1'b1 == ap_CS_fsm_state26) & (exitcond_i_i_i_i3_fu_2368_p2 == 1'd0)))) begin
        p4_input_data_V_we0 = 1'b1;
    end else begin
        p4_input_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        p4_output_data_V_address0 = p_i0_0_i3_cast9_fu_3125_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        p4_output_data_V_address0 = tmp_27_fu_2397_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_output_data_V_address0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_address0;
    end else begin
        p4_output_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state67))) begin
        p4_output_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_output_data_V_ce0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_ce0;
    end else begin
        p4_output_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        p4_output_data_V_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_output_data_V_d0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_d0;
    end else begin
        p4_output_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (exitcond_i_i2_i_i1_fu_2385_p2 == 1'd0))) begin
        p4_output_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_output_data_V_we0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_output_data_V_we0;
    end else begin
        p4_output_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        p4_relu1_input_data_address0 = tmp_28_fu_2414_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_relu1_input_data_address0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_address0;
    end else begin
        p4_relu1_input_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        p4_relu1_input_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_relu1_input_data_ce0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_ce0;
    end else begin
        p4_relu1_input_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        p4_relu1_input_data_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_relu1_input_data_d0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_d0;
    end else begin
        p4_relu1_input_data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (exitcond_i_i2_i_i_i_3_fu_2402_p2 == 1'd0))) begin
        p4_relu1_input_data_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_relu1_input_data_we0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_input_data_V_we0;
    end else begin
        p4_relu1_input_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        p4_relu1_output_dat_address0 = tmp_29_fu_2431_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_relu1_output_dat_address0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_address0;
    end else begin
        p4_relu1_output_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        p4_relu1_output_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_relu1_output_dat_ce0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_ce0;
    end else begin
        p4_relu1_output_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        p4_relu1_output_dat_d0 = 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_relu1_output_dat_d0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_d0;
    end else begin
        p4_relu1_output_dat_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i_i_i_i_i_i_3_fu_2419_p2 == 1'd0))) begin
        p4_relu1_output_dat_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        p4_relu1_output_dat_we0 = grp_forward_1_fu_1859_pool_layer_2_2_1_10_10_16_relu1_output_data_V_we0;
    end else begin
        p4_relu1_output_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i4_i_i_fu_1867_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond_i_i11_i_i_fu_1884_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_8_fu_1943_p2 == 1'd1) & (exitcond_i_i15_i_i_fu_1917_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_i15_i_i_fu_1917_p2 == 1'd1) & (tmp_8_fu_1943_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond_i_i_i_i_fu_1949_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i_i2_i_i_i_s_fu_1966_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (exitcond_i_i_i_i_i_i_fu_1983_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond_i_i_fu_2006_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_121_i_fu_2057_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (exitcond_i_i_i_i1_fu_2083_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i_i2_i_i_fu_2100_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (exitcond_i_i2_i_i_i_1_fu_2117_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond_i_i_i_i_i_i_1_fu_2134_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond_i_i4_i_i1_fu_2151_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond_i_i11_i_i1_fu_2168_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (tmp_19_fu_2224_p2 == 1'd1) & (exitcond_i_i15_i_i1_fu_2197_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((1'b1 == ap_CS_fsm_state19) & (exitcond_i_i15_i_i1_fu_2197_p2 == 1'd1) & (tmp_19_fu_2224_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond_i_i_i_i2_fu_2230_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (exitcond_i_i2_i_i_i_2_fu_2247_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_i_i_i_i_2_fu_2264_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (exitcond_i_i1_fu_2287_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (tmp_119_i_fu_2342_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i_i_i_i3_fu_2368_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (exitcond_i_i2_i_i1_fu_2385_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (exitcond_i_i2_i_i_i_3_fu_2402_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i_i_i_i_i_i_3_fu_2419_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (exitcond_i_i8_i_i2_fu_2436_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (exitcond_i_i19_i_i_fu_2453_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (tmp_34_fu_2509_p2 == 1'd1) & (exitcond_i_i4_i_i2_fu_2482_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if (((1'b1 == ap_CS_fsm_state33) & (exitcond_i_i4_i_i2_fu_2482_p2 == 1'd1) & (tmp_34_fu_2509_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (exitcond_i_i_i_i4_fu_2515_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (exitcond_i_i2_i_i_i_4_fu_2532_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (exitcond_i_i_i_i_i_i_4_fu_2549_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (exitcond_i_i2_fu_2572_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (tmp_117_i_fu_2620_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (exitcond_i_i4_i_i3_fu_2646_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (exitcond_i_i11_i_i2_fu_2663_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (tmp_48_fu_2742_p2 == 1'd1) & (exitcond_i_i_i_i5_fu_2716_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else if (((1'b1 == ap_CS_fsm_state44) & (exitcond_i_i_i_i5_fu_2716_p2 == 1'd1) & (tmp_48_fu_2742_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (exitcond_i_i3_fu_2748_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (tmp_115_i_fu_2829_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if ((~((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state48) & (exitcond2_fu_2854_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else if ((~((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state48) & (exitcond2_fu_2854_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_2877_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            if ((~((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond5_fu_2889_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else if ((~((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond5_fu_2889_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (exitcond4_fu_2922_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            if ((~((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state52) & (exitcond7_fu_2934_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else if ((~((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state52) & (exitcond7_fu_2934_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (exitcond6_fu_2967_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            if ((~((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state54) & (exitcond9_fu_2979_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else if ((~((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state54) & (exitcond9_fu_2979_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((1'b1 == ap_CS_fsm_state55) & (exitcond8_fu_3006_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state56 : begin
            if ((~((fcw_V_V_0_vld_out == 1'b0) & (exitcond1_fu_3048_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state56) & (exitcond1_fu_3048_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else if ((~((fcw_V_V_0_vld_out == 1'b0) & (exitcond1_fu_3048_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state56) & (exitcond1_fu_3048_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (grp_forward_2_fu_1831_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (tmp_64_fu_3079_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state60 : begin
            if (((1'b1 == ap_CS_fsm_state60) & (grp_forward_fu_1841_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((1'b1 == ap_CS_fsm_state61) & (tmp_66_fu_3096_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state63 : begin
            if (((1'b1 == ap_CS_fsm_state63) & (grp_forward_3_fu_1821_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (tmp_67_fu_3113_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (grp_forward_1_fu_1859_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (tmp_68_fu_3130_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (grp_forward_4_fu_1849_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & (tmp_69_fu_3147_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (exitcond_i_fu_3159_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            if (((1'b1 == ap_CS_fsm_state73) & (exitcond_0_i_fu_3205_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state76 : begin
            if (((outStream_V_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state76) & (outStream_V_V_1_ack_in == 1'b1) & (exitcond_fu_3259_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state76) & (outStream_V_V_1_ack_in == 1'b1) & (exitcond_fu_3259_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            if (((1'b1 == ap_CS_fsm_state77) & (outStream_V_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (outStream_V_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state48 = ((inStream_V_V_0_vld_out == 1'b0) & (exitcond2_fu_2854_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state50 = ((c1w_V_V_0_vld_out == 1'b0) & (exitcond5_fu_2889_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state52 = ((c3w_V_V_0_vld_out == 1'b0) & (exitcond7_fu_2934_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state54 = ((c5w_V_V_0_vld_out == 1'b0) & (exitcond9_fu_2979_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state56 = ((fcw_V_V_0_vld_out == 1'b0) & (exitcond1_fu_3048_p2 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c1_W_size_x_address0 = tmp_7_fu_2018_p1;

assign c1_W_size_y_address0 = tmp_7_fu_2018_p1;

assign c1_W_size_z_address0 = tmp_7_fu_2018_p1;

assign c1w_V_V_0_ack_in = c1w_V_V_0_state[1'd1];

assign c1w_V_V_0_load_A = (~c1w_V_V_0_sel_wr & c1w_V_V_0_state_cmp_full);

assign c1w_V_V_0_load_B = (c1w_V_V_0_state_cmp_full & c1w_V_V_0_sel_wr);

assign c1w_V_V_0_sel = c1w_V_V_0_sel_rd;

assign c1w_V_V_0_state_cmp_full = ((c1w_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign c1w_V_V_0_vld_in = c1w_V_V_TVALID;

assign c1w_V_V_0_vld_out = c1w_V_V_0_state[1'd0];

assign c1w_V_V_TREADY = c1w_V_V_0_state[1'd1];

assign c3_W_size_x_address0 = tmp_24_fu_2299_p1;

assign c3_W_size_y_address0 = tmp_24_fu_2299_p1;

assign c3_W_size_z_address0 = tmp_24_fu_2299_p1;

assign c3_W_size_z_load_cas_fu_2314_p1 = $signed(c3_W_size_z_q0);

assign c3w_V_V_0_ack_in = c3w_V_V_0_state[1'd1];

assign c3w_V_V_0_load_A = (~c3w_V_V_0_sel_wr & c3w_V_V_0_state_cmp_full);

assign c3w_V_V_0_load_B = (c3w_V_V_0_state_cmp_full & c3w_V_V_0_sel_wr);

assign c3w_V_V_0_sel = c3w_V_V_0_sel_rd;

assign c3w_V_V_0_state_cmp_full = ((c3w_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign c3w_V_V_0_vld_in = c3w_V_V_TVALID;

assign c3w_V_V_0_vld_out = c3w_V_V_0_state[1'd0];

assign c3w_V_V_TREADY = c3w_V_V_0_state[1'd1];

assign c5_W_size_x_address0 = tmp_39_fu_2584_p1;

assign c5_W_size_y_address0 = tmp_39_fu_2584_p1;

assign c5_W_size_z_address0 = tmp_39_fu_2584_p1;

assign c5w_V_V_0_ack_in = c5w_V_V_0_state[1'd1];

assign c5w_V_V_0_load_A = (~c5w_V_V_0_sel_wr & c5w_V_V_0_state_cmp_full);

assign c5w_V_V_0_load_B = (c5w_V_V_0_state_cmp_full & c5w_V_V_0_sel_wr);

assign c5w_V_V_0_sel = c5w_V_V_0_sel_rd;

assign c5w_V_V_0_state_cmp_full = ((c5w_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign c5w_V_V_0_vld_in = c5w_V_V_TVALID;

assign c5w_V_V_0_vld_out = c5w_V_V_0_state[1'd0];

assign c5w_V_V_TREADY = c5w_V_V_0_state[1'd1];

assign exitcond1_fu_3048_p2 = ((j6_reg_1709 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond2_fu_2854_p2 = ((idx_reg_1585 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond3_fu_2877_p2 = ((i37_reg_1596 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond4_fu_2922_p2 = ((i1_reg_1630 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond5_fu_2889_p2 = ((j_reg_1619 == 5'd25) ? 1'b1 : 1'b0);

assign exitcond6_fu_2967_p2 = ((i3_reg_1664 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond7_fu_2934_p2 = ((j2_reg_1653 == 8'd150) ? 1'b1 : 1'b0);

assign exitcond8_fu_3006_p2 = ((i5_reg_1698 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond9_fu_2979_p2 = ((j4_reg_1687 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond_0_i_fu_3205_p2 = ((p_z_assign_1_0_i_reg_1799 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_fu_3259_p2 = ((idx7_reg_1810 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i_fu_3159_p2 = ((p_z_assign_reg_1775 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i_i11_i_i1_fu_2168_p2 = ((i_0_i_i10_i_i1_reg_1236 == 11'd1600) ? 1'b1 : 1'b0);

assign exitcond_i_i11_i_i2_fu_2663_p2 = ((i_0_i_i10_i_i2_reg_1528 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i_i11_i_i_fu_1884_p2 = ((i_0_i_i10_i_i_reg_1069 == 13'd4704) ? 1'b1 : 1'b0);

assign exitcond_i_i15_i_i1_fu_2197_p2 = ((i_0_i_i14_i_i1_reg_1271 == 8'd150) ? 1'b1 : 1'b0);

assign exitcond_i_i15_i_i_fu_1917_p2 = ((i_0_i_i14_i_i_reg_1103 == 5'd25) ? 1'b1 : 1'b0);

assign exitcond_i_i19_i_i_fu_2453_p2 = ((i_0_i_i18_i_i_reg_1404 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i_i1_fu_2287_p2 = ((i_0_i_i1_reg_1315 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond_i_i2_fu_2572_p2 = ((i_0_i_i2_reg_1483 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i_i2_i_i1_fu_2385_p2 = ((i_0_i_i1_i_i1_reg_1360 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond_i_i2_i_i_fu_2100_p2 = ((i_0_i_i1_i_i_reg_1192 == 11'd1176) ? 1'b1 : 1'b0);

assign exitcond_i_i2_i_i_i_1_fu_2117_p2 = ((i_0_i_i1_i_i_i_i1_reg_1203 == 11'd1176) ? 1'b1 : 1'b0);

assign exitcond_i_i2_i_i_i_2_fu_2247_p2 = ((i_0_i_i1_i_i_i_i2_reg_1293 == 11'd1600) ? 1'b1 : 1'b0);

assign exitcond_i_i2_i_i_i_3_fu_2402_p2 = ((i_0_i_i1_i_i_i_i3_reg_1371 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond_i_i2_i_i_i_4_fu_2532_p2 = ((i_0_i_i1_i_i_i_i4_reg_1461 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i_i2_i_i_i_s_fu_1966_p2 = ((i_0_i_i1_i_i_i_i_reg_1125 == 13'd4704) ? 1'b1 : 1'b0);

assign exitcond_i_i3_fu_2748_p2 = ((i_0_i_i3_reg_1562 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_i_i4_i_i1_fu_2151_p2 = ((i_0_i_i3_i_i1_reg_1225 == 11'd1176) ? 1'b1 : 1'b0);

assign exitcond_i_i4_i_i2_fu_2482_p2 = ((i_0_i_i3_i_i2_reg_1439 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond_i_i4_i_i3_fu_2646_p2 = ((i_0_i_i3_i_i3_reg_1517 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i_i4_i_i_fu_1867_p2 = ((i_0_i_i3_i_i_reg_1058 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond_i_i8_i_i2_fu_2436_p2 = ((i_0_i_i7_i_i2_reg_1393 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_2006_p2 = ((i_0_i_i_reg_1147 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i1_fu_2083_p2 = ((i_0_i_i_i_i1_reg_1181 == 13'd4704) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i2_fu_2230_p2 = ((i_0_i_i_i_i2_reg_1282 == 11'd1176) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i3_fu_2368_p2 = ((i_0_i_i_i_i3_reg_1349 == 11'd1600) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i4_fu_2515_p2 = ((i_0_i_i_i_i4_reg_1450 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i5_fu_2716_p2 = ((i_0_i_i_i_i5_reg_1551 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i_fu_1949_p2 = ((i_0_i_i_i_i_reg_1114 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i_i_i_1_fu_2134_p2 = ((i_0_i_i_i_i_i_i1_reg_1214 == 11'd1176) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i_i_i_2_fu_2264_p2 = ((i_0_i_i_i_i_i_i2_reg_1304 == 11'd1600) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i_i_i_3_fu_2419_p2 = ((i_0_i_i_i_i_i_i3_reg_1382 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i_i_i_4_fu_2549_p2 = ((i_0_i_i_i_i_i_i4_reg_1472 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_i_i_i_i_i_i_fu_1983_p2 = ((i_0_i_i_i_i_i_i_reg_1136 == 13'd4704) ? 1'b1 : 1'b0);

assign fc6_W_size_x_address0 = tmp_50_fu_2760_p1;

assign fc6_W_size_y_address0 = tmp_50_fu_2760_p1;

assign fc6_W_size_z_address0 = tmp_50_fu_2760_p1;

assign fc6_W_size_z_load_ca_fu_2797_p1 = $signed(fc6_W_size_z_q0);

assign fcw_V_V_0_ack_in = fcw_V_V_0_state[1'd1];

assign fcw_V_V_0_load_A = (fcw_V_V_0_state_cmp_full & ~fcw_V_V_0_sel_wr);

assign fcw_V_V_0_load_B = (fcw_V_V_0_state_cmp_full & fcw_V_V_0_sel_wr);

assign fcw_V_V_0_sel = fcw_V_V_0_sel_rd;

assign fcw_V_V_0_state_cmp_full = ((fcw_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign fcw_V_V_0_vld_in = fcw_V_V_TVALID;

assign fcw_V_V_0_vld_out = fcw_V_V_0_state[1'd0];

assign fcw_V_V_TREADY = fcw_V_V_0_state[1'd1];

assign grp_forward_1_fu_1859_ap_start = grp_forward_1_fu_1859_ap_start_reg;

assign grp_forward_2_fu_1831_ap_start = grp_forward_2_fu_1831_ap_start_reg;

assign grp_forward_3_fu_1821_ap_start = grp_forward_3_fu_1821_ap_start_reg;

assign grp_forward_4_fu_1849_ap_start = grp_forward_4_fu_1849_ap_start_reg;

assign grp_forward_fu_1841_ap_start = grp_forward_fu_1841_ap_start_reg;

assign grp_fu_3276_p2 = {{p_Val2_0_i_reg_1786}, {12'd0}};

assign i_10_fu_2123_p2 = (i_0_i_i1_i_i_i_i1_reg_1203 + 11'd1);

assign i_11_fu_2140_p2 = (i_0_i_i_i_i_i_i1_reg_1214 + 11'd1);

assign i_12_fu_2157_p2 = (i_0_i_i3_i_i1_reg_1225 + 11'd1);

assign i_13_fu_2174_p2 = (i_0_i_i10_i_i1_reg_1236 + 11'd1);

assign i_14_fu_2203_p2 = (i_0_i_i14_i_i1_reg_1271 + 8'd1);

assign i_15_fu_2236_p2 = (i_0_i_i_i_i2_reg_1282 + 11'd1);

assign i_16_fu_2253_p2 = (i_0_i_i1_i_i_i_i2_reg_1293 + 11'd1);

assign i_17_fu_2270_p2 = (i_0_i_i_i_i_i_i2_reg_1304 + 11'd1);

assign i_18_fu_2347_p2 = (i_i1_reg_1338 + 8'd1);

assign i_19_fu_2625_p2 = (i_i2_reg_1506 + 9'd1);

assign i_1_fu_1890_p2 = (i_0_i_i10_i_i_reg_1069 + 13'd1);

assign i_20_fu_2293_p2 = (i_0_i_i1_reg_1315 + 5'd1);

assign i_2_fu_1923_p2 = (i_0_i_i14_i_i_reg_1103 + 5'd1);

assign i_37_fu_2374_p2 = (i_0_i_i_i_i3_reg_1349 + 11'd1);

assign i_3_fu_1955_p2 = (i_0_i_i_i_i_reg_1114 + 11'd1);

assign i_42_fu_2391_p2 = (i_0_i_i1_i_i1_reg_1360 + 9'd1);

assign i_43_fu_2408_p2 = (i_0_i_i1_i_i_i_i3_reg_1371 + 9'd1);

assign i_44_fu_2425_p2 = (i_0_i_i_i_i_i_i3_reg_1382 + 9'd1);

assign i_45_fu_2442_p2 = (i_0_i_i7_i_i2_reg_1393 + 9'd1);

assign i_46_fu_2459_p2 = (i_0_i_i18_i_i_reg_1404 + 7'd1);

assign i_47_fu_2488_p2 = (i_0_i_i3_i_i2_reg_1439 + 9'd1);

assign i_48_fu_2521_p2 = (i_0_i_i_i_i4_reg_1450 + 9'd1);

assign i_49_fu_2538_p2 = (i_0_i_i1_i_i_i_i4_reg_1461 + 7'd1);

assign i_4_fu_1972_p2 = (i_0_i_i1_i_i_i_i_reg_1125 + 13'd1);

assign i_50_fu_2555_p2 = (i_0_i_i_i_i_i_i4_reg_1472 + 7'd1);

assign i_51_fu_2578_p2 = (i_0_i_i2_reg_1483 + 7'd1);

assign i_52_fu_2652_p2 = (i_0_i_i3_i_i3_reg_1517 + 7'd1);

assign i_53_fu_2669_p2 = (i_0_i_i10_i_i2_reg_1528 + 4'd1);

assign i_54_fu_2722_p2 = (i_0_i_i_i_i5_reg_1551 + 7'd1);

assign i_55_fu_2754_p2 = (i_0_i_i3_reg_1562 + 4'd1);

assign i_56_fu_2834_p2 = (i_i3_reg_1574 + 7'd1);

assign i_57_fu_2883_p2 = (i37_reg_1596 + 3'd1);

assign i_58_fu_2928_p2 = (i1_reg_1630 + 5'd1);

assign i_59_fu_2973_p2 = (i3_reg_1664 + 7'd1);

assign i_5_fu_1989_p2 = (i_0_i_i_i_i_i_i_reg_1136 + 13'd1);

assign i_60_fu_3012_p2 = (i5_reg_1698 + 4'd1);

assign i_6_fu_2089_p2 = (i_0_i_i_i_i1_reg_1181 + 13'd1);

assign i_7_fu_2062_p2 = (i_i_reg_1170 + 5'd1);

assign i_8_fu_2012_p2 = (i_0_i_i_reg_1147 + 3'd1);

assign i_9_fu_2106_p2 = (i_0_i_i1_i_i_reg_1192 + 11'd1);

assign i_filter_fu_3165_p2 = (p_z_assign_reg_1775 + 4'd1);

assign i_fu_1873_p2 = (i_0_i_i3_i_i_reg_1058 + 11'd1);

assign i_i1_cast_fu_2338_p1 = i_i1_reg_1338;

assign i_i2_cast_fu_2616_p1 = i_i2_reg_1506;

assign i_i_cast_fu_2053_p1 = i_i_reg_1170;

assign i_z_0_i_fu_3211_p2 = (p_z_assign_1_0_i_reg_1799 + 7'd1);

assign idx_1_fu_2860_p2 = (idx_reg_1585 + 11'd1);

assign idx_2_fu_3265_p2 = (idx7_reg_1810 + 4'd1);

assign inStream_V_V_0_ack_in = inStream_V_V_0_state[1'd1];

assign inStream_V_V_0_load_A = (inStream_V_V_0_state_cmp_full & ~inStream_V_V_0_sel_wr);

assign inStream_V_V_0_load_B = (inStream_V_V_0_state_cmp_full & inStream_V_V_0_sel_wr);

assign inStream_V_V_0_sel = inStream_V_V_0_sel_rd;

assign inStream_V_V_0_state_cmp_full = ((inStream_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_V_0_vld_in = inStream_V_V_TVALID;

assign inStream_V_V_0_vld_out = inStream_V_V_0_state[1'd0];

assign inStream_V_V_TREADY = inStream_V_V_0_state[1'd1];

assign j_1_fu_2895_p2 = (j_reg_1619 + 5'd1);

assign j_2_fu_2940_p2 = (j2_reg_1653 + 8'd1);

assign j_3_fu_2985_p2 = (j4_reg_1687 + 9'd1);

assign j_4_fu_3054_p2 = (j6_reg_1709 + 7'd1);

assign next_mul1_fu_2185_p2 = (phi_mul1_reg_1259 + 12'd150);

assign next_mul2_fu_2281_p2 = (phi_mul2_reg_1326 + 12'd150);

assign next_mul3_fu_2470_p2 = (phi_mul3_reg_1427 + 16'd400);

assign next_mul4_fu_2566_p2 = (phi_mul4_reg_1494 + 16'd400);

assign next_mul5_fu_2871_p2 = (phi_mul5_reg_1607 + 8'd25);

assign next_mul6_fu_2916_p2 = (phi_mul6_reg_1641 + 12'd150);

assign next_mul7_fu_2961_p2 = (phi_mul7_reg_1675 + 16'd400);

assign next_mul9_fu_2000_p2 = (phi_mul8_reg_1158 + 8'd25);

assign next_mul_fu_1905_p2 = (phi_mul_reg_1092 + 7'd25);

assign outStream_V_V_1_ack_in = outStream_V_V_1_state[1'd1];

assign outStream_V_V_1_ack_out = outStream_V_V_TREADY;

assign outStream_V_V_1_load_A = (outStream_V_V_1_state_cmp_full & ~outStream_V_V_1_sel_wr);

assign outStream_V_V_1_load_B = (outStream_V_V_1_state_cmp_full & outStream_V_V_1_sel_wr);

assign outStream_V_V_1_sel = outStream_V_V_1_sel_rd;

assign outStream_V_V_1_state_cmp_full = ((outStream_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_V_1_vld_out = outStream_V_V_1_state[1'd0];

assign outStream_V_V_TDATA = outStream_V_V_1_data_out;

assign outStream_V_V_TVALID = outStream_V_V_1_state[1'd0];

assign p_i0_0_i1_cast_fu_3091_p1 = p_i0_0_i1_reg_1731;

assign p_i0_0_i2_cast_fu_3108_p1 = p_i0_0_i2_reg_1742;

assign p_i0_0_i3_cast9_fu_3125_p1 = p_i0_0_i3_reg_1753;

assign p_i0_0_i4_cast8_fu_3142_p1 = p_i0_0_i4_reg_1764;

assign p_i0_0_i_cast_fu_3074_p1 = p_i0_0_i_reg_1720;

assign p_i0_1_fu_3102_p2 = (p_i0_0_i1_reg_1731 + 11'd1);

assign p_i0_2_fu_3119_p2 = (p_i0_0_i2_reg_1742 + 11'd1);

assign p_i0_3_fu_3136_p2 = (p_i0_0_i3_reg_1753 + 9'd1);

assign p_i0_4_fu_3153_p2 = (p_i0_0_i4_reg_1764 + 7'd1);

assign p_i0_fu_3085_p2 = (p_i0_0_i_reg_1720 + 13'd1);

assign p_shl1_cast_fu_2706_p1 = tmp_46_fu_2698_p3;

assign p_shl2_cast_fu_2775_p1 = tmp_51_fu_2767_p3;

assign p_shl3_cast_fu_2787_p1 = tmp_52_fu_2779_p3;

assign p_shl4_cast_fu_3026_p1 = tmp_60_fu_3018_p3;

assign p_shl5_cast_fu_3038_p1 = tmp_61_fu_3030_p3;

assign p_shl6_cast_fu_3183_p1 = tmp_70_fu_3175_p3;

assign p_shl7_cast_fu_3195_p1 = tmp_71_fu_3187_p3;

assign p_shl_cast_fu_2694_p1 = tmp_45_fu_2686_p3;

assign phi_mul_cast_fu_1901_p1 = phi_mul_reg_1092;

assign tmp1_fu_2037_p2 = (tmp_9_fu_2029_p3 & c1_W_size_x_q0);

assign tmp2_fu_2322_p0 = tmp2_fu_2322_p00;

assign tmp2_fu_2322_p00 = c3_W_size_x_q0;

assign tmp2_fu_2322_p1 = tmp2_fu_2322_p10;

assign tmp2_fu_2322_p10 = $unsigned(c3_W_size_z_load_cas_fu_2314_p1);

assign tmp2_fu_2322_p2 = (tmp2_fu_2322_p0 * tmp2_fu_2322_p1);

assign tmp3_fu_2600_p0 = tmp3_fu_2600_p00;

assign tmp3_fu_2600_p00 = c5_W_size_x_load_reg_3647;

assign tmp3_fu_2600_p1 = tmp3_fu_2600_p10;

assign tmp3_fu_2600_p10 = c5_W_size_z_load_reg_3657;

assign tmp3_fu_2600_p2 = (tmp3_fu_2600_p0 * tmp3_fu_2600_p1);

assign tmp4_fu_2809_p2 = (tmp_54_fu_2801_p3 & fc6_W_size_z_load_ca_fu_2797_p1);

assign tmp_10_cast_fu_1938_p1 = tmp_1_fu_1933_p2;

assign tmp_10_fu_2095_p1 = i_0_i_i_i_i1_reg_1181;

assign tmp_115_i_fu_2829_p2 = ((i_i3_reg_1574 < tmp_i3_reg_3740) ? 1'b1 : 1'b0);

assign tmp_116_i_cast_fu_2840_p1 = i_i3_reg_1574;

assign tmp_117_i_fu_2620_p2 = (($signed(i_i2_cast_fu_2616_p1) < $signed(tmp_i2_reg_3662)) ? 1'b1 : 1'b0);

assign tmp_118_i_cast_fu_2631_p1 = i_i2_reg_1506;

assign tmp_119_i_fu_2342_p2 = (($signed(i_i1_cast_fu_2338_p1) < $signed(tmp_i1_reg_3513)) ? 1'b1 : 1'b0);

assign tmp_11_fu_2072_p2 = (phi_mul8_reg_1158 + tmp_122_i_cast_fu_2068_p1);

assign tmp_120_i_cast_fu_2353_p1 = i_i1_reg_1338;

assign tmp_121_i_fu_2057_p2 = (($signed(i_i_cast_fu_2053_p1) < $signed(tmp_i_reg_3379)) ? 1'b1 : 1'b0);

assign tmp_122_i_cast_fu_2068_p1 = i_i_reg_1170;

assign tmp_12_fu_2112_p1 = i_0_i_i1_i_i_reg_1192;

assign tmp_132_0_i_cast_fu_3222_p1 = p_z_assign_1_0_i_reg_1799;

assign tmp_132_0_i_fu_3217_p1 = p_z_assign_1_0_i_reg_1799;

assign tmp_13_fu_2129_p1 = i_0_i_i1_i_i_i_i1_reg_1203;

assign tmp_14_fu_2146_p1 = i_0_i_i_i_i_i_i1_reg_1214;

assign tmp_15_fu_2163_p1 = i_0_i_i3_i_i1_reg_1225;

assign tmp_16_fu_2180_p1 = i_0_i_i10_i_i1_reg_1236;

assign tmp_17_cast_fu_2078_p1 = tmp_11_fu_2072_p2;

assign tmp_18_fu_2191_p2 = (tmp_17_reg_1247 + 4'd1);

assign tmp_19_fu_2224_p2 = ((tmp_17_reg_1247 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_1_fu_1933_p2 = (phi_mul_cast_reg_3301 + tmp_9_cast_fu_1929_p1);

assign tmp_20_fu_2213_p2 = (phi_mul1_reg_1259 + tmp_28_cast_fu_2209_p1);

assign tmp_21_fu_2242_p1 = i_0_i_i_i_i2_reg_1282;

assign tmp_22_fu_2259_p1 = i_0_i_i1_i_i_i_i2_reg_1293;

assign tmp_23_fu_2276_p1 = i_0_i_i_i_i_i_i2_reg_1304;

assign tmp_24_fu_2299_p1 = i_0_i_i1_reg_1315;

assign tmp_25_fu_2380_p1 = i_0_i_i_i_i3_reg_1349;

assign tmp_26_fu_2357_p2 = (phi_mul2_reg_1326 + tmp_120_i_cast_fu_2353_p1);

assign tmp_27_fu_2397_p1 = i_0_i_i1_i_i1_reg_1360;

assign tmp_28_cast_fu_2209_p1 = i_0_i_i14_i_i1_reg_1271;

assign tmp_28_fu_2414_p1 = i_0_i_i1_i_i_i_i3_reg_1371;

assign tmp_29_cast_fu_2219_p1 = tmp_20_fu_2213_p2;

assign tmp_29_fu_2431_p1 = i_0_i_i_i_i_i_i3_reg_1382;

assign tmp_2_fu_1961_p1 = i_0_i_i_i_i_reg_1114;

assign tmp_30_fu_2448_p1 = i_0_i_i7_i_i2_reg_1393;

assign tmp_31_fu_2465_p1 = i_0_i_i18_i_i_reg_1404;

assign tmp_33_fu_2476_p2 = (tmp_32_reg_1415 + 7'd1);

assign tmp_34_fu_2509_p2 = ((tmp_32_reg_1415 == 7'd119) ? 1'b1 : 1'b0);

assign tmp_35_fu_2498_p2 = (phi_mul3_reg_1427 + tmp_47_cast_fu_2494_p1);

assign tmp_36_cast_fu_2363_p1 = tmp_26_fu_2357_p2;

assign tmp_36_fu_2527_p1 = i_0_i_i_i_i4_reg_1450;

assign tmp_37_fu_2544_p1 = i_0_i_i1_i_i_i_i4_reg_1461;

assign tmp_38_fu_2561_p1 = i_0_i_i_i_i_i_i4_reg_1472;

assign tmp_39_fu_2584_p1 = i_0_i_i2_reg_1483;

assign tmp_3_fu_1978_p1 = i_0_i_i1_i_i_i_i_reg_1125;

assign tmp_40_fu_2658_p1 = i_0_i_i3_i_i3_reg_1517;

assign tmp_41_fu_2635_p2 = (phi_mul4_reg_1494 + tmp_118_i_cast_fu_2631_p1);

assign tmp_42_fu_2675_p1 = i_0_i_i10_i_i2_reg_1528;

assign tmp_44_fu_2680_p2 = (tmp_43_reg_1539 + 4'd1);

assign tmp_45_fu_2686_p3 = {{tmp_43_reg_1539}, {7'd0}};

assign tmp_46_fu_2698_p3 = {{tmp_43_reg_1539}, {3'd0}};

assign tmp_47_cast_fu_2494_p1 = i_0_i_i3_i_i2_reg_1439;

assign tmp_47_fu_2710_p2 = (p_shl_cast_fu_2694_p1 - p_shl1_cast_fu_2706_p1);

assign tmp_48_cast_fu_2504_p1 = tmp_35_fu_2498_p2;

assign tmp_48_fu_2742_p2 = ((tmp_43_reg_1539 == 4'd9) ? 1'b1 : 1'b0);

assign tmp_49_fu_2732_p2 = (tmp_47_reg_3696 + tmp_63_cast_fu_2728_p1);

assign tmp_50_fu_2760_p1 = i_0_i_i3_reg_1562;

assign tmp_51_fu_2767_p3 = {{i_0_i_i3_reg_1562}, {7'd0}};

assign tmp_52_fu_2779_p3 = {{i_0_i_i3_reg_1562}, {3'd0}};

assign tmp_53_fu_2791_p2 = (p_shl2_cast_fu_2775_p1 - p_shl3_cast_fu_2787_p1);

assign tmp_54_fu_2801_p3 = ((fc6_W_size_x_q0[0:0] === 1'b1) ? 7'd127 : 7'd0);

assign tmp_55_cast_fu_2641_p1 = tmp_41_fu_2635_p2;

assign tmp_55_fu_2815_p3 = ((fc6_W_size_y_q0[0:0] === 1'b1) ? 7'd127 : 7'd0);

assign tmp_56_fu_2866_p1 = idx_reg_1585;

assign tmp_57_fu_2844_p2 = (tmp_53_reg_3735 + tmp_116_i_cast_fu_2840_p1);

assign tmp_58_fu_2905_p2 = (phi_mul5_reg_1607 + tmp_75_cast_fu_2901_p1);

assign tmp_59_fu_2950_p2 = (phi_mul6_reg_1641 + tmp_79_cast_fu_2946_p1);

assign tmp_5_fu_1911_p2 = (tmp_4_reg_1080 + 3'd1);

assign tmp_60_fu_3018_p3 = {{i5_reg_1698}, {7'd0}};

assign tmp_61_fu_3030_p3 = {{i5_reg_1698}, {3'd0}};

assign tmp_62_fu_3042_p2 = (p_shl4_cast_fu_3026_p1 - p_shl5_cast_fu_3038_p1);

assign tmp_63_cast_fu_2728_p1 = i_0_i_i_i_i5_reg_1551;

assign tmp_63_fu_2995_p2 = (phi_mul7_reg_1675 + tmp_84_cast_fu_2991_p1);

assign tmp_64_cast_fu_2737_p1 = $signed(tmp_49_fu_2732_p2);

assign tmp_64_fu_3079_p2 = ((p_i0_0_i_reg_1720 == 13'd4704) ? 1'b1 : 1'b0);

assign tmp_65_fu_3064_p2 = (tmp_62_reg_3832 + tmp_87_cast_fu_3060_p1);

assign tmp_66_fu_3096_p2 = ((p_i0_0_i1_reg_1731 == 11'd1176) ? 1'b1 : 1'b0);

assign tmp_67_fu_3113_p2 = ((p_i0_0_i2_reg_1742 == 11'd1600) ? 1'b1 : 1'b0);

assign tmp_68_fu_3130_p2 = ((p_i0_0_i3_reg_1753 == 9'd400) ? 1'b1 : 1'b0);

assign tmp_69_fu_3147_p2 = ((p_i0_0_i4_reg_1764 == 7'd120) ? 1'b1 : 1'b0);

assign tmp_6_fu_1995_p1 = i_0_i_i_i_i_i_i_reg_1136;

assign tmp_70_cast_fu_2849_p1 = $signed(tmp_57_fu_2844_p2);

assign tmp_70_fu_3175_p3 = {{p_z_assign_reg_1775}, {7'd0}};

assign tmp_71_fu_3187_p3 = {{p_z_assign_reg_1775}, {3'd0}};

assign tmp_72_fu_3199_p2 = (p_shl6_cast_fu_3183_p1 - p_shl7_cast_fu_3195_p1);

assign tmp_73_fu_3271_p1 = idx7_reg_1810;

assign tmp_74_fu_3226_p2 = (tmp_132_0_i_cast_fu_3222_p1 + tmp_72_reg_3948);

assign tmp_75_cast_fu_2901_p1 = j_reg_1619;

assign tmp_76_cast_fu_2911_p1 = tmp_58_fu_2905_p2;

assign tmp_79_cast_fu_2946_p1 = j2_reg_1653;

assign tmp_7_fu_2018_p1 = i_0_i_i_reg_1147;

assign tmp_80_cast_fu_2956_p1 = tmp_59_fu_2950_p2;

assign tmp_84_cast_fu_2991_p1 = j4_reg_1687;

assign tmp_85_cast_fu_3001_p1 = tmp_63_fu_2995_p2;

assign tmp_87_cast_fu_3060_p1 = j6_reg_1709;

assign tmp_88_cast_fu_3069_p1 = $signed(tmp_65_fu_3064_p2);

assign tmp_8_fu_1943_p2 = ((tmp_4_reg_1080 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_97_cast_fu_3231_p1 = $signed(tmp_74_fu_3226_p2);

assign tmp_9_cast_fu_1929_p1 = i_0_i_i14_i_i_reg_1103;

assign tmp_9_fu_2029_p3 = ((c1_W_size_z_q0[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign tmp_fu_1879_p1 = i_0_i_i3_i_i_reg_1058;

assign tmp_i1_fu_2332_p0 = tmp_i1_fu_2332_p00;

assign tmp_i1_fu_2332_p00 = tmp2_fu_2322_p2;

assign tmp_i1_fu_2332_p1 = tmp_i1_fu_2332_p10;

assign tmp_i1_fu_2332_p10 = c3_W_size_y_q0;

assign tmp_i1_fu_2332_p2 = (tmp_i1_fu_2332_p0 * tmp_i1_fu_2332_p1);

assign tmp_i2_fu_2610_p0 = tmp_i2_fu_2610_p00;

assign tmp_i2_fu_2610_p00 = tmp3_fu_2600_p2;

assign tmp_i2_fu_2610_p1 = tmp_i2_fu_2610_p10;

assign tmp_i2_fu_2610_p10 = c5_W_size_y_load_reg_3652;

assign tmp_i2_fu_2610_p2 = (tmp_i2_fu_2610_p0 * tmp_i2_fu_2610_p1);

assign tmp_i3_fu_2823_p2 = (tmp_55_fu_2815_p3 & tmp4_fu_2809_p2);

assign tmp_i4_fu_3171_p1 = p_z_assign_reg_1775;

assign tmp_i_fu_2047_p0 = tmp_i_fu_2047_p00;

assign tmp_i_fu_2047_p00 = c1_W_size_y_q0;

assign tmp_i_fu_2047_p1 = tmp_i_fu_2047_p10;

assign tmp_i_fu_2047_p10 = tmp1_fu_2037_p2;

assign tmp_i_fu_2047_p2 = (tmp_i_fu_2047_p0 * tmp_i_fu_2047_p1);

assign tmp_s_fu_1896_p1 = i_0_i_i10_i_i_reg_1069;

always @ (posedge ap_clk) begin
    phi_mul_cast_reg_3301[7] <= 1'b0;
    tmp_47_reg_3696[2:0] <= 3'b000;
    tmp_53_reg_3735[2:0] <= 3'b000;
    tmp_62_reg_3832[2:0] <= 3'b000;
    p_i0_0_i_cast_reg_3845[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    p_i0_0_i1_cast_reg_3863[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    p_i0_0_i2_cast_reg_3881[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    p_i0_0_i3_cast9_reg_3899[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    p_i0_0_i4_cast8_reg_3917[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_i4_reg_3943[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_72_reg_3948[2:0] <= 3'b000;
end

endmodule //lenet
