// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Padding_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Padding_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Padding_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> Padding_2::ap_ST_fsm_state1 = "1";
const sc_lv<5> Padding_2::ap_ST_fsm_state2 = "10";
const sc_lv<5> Padding_2::ap_ST_fsm_state3 = "100";
const sc_lv<5> Padding_2::ap_ST_fsm_state4 = "1000";
const sc_lv<5> Padding_2::ap_ST_fsm_state5 = "10000";
const sc_lv<32> Padding_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Padding_2::ap_const_lv32_1 = "1";
const sc_lv<1> Padding_2::ap_const_lv1_0 = "0";
const sc_lv<32> Padding_2::ap_const_lv32_2 = "10";
const sc_lv<1> Padding_2::ap_const_lv1_1 = "1";
const sc_lv<32> Padding_2::ap_const_lv32_3 = "11";
const sc_lv<9> Padding_2::ap_const_lv9_5 = "101";
const sc_lv<9> Padding_2::ap_const_lv9_0 = "000000000";
const sc_lv<5> Padding_2::ap_const_lv5_0 = "00000";
const sc_lv<3> Padding_2::ap_const_lv3_0 = "000";
const sc_lv<32> Padding_2::ap_const_lv32_4 = "100";
const sc_lv<9> Padding_2::ap_const_lv9_19 = "11001";
const sc_lv<5> Padding_2::ap_const_lv5_10 = "10000";
const sc_lv<5> Padding_2::ap_const_lv5_1 = "1";
const sc_lv<3> Padding_2::ap_const_lv3_5 = "101";
const sc_lv<3> Padding_2::ap_const_lv3_1 = "1";
const sc_lv<2> Padding_2::ap_const_lv2_0 = "00";
const sc_lv<9> Padding_2::ap_const_lv9_1 = "1";
const bool Padding_2::ap_const_boolean_1 = true;

Padding_2::Padding_2(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_170_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_170_p2 );

    SC_METHOD(thread_exitcond3_fu_192_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( y_reg_132 );

    SC_METHOD(thread_exitcond4_fu_170_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( z_reg_87 );

    SC_METHOD(thread_exitcond_fu_238_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( indvars_iv1_reg_110 );
    sensitive << ( idx_2_reg_143 );

    SC_METHOD(thread_idx_3_fu_182_p2);
    sensitive << ( idx_reg_75 );

    SC_METHOD(thread_idx_4_fu_266_p2);
    sensitive << ( idx_2_reg_143 );

    SC_METHOD(thread_in_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_104_fu_261_p1 );

    SC_METHOD(thread_in_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_indvars_iv_next2_fu_272_p2);
    sensitive << ( indvars_iv1_reg_110 );

    SC_METHOD(thread_indvars_iv_next_fu_228_p2);
    sensitive << ( indvars_iv_reg_63 );

    SC_METHOD(thread_next_mul_fu_164_p2);
    sensitive << ( phi_mul_reg_98 );

    SC_METHOD(thread_out_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_103_fu_278_p1 );

    SC_METHOD(thread_out_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_V_d0);
    sensitive << ( in_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_V_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_p_shl_fu_204_p3);
    sensitive << ( y_reg_132 );

    SC_METHOD(thread_tmp1_fu_250_p2);
    sensitive << ( phi_mul_reg_98 );
    sensitive << ( x_cast_fu_234_p1 );

    SC_METHOD(thread_tmp_103_fu_278_p1);
    sensitive << ( tmp_s_reg_331 );

    SC_METHOD(thread_tmp_104_fu_261_p1);
    sensitive << ( idx_2_reg_143 );

    SC_METHOD(thread_tmp_50_fu_212_p2);
    sensitive << ( idx_1_reg_121 );

    SC_METHOD(thread_tmp_cast_fu_224_p1);
    sensitive << ( tmp_fu_218_p2 );

    SC_METHOD(thread_tmp_fu_218_p2);
    sensitive << ( y_cast3_fu_188_p1 );
    sensitive << ( p_shl_fu_204_p3 );

    SC_METHOD(thread_tmp_s_fu_256_p2);
    sensitive << ( tmp_cast_reg_313 );
    sensitive << ( tmp1_fu_250_p2 );

    SC_METHOD(thread_x_1_fu_244_p2);
    sensitive << ( x_reg_153 );

    SC_METHOD(thread_x_cast_fu_234_p1);
    sensitive << ( x_reg_153 );

    SC_METHOD(thread_y_1_fu_198_p2);
    sensitive << ( y_reg_132 );

    SC_METHOD(thread_y_cast3_fu_188_p1);
    sensitive << ( y_reg_132 );

    SC_METHOD(thread_z_1_fu_176_p2);
    sensitive << ( z_reg_87 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_170_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_238_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Padding_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_V_address0, "(port)out_V_address0");
    sc_trace(mVcdFile, out_V_ce0, "(port)out_V_ce0");
    sc_trace(mVcdFile, out_V_we0, "(port)out_V_we0");
    sc_trace(mVcdFile, out_V_d0, "(port)out_V_d0");
    sc_trace(mVcdFile, in_V_address0, "(port)in_V_address0");
    sc_trace(mVcdFile, in_V_ce0, "(port)in_V_ce0");
    sc_trace(mVcdFile, in_V_q0, "(port)in_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, next_mul_fu_164_p2, "next_mul_fu_164_p2");
    sc_trace(mVcdFile, next_mul_reg_282, "next_mul_reg_282");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, z_1_fu_176_p2, "z_1_fu_176_p2");
    sc_trace(mVcdFile, z_1_reg_290, "z_1_reg_290");
    sc_trace(mVcdFile, idx_3_fu_182_p2, "idx_3_fu_182_p2");
    sc_trace(mVcdFile, idx_3_reg_295, "idx_3_reg_295");
    sc_trace(mVcdFile, exitcond4_fu_170_p2, "exitcond4_fu_170_p2");
    sc_trace(mVcdFile, y_1_fu_198_p2, "y_1_fu_198_p2");
    sc_trace(mVcdFile, y_1_reg_303, "y_1_reg_303");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_50_fu_212_p2, "tmp_50_fu_212_p2");
    sc_trace(mVcdFile, tmp_50_reg_308, "tmp_50_reg_308");
    sc_trace(mVcdFile, exitcond3_fu_192_p2, "exitcond3_fu_192_p2");
    sc_trace(mVcdFile, tmp_cast_fu_224_p1, "tmp_cast_fu_224_p1");
    sc_trace(mVcdFile, tmp_cast_reg_313, "tmp_cast_reg_313");
    sc_trace(mVcdFile, indvars_iv_next_fu_228_p2, "indvars_iv_next_fu_228_p2");
    sc_trace(mVcdFile, x_1_fu_244_p2, "x_1_fu_244_p2");
    sc_trace(mVcdFile, x_1_reg_326, "x_1_reg_326");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_s_fu_256_p2, "tmp_s_fu_256_p2");
    sc_trace(mVcdFile, tmp_s_reg_331, "tmp_s_reg_331");
    sc_trace(mVcdFile, exitcond_fu_238_p2, "exitcond_fu_238_p2");
    sc_trace(mVcdFile, idx_4_fu_266_p2, "idx_4_fu_266_p2");
    sc_trace(mVcdFile, idx_4_reg_341, "idx_4_reg_341");
    sc_trace(mVcdFile, indvars_iv_next2_fu_272_p2, "indvars_iv_next2_fu_272_p2");
    sc_trace(mVcdFile, indvars_iv_reg_63, "indvars_iv_reg_63");
    sc_trace(mVcdFile, idx_reg_75, "idx_reg_75");
    sc_trace(mVcdFile, z_reg_87, "z_reg_87");
    sc_trace(mVcdFile, phi_mul_reg_98, "phi_mul_reg_98");
    sc_trace(mVcdFile, indvars_iv1_reg_110, "indvars_iv1_reg_110");
    sc_trace(mVcdFile, idx_1_reg_121, "idx_1_reg_121");
    sc_trace(mVcdFile, y_reg_132, "y_reg_132");
    sc_trace(mVcdFile, idx_2_reg_143, "idx_2_reg_143");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, x_reg_153, "x_reg_153");
    sc_trace(mVcdFile, tmp_104_fu_261_p1, "tmp_104_fu_261_p1");
    sc_trace(mVcdFile, tmp_103_fu_278_p1, "tmp_103_fu_278_p1");
    sc_trace(mVcdFile, y_cast3_fu_188_p1, "y_cast3_fu_188_p1");
    sc_trace(mVcdFile, p_shl_fu_204_p3, "p_shl_fu_204_p3");
    sc_trace(mVcdFile, tmp_fu_218_p2, "tmp_fu_218_p2");
    sc_trace(mVcdFile, x_cast_fu_234_p1, "x_cast_fu_234_p1");
    sc_trace(mVcdFile, tmp1_fu_250_p2, "tmp1_fu_250_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Padding_2::~Padding_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Padding_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_170_p2.read(), ap_const_lv1_0))) {
        idx_1_reg_121 = idx_reg_75.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_238_p2.read()))) {
        idx_1_reg_121 = tmp_50_reg_308.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_192_p2.read()))) {
        idx_2_reg_143 = idx_1_reg_121.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        idx_2_reg_143 = idx_4_reg_341.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        idx_reg_75 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_192_p2.read(), ap_const_lv1_1))) {
        idx_reg_75 = idx_3_reg_295.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_170_p2.read(), ap_const_lv1_0))) {
        indvars_iv1_reg_110 = indvars_iv_reg_63.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_238_p2.read()))) {
        indvars_iv1_reg_110 = indvars_iv_next2_fu_272_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvars_iv_reg_63 = ap_const_lv9_5;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_192_p2.read(), ap_const_lv1_1))) {
        indvars_iv_reg_63 = indvars_iv_next_fu_228_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_98 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_192_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_98 = next_mul_reg_282.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_192_p2.read()))) {
        x_reg_153 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_reg_153 = x_1_reg_326.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_170_p2.read(), ap_const_lv1_0))) {
        y_reg_132 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_238_p2.read()))) {
        y_reg_132 = y_1_reg_303.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        z_reg_87 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_192_p2.read(), ap_const_lv1_1))) {
        z_reg_87 = z_1_reg_290.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_170_p2.read(), ap_const_lv1_0))) {
        idx_3_reg_295 = idx_3_fu_182_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_238_p2.read()))) {
        idx_4_reg_341 = idx_4_fu_266_p2.read();
        tmp_s_reg_331 = tmp_s_fu_256_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul_reg_282 = next_mul_fu_164_p2.read();
        z_1_reg_290 = z_1_fu_176_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_192_p2.read()))) {
        tmp_50_reg_308 = tmp_50_fu_212_p2.read();
        tmp_cast_reg_313 = tmp_cast_fu_224_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        x_1_reg_326 = x_1_fu_244_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        y_1_reg_303 = y_1_fu_198_p2.read();
    }
}

void Padding_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Padding_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Padding_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Padding_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Padding_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Padding_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_170_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Padding_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Padding_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_170_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Padding_2::thread_exitcond3_fu_192_p2() {
    exitcond3_fu_192_p2 = (!y_reg_132.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(y_reg_132.read() == ap_const_lv3_5);
}

void Padding_2::thread_exitcond4_fu_170_p2() {
    exitcond4_fu_170_p2 = (!z_reg_87.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(z_reg_87.read() == ap_const_lv5_10);
}

void Padding_2::thread_exitcond_fu_238_p2() {
    exitcond_fu_238_p2 = (!idx_2_reg_143.read().is_01() || !indvars_iv1_reg_110.read().is_01())? sc_lv<1>(): sc_lv<1>(idx_2_reg_143.read() == indvars_iv1_reg_110.read());
}

void Padding_2::thread_idx_3_fu_182_p2() {
    idx_3_fu_182_p2 = (!idx_reg_75.read().is_01() || !ap_const_lv9_19.is_01())? sc_lv<9>(): (sc_biguint<9>(idx_reg_75.read()) + sc_biguint<9>(ap_const_lv9_19));
}

void Padding_2::thread_idx_4_fu_266_p2() {
    idx_4_fu_266_p2 = (!idx_2_reg_143.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(idx_2_reg_143.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void Padding_2::thread_in_V_address0() {
    in_V_address0 =  (sc_lv<9>) (tmp_104_fu_261_p1.read());
}

void Padding_2::thread_in_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in_V_ce0 = ap_const_logic_1;
    } else {
        in_V_ce0 = ap_const_logic_0;
    }
}

void Padding_2::thread_indvars_iv_next2_fu_272_p2() {
    indvars_iv_next2_fu_272_p2 = (!indvars_iv1_reg_110.read().is_01() || !ap_const_lv9_5.is_01())? sc_lv<9>(): (sc_biguint<9>(indvars_iv1_reg_110.read()) + sc_biguint<9>(ap_const_lv9_5));
}

void Padding_2::thread_indvars_iv_next_fu_228_p2() {
    indvars_iv_next_fu_228_p2 = (!indvars_iv_reg_63.read().is_01() || !ap_const_lv9_19.is_01())? sc_lv<9>(): (sc_biguint<9>(indvars_iv_reg_63.read()) + sc_biguint<9>(ap_const_lv9_19));
}

void Padding_2::thread_next_mul_fu_164_p2() {
    next_mul_fu_164_p2 = (!phi_mul_reg_98.read().is_01() || !ap_const_lv9_19.is_01())? sc_lv<9>(): (sc_biguint<9>(phi_mul_reg_98.read()) + sc_biguint<9>(ap_const_lv9_19));
}

void Padding_2::thread_out_V_address0() {
    out_V_address0 =  (sc_lv<9>) (tmp_103_fu_278_p1.read());
}

void Padding_2::thread_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_V_ce0 = ap_const_logic_1;
    } else {
        out_V_ce0 = ap_const_logic_0;
    }
}

void Padding_2::thread_out_V_d0() {
    out_V_d0 = in_V_q0.read();
}

void Padding_2::thread_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_V_we0 = ap_const_logic_1;
    } else {
        out_V_we0 = ap_const_logic_0;
    }
}

void Padding_2::thread_p_shl_fu_204_p3() {
    p_shl_fu_204_p3 = esl_concat<3,2>(y_reg_132.read(), ap_const_lv2_0);
}

void Padding_2::thread_tmp1_fu_250_p2() {
    tmp1_fu_250_p2 = (!phi_mul_reg_98.read().is_01() || !x_cast_fu_234_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(phi_mul_reg_98.read()) + sc_biguint<9>(x_cast_fu_234_p1.read()));
}

void Padding_2::thread_tmp_103_fu_278_p1() {
    tmp_103_fu_278_p1 = esl_zext<64,9>(tmp_s_reg_331.read());
}

void Padding_2::thread_tmp_104_fu_261_p1() {
    tmp_104_fu_261_p1 = esl_zext<64,9>(idx_2_reg_143.read());
}

void Padding_2::thread_tmp_50_fu_212_p2() {
    tmp_50_fu_212_p2 = (!idx_1_reg_121.read().is_01() || !ap_const_lv9_5.is_01())? sc_lv<9>(): (sc_biguint<9>(idx_1_reg_121.read()) + sc_biguint<9>(ap_const_lv9_5));
}

void Padding_2::thread_tmp_cast_fu_224_p1() {
    tmp_cast_fu_224_p1 = esl_zext<9,5>(tmp_fu_218_p2.read());
}

void Padding_2::thread_tmp_fu_218_p2() {
    tmp_fu_218_p2 = (!y_cast3_fu_188_p1.read().is_01() || !p_shl_fu_204_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(y_cast3_fu_188_p1.read()) + sc_biguint<5>(p_shl_fu_204_p3.read()));
}

void Padding_2::thread_tmp_s_fu_256_p2() {
    tmp_s_fu_256_p2 = (!tmp1_fu_250_p2.read().is_01() || !tmp_cast_reg_313.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp1_fu_250_p2.read()) + sc_biguint<9>(tmp_cast_reg_313.read()));
}

void Padding_2::thread_x_1_fu_244_p2() {
    x_1_fu_244_p2 = (!x_reg_153.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_reg_153.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Padding_2::thread_x_cast_fu_234_p1() {
    x_cast_fu_234_p1 = esl_zext<9,3>(x_reg_153.read());
}

void Padding_2::thread_y_1_fu_198_p2() {
    y_1_fu_198_p2 = (!y_reg_132.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_reg_132.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Padding_2::thread_y_cast3_fu_188_p1() {
    y_cast3_fu_188_p1 = esl_zext<5,3>(y_reg_132.read());
}

void Padding_2::thread_z_1_fu_176_p2() {
    z_1_fu_176_p2 = (!z_reg_87.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(z_reg_87.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Padding_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_170_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_192_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_238_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

