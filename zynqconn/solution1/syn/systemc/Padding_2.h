// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Padding_2_HH_
#define _Padding_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Padding_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > out_V_address0;
    sc_out< sc_logic > out_V_ce0;
    sc_out< sc_logic > out_V_we0;
    sc_out< sc_lv<16> > out_V_d0;
    sc_out< sc_lv<9> > in_V_address0;
    sc_out< sc_logic > in_V_ce0;
    sc_in< sc_lv<16> > in_V_q0;


    // Module declarations
    Padding_2(sc_module_name name);
    SC_HAS_PROCESS(Padding_2);

    ~Padding_2();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > next_mul_fu_164_p2;
    sc_signal< sc_lv<9> > next_mul_reg_282;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > z_1_fu_176_p2;
    sc_signal< sc_lv<5> > z_1_reg_290;
    sc_signal< sc_lv<9> > idx_3_fu_182_p2;
    sc_signal< sc_lv<9> > idx_3_reg_295;
    sc_signal< sc_lv<1> > exitcond4_fu_170_p2;
    sc_signal< sc_lv<3> > y_1_fu_198_p2;
    sc_signal< sc_lv<3> > y_1_reg_303;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > tmp_50_fu_212_p2;
    sc_signal< sc_lv<9> > tmp_50_reg_308;
    sc_signal< sc_lv<1> > exitcond3_fu_192_p2;
    sc_signal< sc_lv<9> > tmp_cast_fu_224_p1;
    sc_signal< sc_lv<9> > tmp_cast_reg_313;
    sc_signal< sc_lv<9> > indvars_iv_next_fu_228_p2;
    sc_signal< sc_lv<3> > x_1_fu_244_p2;
    sc_signal< sc_lv<3> > x_1_reg_326;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<9> > tmp_s_fu_256_p2;
    sc_signal< sc_lv<9> > tmp_s_reg_331;
    sc_signal< sc_lv<1> > exitcond_fu_238_p2;
    sc_signal< sc_lv<9> > idx_4_fu_266_p2;
    sc_signal< sc_lv<9> > idx_4_reg_341;
    sc_signal< sc_lv<9> > indvars_iv_next2_fu_272_p2;
    sc_signal< sc_lv<9> > indvars_iv_reg_63;
    sc_signal< sc_lv<9> > idx_reg_75;
    sc_signal< sc_lv<5> > z_reg_87;
    sc_signal< sc_lv<9> > phi_mul_reg_98;
    sc_signal< sc_lv<9> > indvars_iv1_reg_110;
    sc_signal< sc_lv<9> > idx_1_reg_121;
    sc_signal< sc_lv<3> > y_reg_132;
    sc_signal< sc_lv<9> > idx_2_reg_143;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > x_reg_153;
    sc_signal< sc_lv<64> > tmp_104_fu_261_p1;
    sc_signal< sc_lv<64> > tmp_103_fu_278_p1;
    sc_signal< sc_lv<5> > y_cast3_fu_188_p1;
    sc_signal< sc_lv<5> > p_shl_fu_204_p3;
    sc_signal< sc_lv<5> > tmp_fu_218_p2;
    sc_signal< sc_lv<9> > x_cast_fu_234_p1;
    sc_signal< sc_lv<9> > tmp1_fu_250_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<9> ap_const_lv9_5;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<9> ap_const_lv9_19;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<9> ap_const_lv9_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond3_fu_192_p2();
    void thread_exitcond4_fu_170_p2();
    void thread_exitcond_fu_238_p2();
    void thread_idx_3_fu_182_p2();
    void thread_idx_4_fu_266_p2();
    void thread_in_V_address0();
    void thread_in_V_ce0();
    void thread_indvars_iv_next2_fu_272_p2();
    void thread_indvars_iv_next_fu_228_p2();
    void thread_next_mul_fu_164_p2();
    void thread_out_V_address0();
    void thread_out_V_ce0();
    void thread_out_V_d0();
    void thread_out_V_we0();
    void thread_p_shl_fu_204_p3();
    void thread_tmp1_fu_250_p2();
    void thread_tmp_103_fu_278_p1();
    void thread_tmp_104_fu_261_p1();
    void thread_tmp_50_fu_212_p2();
    void thread_tmp_cast_fu_224_p1();
    void thread_tmp_fu_218_p2();
    void thread_tmp_s_fu_256_p2();
    void thread_x_1_fu_244_p2();
    void thread_x_cast_fu_234_p1();
    void thread_y_1_fu_198_p2();
    void thread_y_cast3_fu_188_p1();
    void thread_z_1_fu_176_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
